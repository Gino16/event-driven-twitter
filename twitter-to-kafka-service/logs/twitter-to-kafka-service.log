2023-04-01 11:19:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-2C2GKQ4 with PID 22760 (C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes started by ginof in C:\Users\ginof\Documents\Projects\event-driven-twitter)
2023-04-01 11:19:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-04-01 11:19:50 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:19:50 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:20:23 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-2C2GKQ4 with PID 17176 (C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes started by ginof in C:\Users\ginof\Documents\Projects\event-driven-twitter)
2023-04-01 11:20:23 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-04-01 11:20:23 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:20:23 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:21:36 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-2C2GKQ4 with PID 22060 (C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes started by ginof in C:\Users\ginof\Documents\Projects\event-driven-twitter)
2023-04-01 11:21:36 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-04-01 11:21:36 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:21:36 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:23:17 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-2C2GKQ4 with PID 11460 (C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes started by ginof in C:\Users\ginof\Documents\Projects\event-driven-twitter)
2023-04-01 11:23:17 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-04-01 11:23:18 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:23:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:27:33 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 11:27:33 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 11:27:33 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:27:33 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:41:02 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 11:41:03 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 11:41:03 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:41:03 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:44:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 11:44:07 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 11:44:07 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:44:07 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:48:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 11:48:16 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 11:48:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:48:17 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 11:48:26 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 11:48:26 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 11:48:26 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 11:48:26 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:13:15 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:13:16 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:13:16 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:13:16 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:17:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:17:17 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:17:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:17:17 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:20:28 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:20:29 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:20:29 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:20:29 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:22:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:22:08 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:22:08 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:22:08 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:22:26 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:22:26 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:22:26 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:22:27 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:28:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:28:17 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:28:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:28:17 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:28:48 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication on DESKTOP-2C2GKQ4 with PID 20088 (C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes started by ginof in C:\Users\ginof\Documents\Projects\event-driven-twitter)
2023-04-01 12:28:48 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2023-04-01 12:28:48 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:28:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:29:08 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2023-04-01 12:29:09 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:29:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
2023-04-01 12:29:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [C:\Users\ginof\Documents\Projects\event-driven-twitter\twitter-to-kafka-service\target\classes\com\gino\microservices\twittertokafkaservice\runner\impl\MockKafkaStreamRunner.class]; nested exception is java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:452)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:315)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.IllegalStateException: Error processing condition on com.gino.microservices.twittertokafkaservice.runner.impl.MockKafkaStreamRunner
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:88)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:71)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isConditionMatch(ClassPathScanningCandidateComponentProvider.java:513)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:496)
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:169)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.evaluateExpression(OnExpressionCondition.java:60)
	at org.springframework.boot.autoconfigure.condition.OnExpressionCondition.getMatchOutcome(OnExpressionCondition.java:48)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:147)
	... 30 common frames omitted
2023-04-01 12:30:12 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-04-01 12:30:13 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=dfd95febc256876f8ca0db09489732e26b81648f, state=null
2023-04-01 12:30:13 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-01 12:30:13 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:30:14 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=0a5354a8-0c77-31bc-96f1-1e3ad38c0165
2023-04-01 12:30:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$8236bb63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-01 12:30:14 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-01 12:30:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 12:30:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 12:30:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680370214546
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:16 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-01 12:30:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:16 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 4.95 seconds (JVM running for 5.97)
2023-04-01 12:30:16 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-01 12:30:16 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-01 12:30:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:19 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:19 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:19 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:20 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:20 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:20 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:27 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:43 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:43 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:43 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:44 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Call(callName=fetchMetadata, deadlineMs=1680370244553) timed out at 1680370244559 after 1 attempt(s)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment.
2023-04-01 12:30:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:46 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:46 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:30:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:30:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:30:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:06 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:06 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 12:31:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 12:31:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 12:31:14 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Call(callName=fetchMetadata, deadlineMs=1680370274559) timed out at 1680370274561 after 1 attempt(s)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment.
2023-04-01 12:31:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Call(callName=fetchMetadata, deadlineMs=1680370304561) timed out at 9223372036854775807 after 1 attempt(s)
Caused by: org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited.
2023-04-01 12:31:16 [SpringContextShutdownHook] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Closing Kafka Producer
2023-04-01 12:32:05 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-04-01 12:32:06 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=dfd95febc256876f8ca0db09489732e26b81648f, state=null
2023-04-01 12:32:06 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-01 12:32:06 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 12:32:06 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=0a5354a8-0c77-31bc-96f1-1e3ad38c0165
2023-04-01 12:32:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$3295b5dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-01 12:32:07 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-01 12:32:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 12:32:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 12:32:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680370327052
2023-04-01 12:32:08 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-01 12:32:09 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.051 seconds (JVM running for 6.032)
2023-04-01 12:32:09 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-01 12:32:09 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-01 12:32:09 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-01 12:32:09 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-01 12:32:09 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-01 12:32:09 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:32:09 -0500 2023","id":"8354112189448071401","text":"mara Lorem massa elit magna purus Spring ipsum Maecenas purus posuere ipsum","user":{"id":"6805697863248856005"}}
2023-04-01 12:32:09 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara Lorem massa elit magna purus Spring ipsum Maecenas purus posuere ipsum and sending to kafka topic twitter-topic
2023-04-01 12:32:09 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6805697863248856005, "id": 8354112189448071401, "text": "mara Lorem massa elit magna purus Spring ipsum Maecenas purus posuere ipsum", "createdAt": 1680370329000}' to topic='twitter-topic' with key '8354112189448071401'
2023-04-01 12:32:09 [pool-1-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-01 12:32:09 [pool-1-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-01 12:32:09 [pool-1-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-01 12:32:09 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 12:32:09 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 12:32:09 [pool-1-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680370329668
2023-04-01 12:32:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: hQmiVoG2QiKlarcbOWOQkA
2023-04-01 12:32:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:32:20 -0500 2023","id":"3401073371315010216","text":"posuere ipsum amet yltricies Lorem Microservices mara magna conque lectus","user":{"id":"1254408802976859289"}}
2023-04-01 12:32:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere ipsum amet yltricies Lorem Microservices mara magna conque lectus and sending to kafka topic twitter-topic
2023-04-01 12:32:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1254408802976859289, "id": 3401073371315010216, "text": "posuere ipsum amet yltricies Lorem Microservices mara magna conque lectus", "createdAt": 1680370340000}' to topic='twitter-topic' with key '3401073371315010216'
2023-04-01 12:32:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:32:30 -0500 2023","id":"3540871070626794894","text":"mara consectetuer sit massa adipiscing porttitor Kafka posuere dolor Lorem lectus","user":{"id":"7593739562095612263"}}
2023-04-01 12:32:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara consectetuer sit massa adipiscing porttitor Kafka posuere dolor Lorem lectus and sending to kafka topic twitter-topic
2023-04-01 12:32:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7593739562095612263, "id": 3540871070626794894, "text": "mara consectetuer sit massa adipiscing porttitor Kafka posuere dolor Lorem lectus", "createdAt": 1680370350000}' to topic='twitter-topic' with key '3540871070626794894'
2023-04-01 12:32:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:32:40 -0500 2023","id":"7329026400569883304","text":"libero libero mara pulvinar Spring conque consectetuer","user":{"id":"940324566180501737"}}
2023-04-01 12:32:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero libero mara pulvinar Spring conque consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:32:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 940324566180501737, "id": 7329026400569883304, "text": "libero libero mara pulvinar Spring conque consectetuer", "createdAt": 1680370360000}' to topic='twitter-topic' with key '7329026400569883304'
2023-04-01 12:32:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:32:50 -0500 2023","id":"3317895958229137679","text":"amet pulvinar mara porttitor conque conque ipsum sit Kafka elit sed amet massa posuere dolor","user":{"id":"8343803688148674518"}}
2023-04-01 12:32:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet pulvinar mara porttitor conque conque ipsum sit Kafka elit sed amet massa posuere dolor and sending to kafka topic twitter-topic
2023-04-01 12:32:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8343803688148674518, "id": 3317895958229137679, "text": "amet pulvinar mara porttitor conque conque ipsum sit Kafka elit sed amet massa posuere dolor", "createdAt": 1680370370000}' to topic='twitter-topic' with key '3317895958229137679'
2023-04-01 12:33:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:00 -0500 2023","id":"7697640601714791009","text":"libero lectus conque lectus Lorem Elasticsearch Lorem sed porttitor dolor","user":{"id":"2881383466982510238"}}
2023-04-01 12:33:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero lectus conque lectus Lorem Elasticsearch Lorem sed porttitor dolor and sending to kafka topic twitter-topic
2023-04-01 12:33:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2881383466982510238, "id": 7697640601714791009, "text": "libero lectus conque lectus Lorem Elasticsearch Lorem sed porttitor dolor", "createdAt": 1680370380000}' to topic='twitter-topic' with key '7697640601714791009'
2023-04-01 12:33:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:10 -0500 2023","id":"5571788259953333369","text":"pulvinar posuere libero sit Kafka amet Lorem","user":{"id":"7548105158566876079"}}
2023-04-01 12:33:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar posuere libero sit Kafka amet Lorem and sending to kafka topic twitter-topic
2023-04-01 12:33:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7548105158566876079, "id": 5571788259953333369, "text": "pulvinar posuere libero sit Kafka amet Lorem", "createdAt": 1680370390000}' to topic='twitter-topic' with key '5571788259953333369'
2023-04-01 12:33:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:20 -0500 2023","id":"5294528622749310931","text":"yltricies dolor ipsum yltricies Spring ipsum purus porttitor","user":{"id":"7141061147441275378"}}
2023-04-01 12:33:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies dolor ipsum yltricies Spring ipsum purus porttitor and sending to kafka topic twitter-topic
2023-04-01 12:33:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7141061147441275378, "id": 5294528622749310931, "text": "yltricies dolor ipsum yltricies Spring ipsum purus porttitor", "createdAt": 1680370400000}' to topic='twitter-topic' with key '5294528622749310931'
2023-04-01 12:33:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:30 -0500 2023","id":"5001295514096103853","text":"porttitor magna Lorem Lorem amet Java massa yltricies magna pulvinar","user":{"id":"2601012080713020263"}}
2023-04-01 12:33:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor magna Lorem Lorem amet Java massa yltricies magna pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:33:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2601012080713020263, "id": 5001295514096103853, "text": "porttitor magna Lorem Lorem amet Java massa yltricies magna pulvinar", "createdAt": 1680370410000}' to topic='twitter-topic' with key '5001295514096103853'
2023-04-01 12:33:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:40 -0500 2023","id":"1349639806661101609","text":"sed pulvinar adipiscing purus Kafka sit purus","user":{"id":"8787908573735975673"}}
2023-04-01 12:33:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed pulvinar adipiscing purus Kafka sit purus and sending to kafka topic twitter-topic
2023-04-01 12:33:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8787908573735975673, "id": 1349639806661101609, "text": "sed pulvinar adipiscing purus Kafka sit purus", "createdAt": 1680370420000}' to topic='twitter-topic' with key '1349639806661101609'
2023-04-01 12:33:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:33:50 -0500 2023","id":"313794661739622322","text":"Maecenas mara posuere posuere Java massa amet libero","user":{"id":"3082087383610883302"}}
2023-04-01 12:33:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas mara posuere posuere Java massa amet libero and sending to kafka topic twitter-topic
2023-04-01 12:33:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3082087383610883302, "id": 313794661739622322, "text": "Maecenas mara posuere posuere Java massa amet libero", "createdAt": 1680370430000}' to topic='twitter-topic' with key '313794661739622322'
2023-04-01 12:34:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:00 -0500 2023","id":"8685368805418335447","text":"posuere sed dolor magna Spring adipiscing porttitor magna","user":{"id":"2209328148608835955"}}
2023-04-01 12:34:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere sed dolor magna Spring adipiscing porttitor magna and sending to kafka topic twitter-topic
2023-04-01 12:34:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2209328148608835955, "id": 8685368805418335447, "text": "posuere sed dolor magna Spring adipiscing porttitor magna", "createdAt": 1680370440000}' to topic='twitter-topic' with key '8685368805418335447'
2023-04-01 12:34:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:10 -0500 2023","id":"203836638750062547","text":"lectus amet ipsum ipsum porttitor Elasticsearch purus Maecenas purus","user":{"id":"5746412538146257986"}}
2023-04-01 12:34:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus amet ipsum ipsum porttitor Elasticsearch purus Maecenas purus and sending to kafka topic twitter-topic
2023-04-01 12:34:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5746412538146257986, "id": 203836638750062547, "text": "lectus amet ipsum ipsum porttitor Elasticsearch purus Maecenas purus", "createdAt": 1680370450000}' to topic='twitter-topic' with key '203836638750062547'
2023-04-01 12:34:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:20 -0500 2023","id":"2964594285586317325","text":"Maecenas elit ipsum dolor amet yltricies Microservices adipiscing yltricies posuere consectetuer Maecenas","user":{"id":"5474648237977767278"}}
2023-04-01 12:34:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas elit ipsum dolor amet yltricies Microservices adipiscing yltricies posuere consectetuer Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:34:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5474648237977767278, "id": 2964594285586317325, "text": "Maecenas elit ipsum dolor amet yltricies Microservices adipiscing yltricies posuere consectetuer Maecenas", "createdAt": 1680370460000}' to topic='twitter-topic' with key '2964594285586317325'
2023-04-01 12:34:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:30 -0500 2023","id":"6899638400846102970","text":"posuere sit mara magna Kafka consectetuer conque malesuada","user":{"id":"7390328743833787721"}}
2023-04-01 12:34:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere sit mara magna Kafka consectetuer conque malesuada and sending to kafka topic twitter-topic
2023-04-01 12:34:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7390328743833787721, "id": 6899638400846102970, "text": "posuere sit mara magna Kafka consectetuer conque malesuada", "createdAt": 1680370470000}' to topic='twitter-topic' with key '6899638400846102970'
2023-04-01 12:34:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:40 -0500 2023","id":"6018226480662595144","text":"Maecenas dolor libero yltricies purus Spring porttitor Maecenas consectetuer","user":{"id":"2387095314998172217"}}
2023-04-01 12:34:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas dolor libero yltricies purus Spring porttitor Maecenas consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:34:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2387095314998172217, "id": 6018226480662595144, "text": "Maecenas dolor libero yltricies purus Spring porttitor Maecenas consectetuer", "createdAt": 1680370480000}' to topic='twitter-topic' with key '6018226480662595144'
2023-04-01 12:34:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:34:50 -0500 2023","id":"1834534193107195293","text":"conque sed pulvinar elit posuere consectetuer malesuada Spring conque mara elit pulvinar dolor malesuada","user":{"id":"1941945937737107901"}}
2023-04-01 12:34:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque sed pulvinar elit posuere consectetuer malesuada Spring conque mara elit pulvinar dolor malesuada and sending to kafka topic twitter-topic
2023-04-01 12:34:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1941945937737107901, "id": 1834534193107195293, "text": "conque sed pulvinar elit posuere consectetuer malesuada Spring conque mara elit pulvinar dolor malesuada", "createdAt": 1680370490000}' to topic='twitter-topic' with key '1834534193107195293'
2023-04-01 12:35:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:00 -0500 2023","id":"607715936504028941","text":"libero sit adipiscing elit Elasticsearch libero magna sit","user":{"id":"4272117695095045067"}}
2023-04-01 12:35:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero sit adipiscing elit Elasticsearch libero magna sit and sending to kafka topic twitter-topic
2023-04-01 12:35:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4272117695095045067, "id": 607715936504028941, "text": "libero sit adipiscing elit Elasticsearch libero magna sit", "createdAt": 1680370500000}' to topic='twitter-topic' with key '607715936504028941'
2023-04-01 12:35:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:10 -0500 2023","id":"870723148502136615","text":"posuere amet lectus posuere Elasticsearch posuere magna Maecenas","user":{"id":"2549570158119061849"}}
2023-04-01 12:35:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere amet lectus posuere Elasticsearch posuere magna Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:35:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2549570158119061849, "id": 870723148502136615, "text": "posuere amet lectus posuere Elasticsearch posuere magna Maecenas", "createdAt": 1680370510000}' to topic='twitter-topic' with key '870723148502136615'
2023-04-01 12:35:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:20 -0500 2023","id":"2808882543991513156","text":"malesuada sed amet magna Elasticsearch ipsum Lorem elit","user":{"id":"1963459038401699036"}}
2023-04-01 12:35:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada sed amet magna Elasticsearch ipsum Lorem elit and sending to kafka topic twitter-topic
2023-04-01 12:35:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1963459038401699036, "id": 2808882543991513156, "text": "malesuada sed amet magna Elasticsearch ipsum Lorem elit", "createdAt": 1680370520000}' to topic='twitter-topic' with key '2808882543991513156'
2023-04-01 12:35:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:30 -0500 2023","id":"5186596210944108163","text":"Maecenas adipiscing posuere magna Microservices porttitor sit","user":{"id":"7702376696838821722"}}
2023-04-01 12:35:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas adipiscing posuere magna Microservices porttitor sit and sending to kafka topic twitter-topic
2023-04-01 12:35:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7702376696838821722, "id": 5186596210944108163, "text": "Maecenas adipiscing posuere magna Microservices porttitor sit", "createdAt": 1680370530000}' to topic='twitter-topic' with key '5186596210944108163'
2023-04-01 12:35:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:40 -0500 2023","id":"7884194574223282371","text":"magna porttitor elit Maecenas elit massa porttitor ipsum Microservices porttitor porttitor mara purus purus dolor ipsum","user":{"id":"4673702801847650427"}}
2023-04-01 12:35:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna porttitor elit Maecenas elit massa porttitor ipsum Microservices porttitor porttitor mara purus purus dolor ipsum and sending to kafka topic twitter-topic
2023-04-01 12:35:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4673702801847650427, "id": 7884194574223282371, "text": "magna porttitor elit Maecenas elit massa porttitor ipsum Microservices porttitor porttitor mara purus purus dolor ipsum", "createdAt": 1680370540000}' to topic='twitter-topic' with key '7884194574223282371'
2023-04-01 12:35:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:35:50 -0500 2023","id":"8996489317122591186","text":"libero purus yltricies conque Microservices magna sed","user":{"id":"7838611280262867400"}}
2023-04-01 12:35:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero purus yltricies conque Microservices magna sed and sending to kafka topic twitter-topic
2023-04-01 12:35:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7838611280262867400, "id": 8996489317122591186, "text": "libero purus yltricies conque Microservices magna sed", "createdAt": 1680370550000}' to topic='twitter-topic' with key '8996489317122591186'
2023-04-01 12:36:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:00 -0500 2023","id":"4759173465135391640","text":"sit mara magna adipiscing adipiscing Kafka posuere elit amet","user":{"id":"3863040145850815390"}}
2023-04-01 12:36:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit mara magna adipiscing adipiscing Kafka posuere elit amet and sending to kafka topic twitter-topic
2023-04-01 12:36:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3863040145850815390, "id": 4759173465135391640, "text": "sit mara magna adipiscing adipiscing Kafka posuere elit amet", "createdAt": 1680370560000}' to topic='twitter-topic' with key '4759173465135391640'
2023-04-01 12:36:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:10 -0500 2023","id":"5189856917247528388","text":"magna massa lectus Maecenas purus posuere Elasticsearch libero dolor Maecenas purus consectetuer","user":{"id":"8612273114278924581"}}
2023-04-01 12:36:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna massa lectus Maecenas purus posuere Elasticsearch libero dolor Maecenas purus consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:36:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8612273114278924581, "id": 5189856917247528388, "text": "magna massa lectus Maecenas purus posuere Elasticsearch libero dolor Maecenas purus consectetuer", "createdAt": 1680370570000}' to topic='twitter-topic' with key '5189856917247528388'
2023-04-01 12:36:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:20 -0500 2023","id":"1492447451857210672","text":"sit elit yltricies sed consectetuer posuere elit Microservices porttitor yltricies Maecenas posuere yltricies sit","user":{"id":"5103461954188486117"}}
2023-04-01 12:36:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit elit yltricies sed consectetuer posuere elit Microservices porttitor yltricies Maecenas posuere yltricies sit and sending to kafka topic twitter-topic
2023-04-01 12:36:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5103461954188486117, "id": 1492447451857210672, "text": "sit elit yltricies sed consectetuer posuere elit Microservices porttitor yltricies Maecenas posuere yltricies sit", "createdAt": 1680370580000}' to topic='twitter-topic' with key '1492447451857210672'
2023-04-01 12:36:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:30 -0500 2023","id":"7782961453667726778","text":"posuere porttitor Maecenas amet massa elit lectus massa Microservices pulvinar pulvinar Maecenas Maecenas elit posuere","user":{"id":"5896431669348765910"}}
2023-04-01 12:36:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere porttitor Maecenas amet massa elit lectus massa Microservices pulvinar pulvinar Maecenas Maecenas elit posuere and sending to kafka topic twitter-topic
2023-04-01 12:36:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5896431669348765910, "id": 7782961453667726778, "text": "posuere porttitor Maecenas amet massa elit lectus massa Microservices pulvinar pulvinar Maecenas Maecenas elit posuere", "createdAt": 1680370590000}' to topic='twitter-topic' with key '7782961453667726778'
2023-04-01 12:36:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:40 -0500 2023","id":"363103782646673491","text":"Lorem consectetuer dolor Elasticsearch consectetuer massa","user":{"id":"4627248918264953768"}}
2023-04-01 12:36:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem consectetuer dolor Elasticsearch consectetuer massa and sending to kafka topic twitter-topic
2023-04-01 12:36:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4627248918264953768, "id": 363103782646673491, "text": "Lorem consectetuer dolor Elasticsearch consectetuer massa", "createdAt": 1680370600000}' to topic='twitter-topic' with key '363103782646673491'
2023-04-01 12:36:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:36:50 -0500 2023","id":"5786979522980177396","text":"adipiscing Lorem yltricies consectetuer malesuada Maecenas porttitor Elasticsearch Maecenas adipiscing dolor pulvinar yltricies","user":{"id":"7246802035424984574"}}
2023-04-01 12:36:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing Lorem yltricies consectetuer malesuada Maecenas porttitor Elasticsearch Maecenas adipiscing dolor pulvinar yltricies and sending to kafka topic twitter-topic
2023-04-01 12:36:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7246802035424984574, "id": 5786979522980177396, "text": "adipiscing Lorem yltricies consectetuer malesuada Maecenas porttitor Elasticsearch Maecenas adipiscing dolor pulvinar yltricies", "createdAt": 1680370610000}' to topic='twitter-topic' with key '5786979522980177396'
2023-04-01 12:37:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:00 -0500 2023","id":"1624543468448564582","text":"lectus sit pulvinar malesuada dolor Java magna amet yltricies","user":{"id":"2478228273091812864"}}
2023-04-01 12:37:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sit pulvinar malesuada dolor Java magna amet yltricies and sending to kafka topic twitter-topic
2023-04-01 12:37:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2478228273091812864, "id": 1624543468448564582, "text": "lectus sit pulvinar malesuada dolor Java magna amet yltricies", "createdAt": 1680370620000}' to topic='twitter-topic' with key '1624543468448564582'
2023-04-01 12:37:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:10 -0500 2023","id":"3144345668264621427","text":"sed yltricies lectus conque dolor amet yltricies pulvinar Microservices massa dolor Lorem mara purus sed amet","user":{"id":"3798730762904187438"}}
2023-04-01 12:37:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed yltricies lectus conque dolor amet yltricies pulvinar Microservices massa dolor Lorem mara purus sed amet and sending to kafka topic twitter-topic
2023-04-01 12:37:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3798730762904187438, "id": 3144345668264621427, "text": "sed yltricies lectus conque dolor amet yltricies pulvinar Microservices massa dolor Lorem mara purus sed amet", "createdAt": 1680370630000}' to topic='twitter-topic' with key '3144345668264621427'
2023-04-01 12:37:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:20 -0500 2023","id":"3960049299289486752","text":"Lorem sit adipiscing Kafka sed adipiscing","user":{"id":"4116421937694895822"}}
2023-04-01 12:37:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem sit adipiscing Kafka sed adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:37:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4116421937694895822, "id": 3960049299289486752, "text": "Lorem sit adipiscing Kafka sed adipiscing", "createdAt": 1680370640000}' to topic='twitter-topic' with key '3960049299289486752'
2023-04-01 12:37:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:30 -0500 2023","id":"6915891016413671936","text":"lectus posuere amet lectus Spring magna libero","user":{"id":"6304927427505326089"}}
2023-04-01 12:37:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus posuere amet lectus Spring magna libero and sending to kafka topic twitter-topic
2023-04-01 12:37:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6304927427505326089, "id": 6915891016413671936, "text": "lectus posuere amet lectus Spring magna libero", "createdAt": 1680370650000}' to topic='twitter-topic' with key '6915891016413671936'
2023-04-01 12:37:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:40 -0500 2023","id":"1883420687996439427","text":"dolor ipsum porttitor Spring mara Lorem","user":{"id":"3881514972286517799"}}
2023-04-01 12:37:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor ipsum porttitor Spring mara Lorem and sending to kafka topic twitter-topic
2023-04-01 12:37:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3881514972286517799, "id": 1883420687996439427, "text": "dolor ipsum porttitor Spring mara Lorem", "createdAt": 1680370660000}' to topic='twitter-topic' with key '1883420687996439427'
2023-04-01 12:37:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:37:50 -0500 2023","id":"2508718877030034905","text":"porttitor adipiscing conque libero yltricies consectetuer Microservices consectetuer adipiscing massa dolor","user":{"id":"5618944258832305469"}}
2023-04-01 12:37:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor adipiscing conque libero yltricies consectetuer Microservices consectetuer adipiscing massa dolor and sending to kafka topic twitter-topic
2023-04-01 12:37:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5618944258832305469, "id": 2508718877030034905, "text": "porttitor adipiscing conque libero yltricies consectetuer Microservices consectetuer adipiscing massa dolor", "createdAt": 1680370670000}' to topic='twitter-topic' with key '2508718877030034905'
2023-04-01 12:38:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:00 -0500 2023","id":"5293382456476135042","text":"massa elit mara magna purus pulvinar sed Microservices sit amet massa posuere mara","user":{"id":"6217195655032486011"}}
2023-04-01 12:38:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa elit mara magna purus pulvinar sed Microservices sit amet massa posuere mara and sending to kafka topic twitter-topic
2023-04-01 12:38:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6217195655032486011, "id": 5293382456476135042, "text": "massa elit mara magna purus pulvinar sed Microservices sit amet massa posuere mara", "createdAt": 1680370680000}' to topic='twitter-topic' with key '5293382456476135042'
2023-04-01 12:38:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:10 -0500 2023","id":"204329682879141321","text":"porttitor yltricies elit Java lectus porttitor","user":{"id":"2036087075314614974"}}
2023-04-01 12:38:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor yltricies elit Java lectus porttitor and sending to kafka topic twitter-topic
2023-04-01 12:38:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2036087075314614974, "id": 204329682879141321, "text": "porttitor yltricies elit Java lectus porttitor", "createdAt": 1680370690000}' to topic='twitter-topic' with key '204329682879141321'
2023-04-01 12:38:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:20 -0500 2023","id":"8584334766354311867","text":"consectetuer mara massa malesuada ipsum consectetuer mara porttitor Microservices magna malesuada Maecenas dolor sit massa yltricies","user":{"id":"4972460563563868000"}}
2023-04-01 12:38:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer mara massa malesuada ipsum consectetuer mara porttitor Microservices magna malesuada Maecenas dolor sit massa yltricies and sending to kafka topic twitter-topic
2023-04-01 12:38:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4972460563563868000, "id": 8584334766354311867, "text": "consectetuer mara massa malesuada ipsum consectetuer mara porttitor Microservices magna malesuada Maecenas dolor sit massa yltricies", "createdAt": 1680370700000}' to topic='twitter-topic' with key '8584334766354311867'
2023-04-01 12:38:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:30 -0500 2023","id":"4905616929262495162","text":"mara pulvinar dolor consectetuer Java mara mara","user":{"id":"8401628037237874161"}}
2023-04-01 12:38:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara pulvinar dolor consectetuer Java mara mara and sending to kafka topic twitter-topic
2023-04-01 12:38:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8401628037237874161, "id": 4905616929262495162, "text": "mara pulvinar dolor consectetuer Java mara mara", "createdAt": 1680370710000}' to topic='twitter-topic' with key '4905616929262495162'
2023-04-01 12:38:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:40 -0500 2023","id":"3123975465807847146","text":"magna mara dolor sed ipsum Lorem yltricies Elasticsearch lectus adipiscing porttitor adipiscing consectetuer","user":{"id":"9206480074181195135"}}
2023-04-01 12:38:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna mara dolor sed ipsum Lorem yltricies Elasticsearch lectus adipiscing porttitor adipiscing consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:38:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9206480074181195135, "id": 3123975465807847146, "text": "magna mara dolor sed ipsum Lorem yltricies Elasticsearch lectus adipiscing porttitor adipiscing consectetuer", "createdAt": 1680370720000}' to topic='twitter-topic' with key '3123975465807847146'
2023-04-01 12:38:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:38:50 -0500 2023","id":"4276710665002998527","text":"sed adipiscing elit conque porttitor Kafka sit mara porttitor","user":{"id":"7449696485315159926"}}
2023-04-01 12:38:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed adipiscing elit conque porttitor Kafka sit mara porttitor and sending to kafka topic twitter-topic
2023-04-01 12:38:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7449696485315159926, "id": 4276710665002998527, "text": "sed adipiscing elit conque porttitor Kafka sit mara porttitor", "createdAt": 1680370730000}' to topic='twitter-topic' with key '4276710665002998527'
2023-04-01 12:39:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:00 -0500 2023","id":"8288271118314336204","text":"magna malesuada magna yltricies Java Maecenas libero","user":{"id":"8564490544978570939"}}
2023-04-01 12:39:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna malesuada magna yltricies Java Maecenas libero and sending to kafka topic twitter-topic
2023-04-01 12:39:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8564490544978570939, "id": 8288271118314336204, "text": "magna malesuada magna yltricies Java Maecenas libero", "createdAt": 1680370740000}' to topic='twitter-topic' with key '8288271118314336204'
2023-04-01 12:39:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:10 -0500 2023","id":"8294926959981396583","text":"consectetuer porttitor pulvinar ipsum amet Elasticsearch Maecenas massa purus conque","user":{"id":"7171446104590971165"}}
2023-04-01 12:39:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer porttitor pulvinar ipsum amet Elasticsearch Maecenas massa purus conque and sending to kafka topic twitter-topic
2023-04-01 12:39:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7171446104590971165, "id": 8294926959981396583, "text": "consectetuer porttitor pulvinar ipsum amet Elasticsearch Maecenas massa purus conque", "createdAt": 1680370750000}' to topic='twitter-topic' with key '8294926959981396583'
2023-04-01 12:39:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:20 -0500 2023","id":"4853203877890902826","text":"adipiscing malesuada malesuada yltricies adipiscing Elasticsearch purus lectus consectetuer mara","user":{"id":"4803692645286825172"}}
2023-04-01 12:39:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing malesuada malesuada yltricies adipiscing Elasticsearch purus lectus consectetuer mara and sending to kafka topic twitter-topic
2023-04-01 12:39:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4803692645286825172, "id": 4853203877890902826, "text": "adipiscing malesuada malesuada yltricies adipiscing Elasticsearch purus lectus consectetuer mara", "createdAt": 1680370760000}' to topic='twitter-topic' with key '4853203877890902826'
2023-04-01 12:39:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:30 -0500 2023","id":"8672153342626822766","text":"Maecenas yltricies adipiscing sit magna mara Spring libero yltricies malesuada adipiscing yltricies","user":{"id":"3817760150020505548"}}
2023-04-01 12:39:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas yltricies adipiscing sit magna mara Spring libero yltricies malesuada adipiscing yltricies and sending to kafka topic twitter-topic
2023-04-01 12:39:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3817760150020505548, "id": 8672153342626822766, "text": "Maecenas yltricies adipiscing sit magna mara Spring libero yltricies malesuada adipiscing yltricies", "createdAt": 1680370770000}' to topic='twitter-topic' with key '8672153342626822766'
2023-04-01 12:39:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:40 -0500 2023","id":"465399093559613393","text":"Maecenas consectetuer amet purus massa Java ipsum posuere porttitor porttitor","user":{"id":"3298130905896827111"}}
2023-04-01 12:39:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas consectetuer amet purus massa Java ipsum posuere porttitor porttitor and sending to kafka topic twitter-topic
2023-04-01 12:39:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3298130905896827111, "id": 465399093559613393, "text": "Maecenas consectetuer amet purus massa Java ipsum posuere porttitor porttitor", "createdAt": 1680370780000}' to topic='twitter-topic' with key '465399093559613393'
2023-04-01 12:39:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:39:50 -0500 2023","id":"5161159230982246720","text":"Maecenas consectetuer elit elit lectus libero dolor malesuada Java massa ipsum sit consectetuer massa consectetuer pulvinar","user":{"id":"2304228918106167232"}}
2023-04-01 12:39:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas consectetuer elit elit lectus libero dolor malesuada Java massa ipsum sit consectetuer massa consectetuer pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:39:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2304228918106167232, "id": 5161159230982246720, "text": "Maecenas consectetuer elit elit lectus libero dolor malesuada Java massa ipsum sit consectetuer massa consectetuer pulvinar", "createdAt": 1680370790000}' to topic='twitter-topic' with key '5161159230982246720'
2023-04-01 12:40:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:00 -0500 2023","id":"6035163678085044059","text":"massa conque purus elit libero Lorem Elasticsearch Maecenas Lorem pulvinar elit","user":{"id":"7290343779889427529"}}
2023-04-01 12:40:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa conque purus elit libero Lorem Elasticsearch Maecenas Lorem pulvinar elit and sending to kafka topic twitter-topic
2023-04-01 12:40:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7290343779889427529, "id": 6035163678085044059, "text": "massa conque purus elit libero Lorem Elasticsearch Maecenas Lorem pulvinar elit", "createdAt": 1680370800000}' to topic='twitter-topic' with key '6035163678085044059'
2023-04-01 12:40:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:10 -0500 2023","id":"2170417143040265734","text":"purus Lorem Lorem elit Lorem Maecenas massa Elasticsearch Maecenas dolor massa mara Maecenas magna","user":{"id":"7699451851327662813"}}
2023-04-01 12:40:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus Lorem Lorem elit Lorem Maecenas massa Elasticsearch Maecenas dolor massa mara Maecenas magna and sending to kafka topic twitter-topic
2023-04-01 12:40:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7699451851327662813, "id": 2170417143040265734, "text": "purus Lorem Lorem elit Lorem Maecenas massa Elasticsearch Maecenas dolor massa mara Maecenas magna", "createdAt": 1680370810000}' to topic='twitter-topic' with key '2170417143040265734'
2023-04-01 12:40:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:20 -0500 2023","id":"269954125512639300","text":"lectus adipiscing Lorem mara consectetuer Spring magna dolor Lorem consectetuer","user":{"id":"6987383538996978244"}}
2023-04-01 12:40:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus adipiscing Lorem mara consectetuer Spring magna dolor Lorem consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:40:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6987383538996978244, "id": 269954125512639300, "text": "lectus adipiscing Lorem mara consectetuer Spring magna dolor Lorem consectetuer", "createdAt": 1680370820000}' to topic='twitter-topic' with key '269954125512639300'
2023-04-01 12:40:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:30 -0500 2023","id":"3924541339359775079","text":"Maecenas lectus magna adipiscing Elasticsearch porttitor adipiscing conque","user":{"id":"7552620324015452846"}}
2023-04-01 12:40:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas lectus magna adipiscing Elasticsearch porttitor adipiscing conque and sending to kafka topic twitter-topic
2023-04-01 12:40:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7552620324015452846, "id": 3924541339359775079, "text": "Maecenas lectus magna adipiscing Elasticsearch porttitor adipiscing conque", "createdAt": 1680370830000}' to topic='twitter-topic' with key '3924541339359775079'
2023-04-01 12:40:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:40 -0500 2023","id":"4459060225763410103","text":"conque magna Lorem Elasticsearch pulvinar sed","user":{"id":"3126977108961628099"}}
2023-04-01 12:40:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque magna Lorem Elasticsearch pulvinar sed and sending to kafka topic twitter-topic
2023-04-01 12:40:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3126977108961628099, "id": 4459060225763410103, "text": "conque magna Lorem Elasticsearch pulvinar sed", "createdAt": 1680370840000}' to topic='twitter-topic' with key '4459060225763410103'
2023-04-01 12:40:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:40:50 -0500 2023","id":"6971187475081200419","text":"elit amet Maecenas sit purus sed Spring elit porttitor porttitor porttitor magna","user":{"id":"4755761552759931267"}}
2023-04-01 12:40:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit amet Maecenas sit purus sed Spring elit porttitor porttitor porttitor magna and sending to kafka topic twitter-topic
2023-04-01 12:40:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4755761552759931267, "id": 6971187475081200419, "text": "elit amet Maecenas sit purus sed Spring elit porttitor porttitor porttitor magna", "createdAt": 1680370850000}' to topic='twitter-topic' with key '6971187475081200419'
2023-04-01 12:41:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:00 -0500 2023","id":"3926198523687423912","text":"purus porttitor Maecenas Maecenas mara adipiscing Spring ipsum sed magna posuere massa","user":{"id":"220752892572798231"}}
2023-04-01 12:41:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus porttitor Maecenas Maecenas mara adipiscing Spring ipsum sed magna posuere massa and sending to kafka topic twitter-topic
2023-04-01 12:41:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 220752892572798231, "id": 3926198523687423912, "text": "purus porttitor Maecenas Maecenas mara adipiscing Spring ipsum sed magna posuere massa", "createdAt": 1680370860000}' to topic='twitter-topic' with key '3926198523687423912'
2023-04-01 12:41:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:10 -0500 2023","id":"1996883964300627470","text":"mara consectetuer elit lectus sed malesuada Microservices magna pulvinar libero libero adipiscing","user":{"id":"6251380068169707872"}}
2023-04-01 12:41:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara consectetuer elit lectus sed malesuada Microservices magna pulvinar libero libero adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:41:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6251380068169707872, "id": 1996883964300627470, "text": "mara consectetuer elit lectus sed malesuada Microservices magna pulvinar libero libero adipiscing", "createdAt": 1680370870000}' to topic='twitter-topic' with key '1996883964300627470'
2023-04-01 12:41:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:20 -0500 2023","id":"7862321463959540042","text":"posuere malesuada massa purus amet lectus lectus Spring massa posuere pulvinar adipiscing Maecenas libero","user":{"id":"7752723717558522354"}}
2023-04-01 12:41:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere malesuada massa purus amet lectus lectus Spring massa posuere pulvinar adipiscing Maecenas libero and sending to kafka topic twitter-topic
2023-04-01 12:41:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7752723717558522354, "id": 7862321463959540042, "text": "posuere malesuada massa purus amet lectus lectus Spring massa posuere pulvinar adipiscing Maecenas libero", "createdAt": 1680370880000}' to topic='twitter-topic' with key '7862321463959540042'
2023-04-01 12:41:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:30 -0500 2023","id":"539117836719081025","text":"purus amet libero posuere amet Maecenas porttitor Java amet Maecenas pulvinar mara conque","user":{"id":"899670135043120447"}}
2023-04-01 12:41:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus amet libero posuere amet Maecenas porttitor Java amet Maecenas pulvinar mara conque and sending to kafka topic twitter-topic
2023-04-01 12:41:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 899670135043120447, "id": 539117836719081025, "text": "purus amet libero posuere amet Maecenas porttitor Java amet Maecenas pulvinar mara conque", "createdAt": 1680370890000}' to topic='twitter-topic' with key '539117836719081025'
2023-04-01 12:41:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:40 -0500 2023","id":"3766422368233259542","text":"malesuada adipiscing elit sed mara pulvinar magna Kafka porttitor elit yltricies purus Maecenas","user":{"id":"6355829729745917617"}}
2023-04-01 12:41:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada adipiscing elit sed mara pulvinar magna Kafka porttitor elit yltricies purus Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:41:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6355829729745917617, "id": 3766422368233259542, "text": "malesuada adipiscing elit sed mara pulvinar magna Kafka porttitor elit yltricies purus Maecenas", "createdAt": 1680370900000}' to topic='twitter-topic' with key '3766422368233259542'
2023-04-01 12:41:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:41:50 -0500 2023","id":"8244830048067644115","text":"libero consectetuer posuere sed yltricies amet mara Microservices pulvinar Lorem libero Maecenas elit massa","user":{"id":"8114351011491410588"}}
2023-04-01 12:41:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero consectetuer posuere sed yltricies amet mara Microservices pulvinar Lorem libero Maecenas elit massa and sending to kafka topic twitter-topic
2023-04-01 12:41:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8114351011491410588, "id": 8244830048067644115, "text": "libero consectetuer posuere sed yltricies amet mara Microservices pulvinar Lorem libero Maecenas elit massa", "createdAt": 1680370910000}' to topic='twitter-topic' with key '8244830048067644115'
2023-04-01 12:42:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:00 -0500 2023","id":"6170232927973350064","text":"lectus lectus dolor Java Lorem dolor","user":{"id":"5369294655789914684"}}
2023-04-01 12:42:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus lectus dolor Java Lorem dolor and sending to kafka topic twitter-topic
2023-04-01 12:42:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5369294655789914684, "id": 6170232927973350064, "text": "lectus lectus dolor Java Lorem dolor", "createdAt": 1680370920000}' to topic='twitter-topic' with key '6170232927973350064'
2023-04-01 12:42:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:10 -0500 2023","id":"3419742487581172153","text":"amet consectetuer elit mara lectus Maecenas massa posuere Java Maecenas ipsum Lorem conque sit mara","user":{"id":"3427584249333844767"}}
2023-04-01 12:42:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet consectetuer elit mara lectus Maecenas massa posuere Java Maecenas ipsum Lorem conque sit mara and sending to kafka topic twitter-topic
2023-04-01 12:42:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3427584249333844767, "id": 3419742487581172153, "text": "amet consectetuer elit mara lectus Maecenas massa posuere Java Maecenas ipsum Lorem conque sit mara", "createdAt": 1680370930000}' to topic='twitter-topic' with key '3419742487581172153'
2023-04-01 12:42:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:20 -0500 2023","id":"7912524136049158366","text":"malesuada malesuada elit ipsum Java posuere purus adipiscing","user":{"id":"8230110877231837876"}}
2023-04-01 12:42:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada malesuada elit ipsum Java posuere purus adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:42:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8230110877231837876, "id": 7912524136049158366, "text": "malesuada malesuada elit ipsum Java posuere purus adipiscing", "createdAt": 1680370940000}' to topic='twitter-topic' with key '7912524136049158366'
2023-04-01 12:42:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:30 -0500 2023","id":"6987584409713404668","text":"porttitor sit lectus sit massa libero posuere Kafka pulvinar Lorem porttitor magna posuere","user":{"id":"2190012270155224422"}}
2023-04-01 12:42:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor sit lectus sit massa libero posuere Kafka pulvinar Lorem porttitor magna posuere and sending to kafka topic twitter-topic
2023-04-01 12:42:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2190012270155224422, "id": 6987584409713404668, "text": "porttitor sit lectus sit massa libero posuere Kafka pulvinar Lorem porttitor magna posuere", "createdAt": 1680370950000}' to topic='twitter-topic' with key '6987584409713404668'
2023-04-01 12:42:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:40 -0500 2023","id":"1957130829165210383","text":"elit massa porttitor adipiscing amet Elasticsearch Lorem elit yltricies dolor","user":{"id":"3073498093153350984"}}
2023-04-01 12:42:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit massa porttitor adipiscing amet Elasticsearch Lorem elit yltricies dolor and sending to kafka topic twitter-topic
2023-04-01 12:42:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3073498093153350984, "id": 1957130829165210383, "text": "elit massa porttitor adipiscing amet Elasticsearch Lorem elit yltricies dolor", "createdAt": 1680370960000}' to topic='twitter-topic' with key '1957130829165210383'
2023-04-01 12:42:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:42:50 -0500 2023","id":"7409730612465226744","text":"purus purus libero Lorem mara consectetuer Spring malesuada conque magna purus","user":{"id":"2543409111967258796"}}
2023-04-01 12:42:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus purus libero Lorem mara consectetuer Spring malesuada conque magna purus and sending to kafka topic twitter-topic
2023-04-01 12:42:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2543409111967258796, "id": 7409730612465226744, "text": "purus purus libero Lorem mara consectetuer Spring malesuada conque magna purus", "createdAt": 1680370970000}' to topic='twitter-topic' with key '7409730612465226744'
2023-04-01 12:43:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:00 -0500 2023","id":"6521573259893179317","text":"porttitor porttitor yltricies sed porttitor Lorem posuere posuere Kafka mara massa Maecenas Maecenas magna libero","user":{"id":"5986989364738729441"}}
2023-04-01 12:43:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor porttitor yltricies sed porttitor Lorem posuere posuere Kafka mara massa Maecenas Maecenas magna libero and sending to kafka topic twitter-topic
2023-04-01 12:43:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5986989364738729441, "id": 6521573259893179317, "text": "porttitor porttitor yltricies sed porttitor Lorem posuere posuere Kafka mara massa Maecenas Maecenas magna libero", "createdAt": 1680370980000}' to topic='twitter-topic' with key '6521573259893179317'
2023-04-01 12:43:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:10 -0500 2023","id":"3597804147751655722","text":"yltricies Maecenas lectus Java mara posuere","user":{"id":"815863913197508072"}}
2023-04-01 12:43:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies Maecenas lectus Java mara posuere and sending to kafka topic twitter-topic
2023-04-01 12:43:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 815863913197508072, "id": 3597804147751655722, "text": "yltricies Maecenas lectus Java mara posuere", "createdAt": 1680370990000}' to topic='twitter-topic' with key '3597804147751655722'
2023-04-01 12:43:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:20 -0500 2023","id":"6239837300694486737","text":"yltricies elit purus Maecenas posuere posuere conque Microservices mara massa sed Maecenas consectetuer","user":{"id":"7426433154884778725"}}
2023-04-01 12:43:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies elit purus Maecenas posuere posuere conque Microservices mara massa sed Maecenas consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:43:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7426433154884778725, "id": 6239837300694486737, "text": "yltricies elit purus Maecenas posuere posuere conque Microservices mara massa sed Maecenas consectetuer", "createdAt": 1680371000000}' to topic='twitter-topic' with key '6239837300694486737'
2023-04-01 12:43:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:30 -0500 2023","id":"2167647124782205981","text":"Maecenas sed libero porttitor adipiscing Lorem ipsum Elasticsearch purus conque magna malesuada Lorem","user":{"id":"1379793014356693963"}}
2023-04-01 12:43:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas sed libero porttitor adipiscing Lorem ipsum Elasticsearch purus conque magna malesuada Lorem and sending to kafka topic twitter-topic
2023-04-01 12:43:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1379793014356693963, "id": 2167647124782205981, "text": "Maecenas sed libero porttitor adipiscing Lorem ipsum Elasticsearch purus conque magna malesuada Lorem", "createdAt": 1680371010000}' to topic='twitter-topic' with key '2167647124782205981'
2023-04-01 12:43:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:40 -0500 2023","id":"3302310173800554524","text":"magna dolor malesuada yltricies adipiscing posuere sed amet Spring libero malesuada sit dolor conque amet sit","user":{"id":"2390145194764723742"}}
2023-04-01 12:43:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna dolor malesuada yltricies adipiscing posuere sed amet Spring libero malesuada sit dolor conque amet sit and sending to kafka topic twitter-topic
2023-04-01 12:43:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2390145194764723742, "id": 3302310173800554524, "text": "magna dolor malesuada yltricies adipiscing posuere sed amet Spring libero malesuada sit dolor conque amet sit", "createdAt": 1680371020000}' to topic='twitter-topic' with key '3302310173800554524'
2023-04-01 12:43:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:43:50 -0500 2023","id":"6387442858923729280","text":"amet adipiscing Maecenas consectetuer porttitor malesuada Java adipiscing mara libero sed","user":{"id":"5524217842635356274"}}
2023-04-01 12:43:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet adipiscing Maecenas consectetuer porttitor malesuada Java adipiscing mara libero sed and sending to kafka topic twitter-topic
2023-04-01 12:43:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5524217842635356274, "id": 6387442858923729280, "text": "amet adipiscing Maecenas consectetuer porttitor malesuada Java adipiscing mara libero sed", "createdAt": 1680371030000}' to topic='twitter-topic' with key '6387442858923729280'
2023-04-01 12:44:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:00 -0500 2023","id":"8643347336614986424","text":"porttitor elit mara adipiscing consectetuer sed sed pulvinar Kafka yltricies consectetuer lectus consectetuer massa malesuada dolor","user":{"id":"8136426720260953029"}}
2023-04-01 12:44:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor elit mara adipiscing consectetuer sed sed pulvinar Kafka yltricies consectetuer lectus consectetuer massa malesuada dolor and sending to kafka topic twitter-topic
2023-04-01 12:44:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8136426720260953029, "id": 8643347336614986424, "text": "porttitor elit mara adipiscing consectetuer sed sed pulvinar Kafka yltricies consectetuer lectus consectetuer massa malesuada dolor", "createdAt": 1680371040000}' to topic='twitter-topic' with key '8643347336614986424'
2023-04-01 12:44:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:10 -0500 2023","id":"159819327671453828","text":"posuere sed mara malesuada Maecenas magna Elasticsearch dolor Lorem porttitor massa","user":{"id":"4252116263522140941"}}
2023-04-01 12:44:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere sed mara malesuada Maecenas magna Elasticsearch dolor Lorem porttitor massa and sending to kafka topic twitter-topic
2023-04-01 12:44:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4252116263522140941, "id": 159819327671453828, "text": "posuere sed mara malesuada Maecenas magna Elasticsearch dolor Lorem porttitor massa", "createdAt": 1680371050000}' to topic='twitter-topic' with key '159819327671453828'
2023-04-01 12:44:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:20 -0500 2023","id":"6029610588493954095","text":"consectetuer purus dolor lectus lectus malesuada massa sed Spring purus pulvinar amet purus yltricies malesuada malesuada","user":{"id":"723068676918419574"}}
2023-04-01 12:44:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer purus dolor lectus lectus malesuada massa sed Spring purus pulvinar amet purus yltricies malesuada malesuada and sending to kafka topic twitter-topic
2023-04-01 12:44:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 723068676918419574, "id": 6029610588493954095, "text": "consectetuer purus dolor lectus lectus malesuada massa sed Spring purus pulvinar amet purus yltricies malesuada malesuada", "createdAt": 1680371060000}' to topic='twitter-topic' with key '6029610588493954095'
2023-04-01 12:44:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:30 -0500 2023","id":"3101320001258894106","text":"massa magna purus libero massa Lorem mara malesuada Elasticsearch sit yltricies Maecenas yltricies magna Lorem Maecenas","user":{"id":"8896549934772039209"}}
2023-04-01 12:44:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa magna purus libero massa Lorem mara malesuada Elasticsearch sit yltricies Maecenas yltricies magna Lorem Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:44:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8896549934772039209, "id": 3101320001258894106, "text": "massa magna purus libero massa Lorem mara malesuada Elasticsearch sit yltricies Maecenas yltricies magna Lorem Maecenas", "createdAt": 1680371070000}' to topic='twitter-topic' with key '3101320001258894106'
2023-04-01 12:44:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:40 -0500 2023","id":"2544214928960025190","text":"posuere ipsum pulvinar Microservices conque amet","user":{"id":"3981593026526725643"}}
2023-04-01 12:44:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere ipsum pulvinar Microservices conque amet and sending to kafka topic twitter-topic
2023-04-01 12:44:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3981593026526725643, "id": 2544214928960025190, "text": "posuere ipsum pulvinar Microservices conque amet", "createdAt": 1680371080000}' to topic='twitter-topic' with key '2544214928960025190'
2023-04-01 12:44:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:44:50 -0500 2023","id":"8307629850869436378","text":"adipiscing malesuada lectus posuere Elasticsearch mara amet","user":{"id":"5380938462527775649"}}
2023-04-01 12:44:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing malesuada lectus posuere Elasticsearch mara amet and sending to kafka topic twitter-topic
2023-04-01 12:44:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5380938462527775649, "id": 8307629850869436378, "text": "adipiscing malesuada lectus posuere Elasticsearch mara amet", "createdAt": 1680371090000}' to topic='twitter-topic' with key '8307629850869436378'
2023-04-01 12:45:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:00 -0500 2023","id":"3015507054819199279","text":"Lorem elit purus pulvinar amet consectetuer amet Microservices libero amet pulvinar Maecenas pulvinar","user":{"id":"3397647428005917945"}}
2023-04-01 12:45:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem elit purus pulvinar amet consectetuer amet Microservices libero amet pulvinar Maecenas pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:45:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3397647428005917945, "id": 3015507054819199279, "text": "Lorem elit purus pulvinar amet consectetuer amet Microservices libero amet pulvinar Maecenas pulvinar", "createdAt": 1680371100000}' to topic='twitter-topic' with key '3015507054819199279'
2023-04-01 12:45:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:10 -0500 2023","id":"7324638831276533852","text":"massa Lorem amet Elasticsearch amet mara","user":{"id":"532770342168628898"}}
2023-04-01 12:45:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa Lorem amet Elasticsearch amet mara and sending to kafka topic twitter-topic
2023-04-01 12:45:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 532770342168628898, "id": 7324638831276533852, "text": "massa Lorem amet Elasticsearch amet mara", "createdAt": 1680371110000}' to topic='twitter-topic' with key '7324638831276533852'
2023-04-01 12:45:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:20 -0500 2023","id":"3120896006913486848","text":"amet mara sit Lorem conque adipiscing Elasticsearch conque magna sit ipsum posuere","user":{"id":"964997388894743675"}}
2023-04-01 12:45:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet mara sit Lorem conque adipiscing Elasticsearch conque magna sit ipsum posuere and sending to kafka topic twitter-topic
2023-04-01 12:45:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 964997388894743675, "id": 3120896006913486848, "text": "amet mara sit Lorem conque adipiscing Elasticsearch conque magna sit ipsum posuere", "createdAt": 1680371120000}' to topic='twitter-topic' with key '3120896006913486848'
2023-04-01 12:45:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:30 -0500 2023","id":"5723884247406841171","text":"lectus libero mara consectetuer dolor posuere Java ipsum adipiscing purus pulvinar","user":{"id":"4236915455341885119"}}
2023-04-01 12:45:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus libero mara consectetuer dolor posuere Java ipsum adipiscing purus pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:45:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4236915455341885119, "id": 5723884247406841171, "text": "lectus libero mara consectetuer dolor posuere Java ipsum adipiscing purus pulvinar", "createdAt": 1680371130000}' to topic='twitter-topic' with key '5723884247406841171'
2023-04-01 12:45:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:40 -0500 2023","id":"3780661422209641739","text":"lectus sit posuere conque yltricies purus Java yltricies conque pulvinar sed lectus","user":{"id":"7838061522465529629"}}
2023-04-01 12:45:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sit posuere conque yltricies purus Java yltricies conque pulvinar sed lectus and sending to kafka topic twitter-topic
2023-04-01 12:45:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7838061522465529629, "id": 3780661422209641739, "text": "lectus sit posuere conque yltricies purus Java yltricies conque pulvinar sed lectus", "createdAt": 1680371140000}' to topic='twitter-topic' with key '3780661422209641739'
2023-04-01 12:45:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:45:50 -0500 2023","id":"1192423885237047176","text":"elit consectetuer ipsum massa mara magna mara pulvinar Java purus conque ipsum libero posuere libero","user":{"id":"4737558774032088500"}}
2023-04-01 12:45:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit consectetuer ipsum massa mara magna mara pulvinar Java purus conque ipsum libero posuere libero and sending to kafka topic twitter-topic
2023-04-01 12:45:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4737558774032088500, "id": 1192423885237047176, "text": "elit consectetuer ipsum massa mara magna mara pulvinar Java purus conque ipsum libero posuere libero", "createdAt": 1680371150000}' to topic='twitter-topic' with key '1192423885237047176'
2023-04-01 12:46:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:00 -0500 2023","id":"2933135676783918600","text":"conque ipsum malesuada purus Kafka porttitor amet sit","user":{"id":"4421777050872192911"}}
2023-04-01 12:46:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque ipsum malesuada purus Kafka porttitor amet sit and sending to kafka topic twitter-topic
2023-04-01 12:46:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4421777050872192911, "id": 2933135676783918600, "text": "conque ipsum malesuada purus Kafka porttitor amet sit", "createdAt": 1680371160000}' to topic='twitter-topic' with key '2933135676783918600'
2023-04-01 12:46:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:10 -0500 2023","id":"2380480981343706199","text":"sit ipsum adipiscing malesuada porttitor adipiscing Spring massa adipiscing libero massa posuere","user":{"id":"1318100112579662437"}}
2023-04-01 12:46:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit ipsum adipiscing malesuada porttitor adipiscing Spring massa adipiscing libero massa posuere and sending to kafka topic twitter-topic
2023-04-01 12:46:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1318100112579662437, "id": 2380480981343706199, "text": "sit ipsum adipiscing malesuada porttitor adipiscing Spring massa adipiscing libero massa posuere", "createdAt": 1680371170000}' to topic='twitter-topic' with key '2380480981343706199'
2023-04-01 12:46:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:20 -0500 2023","id":"7741833698819798309","text":"libero massa pulvinar sed Lorem mara libero Kafka yltricies Maecenas porttitor consectetuer malesuada","user":{"id":"4074086964288309892"}}
2023-04-01 12:46:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero massa pulvinar sed Lorem mara libero Kafka yltricies Maecenas porttitor consectetuer malesuada and sending to kafka topic twitter-topic
2023-04-01 12:46:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4074086964288309892, "id": 7741833698819798309, "text": "libero massa pulvinar sed Lorem mara libero Kafka yltricies Maecenas porttitor consectetuer malesuada", "createdAt": 1680371180000}' to topic='twitter-topic' with key '7741833698819798309'
2023-04-01 12:46:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:30 -0500 2023","id":"1612996405402300031","text":"consectetuer libero sit yltricies libero conque magna Microservices amet porttitor dolor massa malesuada","user":{"id":"8795209692080746579"}}
2023-04-01 12:46:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer libero sit yltricies libero conque magna Microservices amet porttitor dolor massa malesuada and sending to kafka topic twitter-topic
2023-04-01 12:46:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8795209692080746579, "id": 1612996405402300031, "text": "consectetuer libero sit yltricies libero conque magna Microservices amet porttitor dolor massa malesuada", "createdAt": 1680371190000}' to topic='twitter-topic' with key '1612996405402300031'
2023-04-01 12:46:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:40 -0500 2023","id":"542619515229869712","text":"dolor consectetuer elit malesuada mara yltricies magna Microservices consectetuer massa ipsum amet consectetuer lectus","user":{"id":"1208439297404867503"}}
2023-04-01 12:46:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor consectetuer elit malesuada mara yltricies magna Microservices consectetuer massa ipsum amet consectetuer lectus and sending to kafka topic twitter-topic
2023-04-01 12:46:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1208439297404867503, "id": 542619515229869712, "text": "dolor consectetuer elit malesuada mara yltricies magna Microservices consectetuer massa ipsum amet consectetuer lectus", "createdAt": 1680371200000}' to topic='twitter-topic' with key '542619515229869712'
2023-04-01 12:46:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:46:50 -0500 2023","id":"3860700669573813691","text":"adipiscing amet purus sed Spring purus malesuada malesuada","user":{"id":"8556400076269215125"}}
2023-04-01 12:46:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing amet purus sed Spring purus malesuada malesuada and sending to kafka topic twitter-topic
2023-04-01 12:46:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8556400076269215125, "id": 3860700669573813691, "text": "adipiscing amet purus sed Spring purus malesuada malesuada", "createdAt": 1680371210000}' to topic='twitter-topic' with key '3860700669573813691'
2023-04-01 12:47:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:00 -0500 2023","id":"7719758387463921470","text":"conque adipiscing purus consectetuer libero porttitor adipiscing posuere Spring dolor purus yltricies sed porttitor conque ipsum","user":{"id":"2990895314228454894"}}
2023-04-01 12:47:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque adipiscing purus consectetuer libero porttitor adipiscing posuere Spring dolor purus yltricies sed porttitor conque ipsum and sending to kafka topic twitter-topic
2023-04-01 12:47:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2990895314228454894, "id": 7719758387463921470, "text": "conque adipiscing purus consectetuer libero porttitor adipiscing posuere Spring dolor purus yltricies sed porttitor conque ipsum", "createdAt": 1680371220000}' to topic='twitter-topic' with key '7719758387463921470'
2023-04-01 12:47:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:10 -0500 2023","id":"2177221895080952030","text":"pulvinar adipiscing consectetuer consectetuer posuere adipiscing porttitor Spring malesuada elit pulvinar posuere massa lectus","user":{"id":"2961769053224828462"}}
2023-04-01 12:47:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar adipiscing consectetuer consectetuer posuere adipiscing porttitor Spring malesuada elit pulvinar posuere massa lectus and sending to kafka topic twitter-topic
2023-04-01 12:47:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2961769053224828462, "id": 2177221895080952030, "text": "pulvinar adipiscing consectetuer consectetuer posuere adipiscing porttitor Spring malesuada elit pulvinar posuere massa lectus", "createdAt": 1680371230000}' to topic='twitter-topic' with key '2177221895080952030'
2023-04-01 12:47:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:20 -0500 2023","id":"9202097870412994742","text":"purus sed massa sed malesuada Elasticsearch dolor purus malesuada","user":{"id":"2772087611683782141"}}
2023-04-01 12:47:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus sed massa sed malesuada Elasticsearch dolor purus malesuada and sending to kafka topic twitter-topic
2023-04-01 12:47:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2772087611683782141, "id": 9202097870412994742, "text": "purus sed massa sed malesuada Elasticsearch dolor purus malesuada", "createdAt": 1680371240000}' to topic='twitter-topic' with key '9202097870412994742'
2023-04-01 12:47:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:30 -0500 2023","id":"7472118787860570599","text":"malesuada magna pulvinar dolor sit Maecenas consectetuer posuere Java porttitor magna malesuada Lorem posuere libero sit","user":{"id":"7085312431067512485"}}
2023-04-01 12:47:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada magna pulvinar dolor sit Maecenas consectetuer posuere Java porttitor magna malesuada Lorem posuere libero sit and sending to kafka topic twitter-topic
2023-04-01 12:47:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7085312431067512485, "id": 7472118787860570599, "text": "malesuada magna pulvinar dolor sit Maecenas consectetuer posuere Java porttitor magna malesuada Lorem posuere libero sit", "createdAt": 1680371250000}' to topic='twitter-topic' with key '7472118787860570599'
2023-04-01 12:47:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:40 -0500 2023","id":"2723028419051608648","text":"massa sit malesuada pulvinar dolor Spring conque yltricies lectus adipiscing","user":{"id":"5955368603206148935"}}
2023-04-01 12:47:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa sit malesuada pulvinar dolor Spring conque yltricies lectus adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:47:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5955368603206148935, "id": 2723028419051608648, "text": "massa sit malesuada pulvinar dolor Spring conque yltricies lectus adipiscing", "createdAt": 1680371260000}' to topic='twitter-topic' with key '2723028419051608648'
2023-04-01 12:47:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:47:50 -0500 2023","id":"2859912401075888152","text":"consectetuer massa dolor amet malesuada sit sit mara Kafka elit malesuada Maecenas sed consectetuer libero mara","user":{"id":"2793233541983969768"}}
2023-04-01 12:47:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer massa dolor amet malesuada sit sit mara Kafka elit malesuada Maecenas sed consectetuer libero mara and sending to kafka topic twitter-topic
2023-04-01 12:47:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2793233541983969768, "id": 2859912401075888152, "text": "consectetuer massa dolor amet malesuada sit sit mara Kafka elit malesuada Maecenas sed consectetuer libero mara", "createdAt": 1680371270000}' to topic='twitter-topic' with key '2859912401075888152'
2023-04-01 12:48:00 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:00 -0500 2023","id":"3329475518732968839","text":"libero mara magna sit Java pulvinar conque mara","user":{"id":"3423205919819784879"}}
2023-04-01 12:48:00 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero mara magna sit Java pulvinar conque mara and sending to kafka topic twitter-topic
2023-04-01 12:48:00 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3423205919819784879, "id": 3329475518732968839, "text": "libero mara magna sit Java pulvinar conque mara", "createdAt": 1680371280000}' to topic='twitter-topic' with key '3329475518732968839'
2023-04-01 12:48:10 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:10 -0500 2023","id":"4166945122736694833","text":"malesuada yltricies conque sed libero amet lectus Kafka magna posuere sit libero malesuada","user":{"id":"860243073398207482"}}
2023-04-01 12:48:10 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada yltricies conque sed libero amet lectus Kafka magna posuere sit libero malesuada and sending to kafka topic twitter-topic
2023-04-01 12:48:10 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 860243073398207482, "id": 4166945122736694833, "text": "malesuada yltricies conque sed libero amet lectus Kafka magna posuere sit libero malesuada", "createdAt": 1680371290000}' to topic='twitter-topic' with key '4166945122736694833'
2023-04-01 12:48:20 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:20 -0500 2023","id":"7060118468722163019","text":"Lorem libero pulvinar yltricies adipiscing porttitor elit Spring adipiscing libero pulvinar yltricies posuere yltricies","user":{"id":"6992457032498954589"}}
2023-04-01 12:48:20 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem libero pulvinar yltricies adipiscing porttitor elit Spring adipiscing libero pulvinar yltricies posuere yltricies and sending to kafka topic twitter-topic
2023-04-01 12:48:20 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6992457032498954589, "id": 7060118468722163019, "text": "Lorem libero pulvinar yltricies adipiscing porttitor elit Spring adipiscing libero pulvinar yltricies posuere yltricies", "createdAt": 1680371300000}' to topic='twitter-topic' with key '7060118468722163019'
2023-04-01 12:48:30 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:30 -0500 2023","id":"6987313432268601409","text":"porttitor dolor consectetuer massa pulvinar Lorem Java conque Lorem elit yltricies sit","user":{"id":"5583706818060747865"}}
2023-04-01 12:48:30 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor dolor consectetuer massa pulvinar Lorem Java conque Lorem elit yltricies sit and sending to kafka topic twitter-topic
2023-04-01 12:48:30 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5583706818060747865, "id": 6987313432268601409, "text": "porttitor dolor consectetuer massa pulvinar Lorem Java conque Lorem elit yltricies sit", "createdAt": 1680371310000}' to topic='twitter-topic' with key '6987313432268601409'
2023-04-01 12:48:40 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:40 -0500 2023","id":"7348445213024641065","text":"posuere adipiscing pulvinar libero amet conque yltricies Spring porttitor lectus consectetuer Maecenas mara yltricies","user":{"id":"4893360232659906939"}}
2023-04-01 12:48:40 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere adipiscing pulvinar libero amet conque yltricies Spring porttitor lectus consectetuer Maecenas mara yltricies and sending to kafka topic twitter-topic
2023-04-01 12:48:40 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4893360232659906939, "id": 7348445213024641065, "text": "posuere adipiscing pulvinar libero amet conque yltricies Spring porttitor lectus consectetuer Maecenas mara yltricies", "createdAt": 1680371320000}' to topic='twitter-topic' with key '7348445213024641065'
2023-04-01 12:48:50 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:48:50 -0500 2023","id":"673998799559761645","text":"sit posuere amet consectetuer pulvinar Spring sit massa purus pulvinar","user":{"id":"8517561153536210081"}}
2023-04-01 12:48:50 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit posuere amet consectetuer pulvinar Spring sit massa purus pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:48:50 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8517561153536210081, "id": 673998799559761645, "text": "sit posuere amet consectetuer pulvinar Spring sit massa purus pulvinar", "createdAt": 1680371330000}' to topic='twitter-topic' with key '673998799559761645'
2023-04-01 12:49:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:01 -0500 2023","id":"4854767747192317369","text":"amet Lorem malesuada Maecenas yltricies malesuada sit Maecenas Java amet magna purus massa sed libero","user":{"id":"8711933444900612576"}}
2023-04-01 12:49:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet Lorem malesuada Maecenas yltricies malesuada sit Maecenas Java amet magna purus massa sed libero and sending to kafka topic twitter-topic
2023-04-01 12:49:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8711933444900612576, "id": 4854767747192317369, "text": "amet Lorem malesuada Maecenas yltricies malesuada sit Maecenas Java amet magna purus massa sed libero", "createdAt": 1680371341000}' to topic='twitter-topic' with key '4854767747192317369'
2023-04-01 12:49:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:11 -0500 2023","id":"933531690936846859","text":"libero adipiscing amet lectus conque libero Maecenas massa Spring sed massa Lorem libero consectetuer dolor massa","user":{"id":"4205718543681874947"}}
2023-04-01 12:49:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero adipiscing amet lectus conque libero Maecenas massa Spring sed massa Lorem libero consectetuer dolor massa and sending to kafka topic twitter-topic
2023-04-01 12:49:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4205718543681874947, "id": 933531690936846859, "text": "libero adipiscing amet lectus conque libero Maecenas massa Spring sed massa Lorem libero consectetuer dolor massa", "createdAt": 1680371351000}' to topic='twitter-topic' with key '933531690936846859'
2023-04-01 12:49:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:21 -0500 2023","id":"6051488667810861608","text":"Lorem Maecenas adipiscing conque mara sed yltricies malesuada Microservices magna conque malesuada yltricies lectus consectetuer conque","user":{"id":"7041628901195842130"}}
2023-04-01 12:49:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem Maecenas adipiscing conque mara sed yltricies malesuada Microservices magna conque malesuada yltricies lectus consectetuer conque and sending to kafka topic twitter-topic
2023-04-01 12:49:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7041628901195842130, "id": 6051488667810861608, "text": "Lorem Maecenas adipiscing conque mara sed yltricies malesuada Microservices magna conque malesuada yltricies lectus consectetuer conque", "createdAt": 1680371361000}' to topic='twitter-topic' with key '6051488667810861608'
2023-04-01 12:49:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:31 -0500 2023","id":"4338505544419725506","text":"massa yltricies adipiscing elit Lorem purus malesuada Microservices posuere lectus porttitor posuere libero","user":{"id":"8662001130311674549"}}
2023-04-01 12:49:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa yltricies adipiscing elit Lorem purus malesuada Microservices posuere lectus porttitor posuere libero and sending to kafka topic twitter-topic
2023-04-01 12:49:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8662001130311674549, "id": 4338505544419725506, "text": "massa yltricies adipiscing elit Lorem purus malesuada Microservices posuere lectus porttitor posuere libero", "createdAt": 1680371371000}' to topic='twitter-topic' with key '4338505544419725506'
2023-04-01 12:49:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:41 -0500 2023","id":"797185963549671130","text":"adipiscing massa lectus yltricies Kafka posuere Lorem purus","user":{"id":"2375465804492782862"}}
2023-04-01 12:49:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing massa lectus yltricies Kafka posuere Lorem purus and sending to kafka topic twitter-topic
2023-04-01 12:49:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2375465804492782862, "id": 797185963549671130, "text": "adipiscing massa lectus yltricies Kafka posuere Lorem purus", "createdAt": 1680371381000}' to topic='twitter-topic' with key '797185963549671130'
2023-04-01 12:49:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:49:51 -0500 2023","id":"5139953593175543676","text":"ipsum purus Maecenas porttitor porttitor amet Spring consectetuer Lorem posuere lectus libero","user":{"id":"7696850281550330993"}}
2023-04-01 12:49:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum purus Maecenas porttitor porttitor amet Spring consectetuer Lorem posuere lectus libero and sending to kafka topic twitter-topic
2023-04-01 12:49:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7696850281550330993, "id": 5139953593175543676, "text": "ipsum purus Maecenas porttitor porttitor amet Spring consectetuer Lorem posuere lectus libero", "createdAt": 1680371391000}' to topic='twitter-topic' with key '5139953593175543676'
2023-04-01 12:50:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:01 -0500 2023","id":"980046000995822357","text":"libero consectetuer consectetuer lectus sit libero Kafka adipiscing massa yltricies consectetuer lectus","user":{"id":"3560614096198960581"}}
2023-04-01 12:50:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero consectetuer consectetuer lectus sit libero Kafka adipiscing massa yltricies consectetuer lectus and sending to kafka topic twitter-topic
2023-04-01 12:50:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3560614096198960581, "id": 980046000995822357, "text": "libero consectetuer consectetuer lectus sit libero Kafka adipiscing massa yltricies consectetuer lectus", "createdAt": 1680371401000}' to topic='twitter-topic' with key '980046000995822357'
2023-04-01 12:50:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:11 -0500 2023","id":"7445565748232439837","text":"posuere posuere consectetuer adipiscing Elasticsearch malesuada porttitor posuere","user":{"id":"702778341741281688"}}
2023-04-01 12:50:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere posuere consectetuer adipiscing Elasticsearch malesuada porttitor posuere and sending to kafka topic twitter-topic
2023-04-01 12:50:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 702778341741281688, "id": 7445565748232439837, "text": "posuere posuere consectetuer adipiscing Elasticsearch malesuada porttitor posuere", "createdAt": 1680371411000}' to topic='twitter-topic' with key '7445565748232439837'
2023-04-01 12:50:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:21 -0500 2023","id":"7612287208642735831","text":"mara conque adipiscing conque Java magna sed magna","user":{"id":"593880980505459397"}}
2023-04-01 12:50:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara conque adipiscing conque Java magna sed magna and sending to kafka topic twitter-topic
2023-04-01 12:50:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 593880980505459397, "id": 7612287208642735831, "text": "mara conque adipiscing conque Java magna sed magna", "createdAt": 1680371421000}' to topic='twitter-topic' with key '7612287208642735831'
2023-04-01 12:50:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:31 -0500 2023","id":"3769930540676436534","text":"porttitor yltricies mara Java purus posuere","user":{"id":"3224243613313576278"}}
2023-04-01 12:50:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor yltricies mara Java purus posuere and sending to kafka topic twitter-topic
2023-04-01 12:50:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3224243613313576278, "id": 3769930540676436534, "text": "porttitor yltricies mara Java purus posuere", "createdAt": 1680371431000}' to topic='twitter-topic' with key '3769930540676436534'
2023-04-01 12:50:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:41 -0500 2023","id":"1058890707787894085","text":"massa yltricies Lorem dolor malesuada mara Elasticsearch amet sed magna mara purus","user":{"id":"3288604996837642317"}}
2023-04-01 12:50:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa yltricies Lorem dolor malesuada mara Elasticsearch amet sed magna mara purus and sending to kafka topic twitter-topic
2023-04-01 12:50:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3288604996837642317, "id": 1058890707787894085, "text": "massa yltricies Lorem dolor malesuada mara Elasticsearch amet sed magna mara purus", "createdAt": 1680371441000}' to topic='twitter-topic' with key '1058890707787894085'
2023-04-01 12:50:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:50:51 -0500 2023","id":"18267115064007887","text":"lectus adipiscing malesuada Maecenas conque dolor sed libero Java Lorem lectus posuere elit sit amet pulvinar","user":{"id":"4243920862983577613"}}
2023-04-01 12:50:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus adipiscing malesuada Maecenas conque dolor sed libero Java Lorem lectus posuere elit sit amet pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:50:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4243920862983577613, "id": 18267115064007887, "text": "lectus adipiscing malesuada Maecenas conque dolor sed libero Java Lorem lectus posuere elit sit amet pulvinar", "createdAt": 1680371451000}' to topic='twitter-topic' with key '18267115064007887'
2023-04-01 12:51:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:01 -0500 2023","id":"547596766862603414","text":"adipiscing amet sit yltricies Java libero sed malesuada","user":{"id":"3525022380148443584"}}
2023-04-01 12:51:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing amet sit yltricies Java libero sed malesuada and sending to kafka topic twitter-topic
2023-04-01 12:51:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3525022380148443584, "id": 547596766862603414, "text": "adipiscing amet sit yltricies Java libero sed malesuada", "createdAt": 1680371461000}' to topic='twitter-topic' with key '547596766862603414'
2023-04-01 12:51:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:11 -0500 2023","id":"492496410229037670","text":"lectus posuere elit lectus sit Spring dolor consectetuer Lorem","user":{"id":"3666931133903855270"}}
2023-04-01 12:51:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus posuere elit lectus sit Spring dolor consectetuer Lorem and sending to kafka topic twitter-topic
2023-04-01 12:51:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3666931133903855270, "id": 492496410229037670, "text": "lectus posuere elit lectus sit Spring dolor consectetuer Lorem", "createdAt": 1680371471000}' to topic='twitter-topic' with key '492496410229037670'
2023-04-01 12:51:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:21 -0500 2023","id":"4169732385677647575","text":"conque lectus purus sit malesuada amet malesuada Spring consectetuer sed yltricies posuere libero","user":{"id":"1501837052529082175"}}
2023-04-01 12:51:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque lectus purus sit malesuada amet malesuada Spring consectetuer sed yltricies posuere libero and sending to kafka topic twitter-topic
2023-04-01 12:51:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1501837052529082175, "id": 4169732385677647575, "text": "conque lectus purus sit malesuada amet malesuada Spring consectetuer sed yltricies posuere libero", "createdAt": 1680371481000}' to topic='twitter-topic' with key '4169732385677647575'
2023-04-01 12:51:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:31 -0500 2023","id":"4807322740161393761","text":"adipiscing posuere posuere Maecenas posuere Java yltricies malesuada consectetuer","user":{"id":"7737377514508327923"}}
2023-04-01 12:51:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere posuere Maecenas posuere Java yltricies malesuada consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:51:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7737377514508327923, "id": 4807322740161393761, "text": "adipiscing posuere posuere Maecenas posuere Java yltricies malesuada consectetuer", "createdAt": 1680371491000}' to topic='twitter-topic' with key '4807322740161393761'
2023-04-01 12:51:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:41 -0500 2023","id":"8346715899497255717","text":"dolor elit yltricies ipsum conque elit posuere Spring magna conque libero Maecenas conque porttitor","user":{"id":"6313780639787110900"}}
2023-04-01 12:51:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor elit yltricies ipsum conque elit posuere Spring magna conque libero Maecenas conque porttitor and sending to kafka topic twitter-topic
2023-04-01 12:51:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6313780639787110900, "id": 8346715899497255717, "text": "dolor elit yltricies ipsum conque elit posuere Spring magna conque libero Maecenas conque porttitor", "createdAt": 1680371501000}' to topic='twitter-topic' with key '8346715899497255717'
2023-04-01 12:51:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:51:51 -0500 2023","id":"4418930533399561254","text":"dolor yltricies ipsum sit amet posuere libero porttitor Kafka Maecenas amet amet Lorem porttitor massa","user":{"id":"9073247470381191186"}}
2023-04-01 12:51:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor yltricies ipsum sit amet posuere libero porttitor Kafka Maecenas amet amet Lorem porttitor massa and sending to kafka topic twitter-topic
2023-04-01 12:51:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9073247470381191186, "id": 4418930533399561254, "text": "dolor yltricies ipsum sit amet posuere libero porttitor Kafka Maecenas amet amet Lorem porttitor massa", "createdAt": 1680371511000}' to topic='twitter-topic' with key '4418930533399561254'
2023-04-01 12:52:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:01 -0500 2023","id":"8663395667809910472","text":"Maecenas massa sed ipsum lectus Kafka amet libero libero","user":{"id":"1377293766691520751"}}
2023-04-01 12:52:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas massa sed ipsum lectus Kafka amet libero libero and sending to kafka topic twitter-topic
2023-04-01 12:52:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1377293766691520751, "id": 8663395667809910472, "text": "Maecenas massa sed ipsum lectus Kafka amet libero libero", "createdAt": 1680371521000}' to topic='twitter-topic' with key '8663395667809910472'
2023-04-01 12:52:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:11 -0500 2023","id":"733596825710928397","text":"Lorem dolor magna ipsum sit libero posuere Java amet Lorem conque conque Lorem","user":{"id":"867271285556852051"}}
2023-04-01 12:52:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem dolor magna ipsum sit libero posuere Java amet Lorem conque conque Lorem and sending to kafka topic twitter-topic
2023-04-01 12:52:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 867271285556852051, "id": 733596825710928397, "text": "Lorem dolor magna ipsum sit libero posuere Java amet Lorem conque conque Lorem", "createdAt": 1680371531000}' to topic='twitter-topic' with key '733596825710928397'
2023-04-01 12:52:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:21 -0500 2023","id":"3538124174009299259","text":"malesuada elit consectetuer Lorem Microservices ipsum pulvinar yltricies","user":{"id":"5935921928038825636"}}
2023-04-01 12:52:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada elit consectetuer Lorem Microservices ipsum pulvinar yltricies and sending to kafka topic twitter-topic
2023-04-01 12:52:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5935921928038825636, "id": 3538124174009299259, "text": "malesuada elit consectetuer Lorem Microservices ipsum pulvinar yltricies", "createdAt": 1680371541000}' to topic='twitter-topic' with key '3538124174009299259'
2023-04-01 12:52:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:31 -0500 2023","id":"920043083634483514","text":"Lorem amet libero porttitor Lorem Lorem porttitor dolor Spring mara mara libero amet massa libero consectetuer","user":{"id":"4499996545474301789"}}
2023-04-01 12:52:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem amet libero porttitor Lorem Lorem porttitor dolor Spring mara mara libero amet massa libero consectetuer and sending to kafka topic twitter-topic
2023-04-01 12:52:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4499996545474301789, "id": 920043083634483514, "text": "Lorem amet libero porttitor Lorem Lorem porttitor dolor Spring mara mara libero amet massa libero consectetuer", "createdAt": 1680371551000}' to topic='twitter-topic' with key '920043083634483514'
2023-04-01 12:52:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:41 -0500 2023","id":"4060722465126888152","text":"conque elit conque Elasticsearch dolor Maecenas","user":{"id":"7422416388708923309"}}
2023-04-01 12:52:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque elit conque Elasticsearch dolor Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:52:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7422416388708923309, "id": 4060722465126888152, "text": "conque elit conque Elasticsearch dolor Maecenas", "createdAt": 1680371561000}' to topic='twitter-topic' with key '4060722465126888152'
2023-04-01 12:52:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:52:51 -0500 2023","id":"3039695961688004236","text":"sit conque Maecenas elit malesuada magna sed Microservices Lorem mara magna sit lectus sit","user":{"id":"8735889356729216675"}}
2023-04-01 12:52:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit conque Maecenas elit malesuada magna sed Microservices Lorem mara magna sit lectus sit and sending to kafka topic twitter-topic
2023-04-01 12:52:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8735889356729216675, "id": 3039695961688004236, "text": "sit conque Maecenas elit malesuada magna sed Microservices Lorem mara magna sit lectus sit", "createdAt": 1680371571000}' to topic='twitter-topic' with key '3039695961688004236'
2023-04-01 12:53:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:01 -0500 2023","id":"1802158231905152157","text":"sed conque conque posuere sed Kafka elit libero libero","user":{"id":"6647820519929411843"}}
2023-04-01 12:53:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed conque conque posuere sed Kafka elit libero libero and sending to kafka topic twitter-topic
2023-04-01 12:53:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6647820519929411843, "id": 1802158231905152157, "text": "sed conque conque posuere sed Kafka elit libero libero", "createdAt": 1680371581000}' to topic='twitter-topic' with key '1802158231905152157'
2023-04-01 12:53:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:11 -0500 2023","id":"1872814448237104194","text":"purus posuere elit libero massa purus Maecenas malesuada Elasticsearch Lorem Lorem ipsum mara posuere lectus pulvinar","user":{"id":"5708214651120277251"}}
2023-04-01 12:53:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus posuere elit libero massa purus Maecenas malesuada Elasticsearch Lorem Lorem ipsum mara posuere lectus pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:53:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5708214651120277251, "id": 1872814448237104194, "text": "purus posuere elit libero massa purus Maecenas malesuada Elasticsearch Lorem Lorem ipsum mara posuere lectus pulvinar", "createdAt": 1680371591000}' to topic='twitter-topic' with key '1872814448237104194'
2023-04-01 12:53:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:21 -0500 2023","id":"4243379991918935868","text":"consectetuer elit yltricies mara Kafka yltricies magna Maecenas","user":{"id":"5273706179833127325"}}
2023-04-01 12:53:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer elit yltricies mara Kafka yltricies magna Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:53:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5273706179833127325, "id": 4243379991918935868, "text": "consectetuer elit yltricies mara Kafka yltricies magna Maecenas", "createdAt": 1680371601000}' to topic='twitter-topic' with key '4243379991918935868'
2023-04-01 12:53:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:31 -0500 2023","id":"2472783064709313445","text":"magna amet conque massa magna amet magna Spring ipsum consectetuer lectus Maecenas lectus conque","user":{"id":"947624880902487264"}}
2023-04-01 12:53:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna amet conque massa magna amet magna Spring ipsum consectetuer lectus Maecenas lectus conque and sending to kafka topic twitter-topic
2023-04-01 12:53:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 947624880902487264, "id": 2472783064709313445, "text": "magna amet conque massa magna amet magna Spring ipsum consectetuer lectus Maecenas lectus conque", "createdAt": 1680371611000}' to topic='twitter-topic' with key '2472783064709313445'
2023-04-01 12:53:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:41 -0500 2023","id":"5082334415376924170","text":"dolor posuere ipsum dolor Spring Maecenas Lorem","user":{"id":"5865270024998390483"}}
2023-04-01 12:53:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor posuere ipsum dolor Spring Maecenas Lorem and sending to kafka topic twitter-topic
2023-04-01 12:53:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5865270024998390483, "id": 5082334415376924170, "text": "dolor posuere ipsum dolor Spring Maecenas Lorem", "createdAt": 1680371621000}' to topic='twitter-topic' with key '5082334415376924170'
2023-04-01 12:53:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:53:51 -0500 2023","id":"7710477170680171605","text":"purus elit magna sit purus malesuada massa Maecenas Microservices conque Maecenas malesuada sed sit libero sit","user":{"id":"5316404133545757960"}}
2023-04-01 12:53:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus elit magna sit purus malesuada massa Maecenas Microservices conque Maecenas malesuada sed sit libero sit and sending to kafka topic twitter-topic
2023-04-01 12:53:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5316404133545757960, "id": 7710477170680171605, "text": "purus elit magna sit purus malesuada massa Maecenas Microservices conque Maecenas malesuada sed sit libero sit", "createdAt": 1680371631000}' to topic='twitter-topic' with key '7710477170680171605'
2023-04-01 12:54:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:01 -0500 2023","id":"2624742084193115278","text":"dolor malesuada yltricies sit sed libero Elasticsearch Maecenas ipsum pulvinar dolor","user":{"id":"2674332909670462572"}}
2023-04-01 12:54:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor malesuada yltricies sit sed libero Elasticsearch Maecenas ipsum pulvinar dolor and sending to kafka topic twitter-topic
2023-04-01 12:54:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2674332909670462572, "id": 2624742084193115278, "text": "dolor malesuada yltricies sit sed libero Elasticsearch Maecenas ipsum pulvinar dolor", "createdAt": 1680371641000}' to topic='twitter-topic' with key '2624742084193115278'
2023-04-01 12:54:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:11 -0500 2023","id":"174329282778988069","text":"Lorem sed porttitor conque Elasticsearch elit lectus","user":{"id":"5562261038762551474"}}
2023-04-01 12:54:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem sed porttitor conque Elasticsearch elit lectus and sending to kafka topic twitter-topic
2023-04-01 12:54:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5562261038762551474, "id": 174329282778988069, "text": "Lorem sed porttitor conque Elasticsearch elit lectus", "createdAt": 1680371651000}' to topic='twitter-topic' with key '174329282778988069'
2023-04-01 12:54:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:21 -0500 2023","id":"7244084475304113328","text":"pulvinar sed yltricies amet Elasticsearch magna mara","user":{"id":"4246185198243840868"}}
2023-04-01 12:54:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar sed yltricies amet Elasticsearch magna mara and sending to kafka topic twitter-topic
2023-04-01 12:54:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4246185198243840868, "id": 7244084475304113328, "text": "pulvinar sed yltricies amet Elasticsearch magna mara", "createdAt": 1680371661000}' to topic='twitter-topic' with key '7244084475304113328'
2023-04-01 12:54:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:31 -0500 2023","id":"7431237502832868136","text":"dolor amet magna sit massa Java consectetuer massa adipiscing","user":{"id":"5340131104428953835"}}
2023-04-01 12:54:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor amet magna sit massa Java consectetuer massa adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:54:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5340131104428953835, "id": 7431237502832868136, "text": "dolor amet magna sit massa Java consectetuer massa adipiscing", "createdAt": 1680371671000}' to topic='twitter-topic' with key '7431237502832868136'
2023-04-01 12:54:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:41 -0500 2023","id":"1119469022952438373","text":"magna posuere magna libero Lorem ipsum elit Spring amet sed elit sit yltricies","user":{"id":"8458352418392751883"}}
2023-04-01 12:54:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna posuere magna libero Lorem ipsum elit Spring amet sed elit sit yltricies and sending to kafka topic twitter-topic
2023-04-01 12:54:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8458352418392751883, "id": 1119469022952438373, "text": "magna posuere magna libero Lorem ipsum elit Spring amet sed elit sit yltricies", "createdAt": 1680371681000}' to topic='twitter-topic' with key '1119469022952438373'
2023-04-01 12:54:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:54:51 -0500 2023","id":"2507709563277840558","text":"yltricies yltricies purus purus Elasticsearch lectus ipsum","user":{"id":"700783804680699964"}}
2023-04-01 12:54:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies yltricies purus purus Elasticsearch lectus ipsum and sending to kafka topic twitter-topic
2023-04-01 12:54:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 700783804680699964, "id": 2507709563277840558, "text": "yltricies yltricies purus purus Elasticsearch lectus ipsum", "createdAt": 1680371691000}' to topic='twitter-topic' with key '2507709563277840558'
2023-04-01 12:55:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:01 -0500 2023","id":"1338124138804183176","text":"ipsum libero lectus pulvinar libero Elasticsearch sit Maecenas sit sit","user":{"id":"3853624548960121176"}}
2023-04-01 12:55:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum libero lectus pulvinar libero Elasticsearch sit Maecenas sit sit and sending to kafka topic twitter-topic
2023-04-01 12:55:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3853624548960121176, "id": 1338124138804183176, "text": "ipsum libero lectus pulvinar libero Elasticsearch sit Maecenas sit sit", "createdAt": 1680371701000}' to topic='twitter-topic' with key '1338124138804183176'
2023-04-01 12:55:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:11 -0500 2023","id":"8483866614796957348","text":"lectus purus conque consectetuer malesuada libero Kafka sed mara elit consectetuer sit","user":{"id":"9014418214702525930"}}
2023-04-01 12:55:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus conque consectetuer malesuada libero Kafka sed mara elit consectetuer sit and sending to kafka topic twitter-topic
2023-04-01 12:55:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9014418214702525930, "id": 8483866614796957348, "text": "lectus purus conque consectetuer malesuada libero Kafka sed mara elit consectetuer sit", "createdAt": 1680371711000}' to topic='twitter-topic' with key '8483866614796957348'
2023-04-01 12:55:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:21 -0500 2023","id":"5365841271343959056","text":"consectetuer ipsum Lorem massa posuere Maecenas mara Microservices Lorem porttitor massa massa mara purus","user":{"id":"4220912251418759912"}}
2023-04-01 12:55:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer ipsum Lorem massa posuere Maecenas mara Microservices Lorem porttitor massa massa mara purus and sending to kafka topic twitter-topic
2023-04-01 12:55:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4220912251418759912, "id": 5365841271343959056, "text": "consectetuer ipsum Lorem massa posuere Maecenas mara Microservices Lorem porttitor massa massa mara purus", "createdAt": 1680371721000}' to topic='twitter-topic' with key '5365841271343959056'
2023-04-01 12:55:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:31 -0500 2023","id":"4561728086306478615","text":"porttitor conque elit libero Kafka sed malesuada","user":{"id":"1837486396835524513"}}
2023-04-01 12:55:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor conque elit libero Kafka sed malesuada and sending to kafka topic twitter-topic
2023-04-01 12:55:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1837486396835524513, "id": 4561728086306478615, "text": "porttitor conque elit libero Kafka sed malesuada", "createdAt": 1680371731000}' to topic='twitter-topic' with key '4561728086306478615'
2023-04-01 12:55:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:41 -0500 2023","id":"4933805294319772225","text":"Lorem malesuada purus amet Elasticsearch ipsum posuere massa","user":{"id":"988598585202310340"}}
2023-04-01 12:55:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem malesuada purus amet Elasticsearch ipsum posuere massa and sending to kafka topic twitter-topic
2023-04-01 12:55:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 988598585202310340, "id": 4933805294319772225, "text": "Lorem malesuada purus amet Elasticsearch ipsum posuere massa", "createdAt": 1680371741000}' to topic='twitter-topic' with key '4933805294319772225'
2023-04-01 12:55:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:55:51 -0500 2023","id":"6310392533984230619","text":"consectetuer yltricies lectus Elasticsearch Maecenas posuere","user":{"id":"1743274530545156828"}}
2023-04-01 12:55:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer yltricies lectus Elasticsearch Maecenas posuere and sending to kafka topic twitter-topic
2023-04-01 12:55:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1743274530545156828, "id": 6310392533984230619, "text": "consectetuer yltricies lectus Elasticsearch Maecenas posuere", "createdAt": 1680371751000}' to topic='twitter-topic' with key '6310392533984230619'
2023-04-01 12:56:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:01 -0500 2023","id":"5499142750482554621","text":"lectus dolor Lorem libero Lorem conque Elasticsearch consectetuer pulvinar yltricies pulvinar amet","user":{"id":"312850202370671391"}}
2023-04-01 12:56:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus dolor Lorem libero Lorem conque Elasticsearch consectetuer pulvinar yltricies pulvinar amet and sending to kafka topic twitter-topic
2023-04-01 12:56:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 312850202370671391, "id": 5499142750482554621, "text": "lectus dolor Lorem libero Lorem conque Elasticsearch consectetuer pulvinar yltricies pulvinar amet", "createdAt": 1680371761000}' to topic='twitter-topic' with key '5499142750482554621'
2023-04-01 12:56:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:11 -0500 2023","id":"965873667029472211","text":"dolor mara sed Lorem ipsum Maecenas purus Java lectus ipsum amet ipsum conque","user":{"id":"6753538703428185230"}}
2023-04-01 12:56:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor mara sed Lorem ipsum Maecenas purus Java lectus ipsum amet ipsum conque and sending to kafka topic twitter-topic
2023-04-01 12:56:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6753538703428185230, "id": 965873667029472211, "text": "dolor mara sed Lorem ipsum Maecenas purus Java lectus ipsum amet ipsum conque", "createdAt": 1680371771000}' to topic='twitter-topic' with key '965873667029472211'
2023-04-01 12:56:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:21 -0500 2023","id":"8931595814871001019","text":"malesuada conque malesuada amet Microservices porttitor yltricies pulvinar","user":{"id":"574365317047668668"}}
2023-04-01 12:56:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada conque malesuada amet Microservices porttitor yltricies pulvinar and sending to kafka topic twitter-topic
2023-04-01 12:56:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 574365317047668668, "id": 8931595814871001019, "text": "malesuada conque malesuada amet Microservices porttitor yltricies pulvinar", "createdAt": 1680371781000}' to topic='twitter-topic' with key '8931595814871001019'
2023-04-01 12:56:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:31 -0500 2023","id":"8775730623294383152","text":"sed purus conque malesuada yltricies porttitor magna Spring magna lectus conque ipsum conque","user":{"id":"2534649221618193880"}}
2023-04-01 12:56:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed purus conque malesuada yltricies porttitor magna Spring magna lectus conque ipsum conque and sending to kafka topic twitter-topic
2023-04-01 12:56:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2534649221618193880, "id": 8775730623294383152, "text": "sed purus conque malesuada yltricies porttitor magna Spring magna lectus conque ipsum conque", "createdAt": 1680371791000}' to topic='twitter-topic' with key '8775730623294383152'
2023-04-01 12:56:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:41 -0500 2023","id":"5098490859674429709","text":"magna libero consectetuer libero consectetuer conque amet Microservices malesuada pulvinar sit Maecenas adipiscing","user":{"id":"1530407045746480793"}}
2023-04-01 12:56:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna libero consectetuer libero consectetuer conque amet Microservices malesuada pulvinar sit Maecenas adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:56:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1530407045746480793, "id": 5098490859674429709, "text": "magna libero consectetuer libero consectetuer conque amet Microservices malesuada pulvinar sit Maecenas adipiscing", "createdAt": 1680371801000}' to topic='twitter-topic' with key '5098490859674429709'
2023-04-01 12:56:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:56:51 -0500 2023","id":"5197930403164790785","text":"amet porttitor mara massa adipiscing Java ipsum amet mara","user":{"id":"7832695649053465353"}}
2023-04-01 12:56:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet porttitor mara massa adipiscing Java ipsum amet mara and sending to kafka topic twitter-topic
2023-04-01 12:56:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7832695649053465353, "id": 5197930403164790785, "text": "amet porttitor mara massa adipiscing Java ipsum amet mara", "createdAt": 1680371811000}' to topic='twitter-topic' with key '5197930403164790785'
2023-04-01 12:57:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:01 -0500 2023","id":"1986116416071572944","text":"Lorem porttitor dolor elit Java sed Lorem","user":{"id":"949624095762471607"}}
2023-04-01 12:57:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem porttitor dolor elit Java sed Lorem and sending to kafka topic twitter-topic
2023-04-01 12:57:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 949624095762471607, "id": 1986116416071572944, "text": "Lorem porttitor dolor elit Java sed Lorem", "createdAt": 1680371821000}' to topic='twitter-topic' with key '1986116416071572944'
2023-04-01 12:57:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:11 -0500 2023","id":"4686248469975173667","text":"consectetuer consectetuer adipiscing libero Microservices sed amet sit","user":{"id":"3642924302023872894"}}
2023-04-01 12:57:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer consectetuer adipiscing libero Microservices sed amet sit and sending to kafka topic twitter-topic
2023-04-01 12:57:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3642924302023872894, "id": 4686248469975173667, "text": "consectetuer consectetuer adipiscing libero Microservices sed amet sit", "createdAt": 1680371831000}' to topic='twitter-topic' with key '4686248469975173667'
2023-04-01 12:57:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:21 -0500 2023","id":"3201424607152395541","text":"mara consectetuer malesuada pulvinar Spring amet elit","user":{"id":"1068050854230082820"}}
2023-04-01 12:57:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara consectetuer malesuada pulvinar Spring amet elit and sending to kafka topic twitter-topic
2023-04-01 12:57:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1068050854230082820, "id": 3201424607152395541, "text": "mara consectetuer malesuada pulvinar Spring amet elit", "createdAt": 1680371841000}' to topic='twitter-topic' with key '3201424607152395541'
2023-04-01 12:57:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:31 -0500 2023","id":"1026294459217339842","text":"purus magna Maecenas libero yltricies Microservices purus Lorem ipsum posuere","user":{"id":"5578620896964072892"}}
2023-04-01 12:57:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus magna Maecenas libero yltricies Microservices purus Lorem ipsum posuere and sending to kafka topic twitter-topic
2023-04-01 12:57:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5578620896964072892, "id": 1026294459217339842, "text": "purus magna Maecenas libero yltricies Microservices purus Lorem ipsum posuere", "createdAt": 1680371851000}' to topic='twitter-topic' with key '1026294459217339842'
2023-04-01 12:57:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:41 -0500 2023","id":"6923756246718993231","text":"Lorem yltricies yltricies porttitor mara sit posuere porttitor Spring massa posuere lectus mara magna elit sit","user":{"id":"8371920545446070991"}}
2023-04-01 12:57:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem yltricies yltricies porttitor mara sit posuere porttitor Spring massa posuere lectus mara magna elit sit and sending to kafka topic twitter-topic
2023-04-01 12:57:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8371920545446070991, "id": 6923756246718993231, "text": "Lorem yltricies yltricies porttitor mara sit posuere porttitor Spring massa posuere lectus mara magna elit sit", "createdAt": 1680371861000}' to topic='twitter-topic' with key '6923756246718993231'
2023-04-01 12:57:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:57:51 -0500 2023","id":"1219728374518853886","text":"dolor adipiscing elit purus Maecenas Maecenas Lorem massa Microservices sed libero pulvinar adipiscing magna lectus Lorem","user":{"id":"9043906650074826584"}}
2023-04-01 12:57:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor adipiscing elit purus Maecenas Maecenas Lorem massa Microservices sed libero pulvinar adipiscing magna lectus Lorem and sending to kafka topic twitter-topic
2023-04-01 12:57:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9043906650074826584, "id": 1219728374518853886, "text": "dolor adipiscing elit purus Maecenas Maecenas Lorem massa Microservices sed libero pulvinar adipiscing magna lectus Lorem", "createdAt": 1680371871000}' to topic='twitter-topic' with key '1219728374518853886'
2023-04-01 12:58:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:01 -0500 2023","id":"7099877780450357663","text":"Lorem sit Maecenas conque Kafka consectetuer pulvinar magna","user":{"id":"879255044696710342"}}
2023-04-01 12:58:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem sit Maecenas conque Kafka consectetuer pulvinar magna and sending to kafka topic twitter-topic
2023-04-01 12:58:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 879255044696710342, "id": 7099877780450357663, "text": "Lorem sit Maecenas conque Kafka consectetuer pulvinar magna", "createdAt": 1680371881000}' to topic='twitter-topic' with key '7099877780450357663'
2023-04-01 12:58:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:11 -0500 2023","id":"4073880732883698495","text":"purus mara amet conque magna posuere Spring sed magna conque porttitor ipsum","user":{"id":"5731446747305535435"}}
2023-04-01 12:58:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus mara amet conque magna posuere Spring sed magna conque porttitor ipsum and sending to kafka topic twitter-topic
2023-04-01 12:58:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5731446747305535435, "id": 4073880732883698495, "text": "purus mara amet conque magna posuere Spring sed magna conque porttitor ipsum", "createdAt": 1680371891000}' to topic='twitter-topic' with key '4073880732883698495'
2023-04-01 12:58:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:21 -0500 2023","id":"8188718675088422684","text":"amet posuere libero porttitor adipiscing elit Spring magna pulvinar posuere consectetuer sit","user":{"id":"1842924935909033645"}}
2023-04-01 12:58:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet posuere libero porttitor adipiscing elit Spring magna pulvinar posuere consectetuer sit and sending to kafka topic twitter-topic
2023-04-01 12:58:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1842924935909033645, "id": 8188718675088422684, "text": "amet posuere libero porttitor adipiscing elit Spring magna pulvinar posuere consectetuer sit", "createdAt": 1680371901000}' to topic='twitter-topic' with key '8188718675088422684'
2023-04-01 12:58:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:31 -0500 2023","id":"4274606303431876113","text":"Maecenas dolor malesuada yltricies Microservices libero elit","user":{"id":"95540681089600942"}}
2023-04-01 12:58:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas dolor malesuada yltricies Microservices libero elit and sending to kafka topic twitter-topic
2023-04-01 12:58:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 95540681089600942, "id": 4274606303431876113, "text": "Maecenas dolor malesuada yltricies Microservices libero elit", "createdAt": 1680371911000}' to topic='twitter-topic' with key '4274606303431876113'
2023-04-01 12:58:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:41 -0500 2023","id":"8217970418084839755","text":"adipiscing magna sit pulvinar Elasticsearch consectetuer Maecenas yltricies","user":{"id":"3343358517705544365"}}
2023-04-01 12:58:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing magna sit pulvinar Elasticsearch consectetuer Maecenas yltricies and sending to kafka topic twitter-topic
2023-04-01 12:58:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3343358517705544365, "id": 8217970418084839755, "text": "adipiscing magna sit pulvinar Elasticsearch consectetuer Maecenas yltricies", "createdAt": 1680371921000}' to topic='twitter-topic' with key '8217970418084839755'
2023-04-01 12:58:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:58:51 -0500 2023","id":"4560892481308758644","text":"consectetuer libero yltricies mara Spring elit adipiscing","user":{"id":"519110737016067433"}}
2023-04-01 12:58:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer libero yltricies mara Spring elit adipiscing and sending to kafka topic twitter-topic
2023-04-01 12:58:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 519110737016067433, "id": 4560892481308758644, "text": "consectetuer libero yltricies mara Spring elit adipiscing", "createdAt": 1680371931000}' to topic='twitter-topic' with key '4560892481308758644'
2023-04-01 12:59:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:01 -0500 2023","id":"5242476240063593236","text":"Lorem lectus ipsum porttitor adipiscing Microservices adipiscing libero purus","user":{"id":"2133246451904472157"}}
2023-04-01 12:59:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem lectus ipsum porttitor adipiscing Microservices adipiscing libero purus and sending to kafka topic twitter-topic
2023-04-01 12:59:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2133246451904472157, "id": 5242476240063593236, "text": "Lorem lectus ipsum porttitor adipiscing Microservices adipiscing libero purus", "createdAt": 1680371941000}' to topic='twitter-topic' with key '5242476240063593236'
2023-04-01 12:59:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:11 -0500 2023","id":"629362455177107481","text":"conque adipiscing malesuada adipiscing Maecenas sed Spring ipsum elit sed malesuada","user":{"id":"3317743293094187912"}}
2023-04-01 12:59:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque adipiscing malesuada adipiscing Maecenas sed Spring ipsum elit sed malesuada and sending to kafka topic twitter-topic
2023-04-01 12:59:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3317743293094187912, "id": 629362455177107481, "text": "conque adipiscing malesuada adipiscing Maecenas sed Spring ipsum elit sed malesuada", "createdAt": 1680371951000}' to topic='twitter-topic' with key '629362455177107481'
2023-04-01 12:59:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:21 -0500 2023","id":"3025236155595874679","text":"sed adipiscing amet massa sit magna purus amet Java Maecenas conque sit malesuada sed sed lectus","user":{"id":"8657925595933968511"}}
2023-04-01 12:59:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed adipiscing amet massa sit magna purus amet Java Maecenas conque sit malesuada sed sed lectus and sending to kafka topic twitter-topic
2023-04-01 12:59:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8657925595933968511, "id": 3025236155595874679, "text": "sed adipiscing amet massa sit magna purus amet Java Maecenas conque sit malesuada sed sed lectus", "createdAt": 1680371961000}' to topic='twitter-topic' with key '3025236155595874679'
2023-04-01 12:59:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:31 -0500 2023","id":"6351801156083737735","text":"mara magna porttitor porttitor Spring pulvinar libero ipsum","user":{"id":"4359750780505480772"}}
2023-04-01 12:59:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara magna porttitor porttitor Spring pulvinar libero ipsum and sending to kafka topic twitter-topic
2023-04-01 12:59:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4359750780505480772, "id": 6351801156083737735, "text": "mara magna porttitor porttitor Spring pulvinar libero ipsum", "createdAt": 1680371971000}' to topic='twitter-topic' with key '6351801156083737735'
2023-04-01 12:59:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:41 -0500 2023","id":"6146291444814393913","text":"purus libero Maecenas Lorem Java ipsum amet Maecenas","user":{"id":"1473578676938793193"}}
2023-04-01 12:59:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus libero Maecenas Lorem Java ipsum amet Maecenas and sending to kafka topic twitter-topic
2023-04-01 12:59:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1473578676938793193, "id": 6146291444814393913, "text": "purus libero Maecenas Lorem Java ipsum amet Maecenas", "createdAt": 1680371981000}' to topic='twitter-topic' with key '6146291444814393913'
2023-04-01 12:59:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 12:59:51 -0500 2023","id":"5554505842106996803","text":"sed porttitor lectus Lorem Spring pulvinar adipiscing dolor","user":{"id":"2007255803000763977"}}
2023-04-01 12:59:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed porttitor lectus Lorem Spring pulvinar adipiscing dolor and sending to kafka topic twitter-topic
2023-04-01 12:59:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2007255803000763977, "id": 5554505842106996803, "text": "sed porttitor lectus Lorem Spring pulvinar adipiscing dolor", "createdAt": 1680371991000}' to topic='twitter-topic' with key '5554505842106996803'
2023-04-01 13:00:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:01 -0500 2023","id":"5587002364083131805","text":"Lorem amet mara mara ipsum porttitor consectetuer Kafka elit dolor malesuada porttitor consectetuer","user":{"id":"6613671922619451435"}}
2023-04-01 13:00:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem amet mara mara ipsum porttitor consectetuer Kafka elit dolor malesuada porttitor consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:00:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6613671922619451435, "id": 5587002364083131805, "text": "Lorem amet mara mara ipsum porttitor consectetuer Kafka elit dolor malesuada porttitor consectetuer", "createdAt": 1680372001000}' to topic='twitter-topic' with key '5587002364083131805'
2023-04-01 13:00:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:11 -0500 2023","id":"9210074062013421795","text":"purus conque yltricies yltricies yltricies posuere adipiscing Java libero purus pulvinar pulvinar consectetuer","user":{"id":"444972095341495255"}}
2023-04-01 13:00:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus conque yltricies yltricies yltricies posuere adipiscing Java libero purus pulvinar pulvinar consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:00:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 444972095341495255, "id": 9210074062013421795, "text": "purus conque yltricies yltricies yltricies posuere adipiscing Java libero purus pulvinar pulvinar consectetuer", "createdAt": 1680372011000}' to topic='twitter-topic' with key '9210074062013421795'
2023-04-01 13:00:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:21 -0500 2023","id":"2843031519859084451","text":"dolor ipsum magna sit Lorem Java porttitor amet consectetuer adipiscing","user":{"id":"3482996663425365651"}}
2023-04-01 13:00:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor ipsum magna sit Lorem Java porttitor amet consectetuer adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:00:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3482996663425365651, "id": 2843031519859084451, "text": "dolor ipsum magna sit Lorem Java porttitor amet consectetuer adipiscing", "createdAt": 1680372021000}' to topic='twitter-topic' with key '2843031519859084451'
2023-04-01 13:00:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:31 -0500 2023","id":"7118786068684701427","text":"conque libero conque posuere Elasticsearch dolor porttitor","user":{"id":"5422231787770019619"}}
2023-04-01 13:00:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque libero conque posuere Elasticsearch dolor porttitor and sending to kafka topic twitter-topic
2023-04-01 13:00:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5422231787770019619, "id": 7118786068684701427, "text": "conque libero conque posuere Elasticsearch dolor porttitor", "createdAt": 1680372031000}' to topic='twitter-topic' with key '7118786068684701427'
2023-04-01 13:00:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:41 -0500 2023","id":"8495058460822552021","text":"libero pulvinar posuere Lorem mara massa dolor yltricies Spring sed lectus mara mara adipiscing adipiscing adipiscing","user":{"id":"6736806778716328127"}}
2023-04-01 13:00:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero pulvinar posuere Lorem mara massa dolor yltricies Spring sed lectus mara mara adipiscing adipiscing adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:00:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6736806778716328127, "id": 8495058460822552021, "text": "libero pulvinar posuere Lorem mara massa dolor yltricies Spring sed lectus mara mara adipiscing adipiscing adipiscing", "createdAt": 1680372041000}' to topic='twitter-topic' with key '8495058460822552021'
2023-04-01 13:00:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:00:51 -0500 2023","id":"2292026377501298299","text":"Lorem libero elit Elasticsearch malesuada amet","user":{"id":"1376910373110883603"}}
2023-04-01 13:00:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem libero elit Elasticsearch malesuada amet and sending to kafka topic twitter-topic
2023-04-01 13:00:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1376910373110883603, "id": 2292026377501298299, "text": "Lorem libero elit Elasticsearch malesuada amet", "createdAt": 1680372051000}' to topic='twitter-topic' with key '2292026377501298299'
2023-04-01 13:01:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:01 -0500 2023","id":"4066358405975429456","text":"libero pulvinar adipiscing magna posuere conque Microservices Maecenas magna malesuada pulvinar pulvinar","user":{"id":"705474964989256030"}}
2023-04-01 13:01:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero pulvinar adipiscing magna posuere conque Microservices Maecenas magna malesuada pulvinar pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:01:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 705474964989256030, "id": 4066358405975429456, "text": "libero pulvinar adipiscing magna posuere conque Microservices Maecenas magna malesuada pulvinar pulvinar", "createdAt": 1680372061000}' to topic='twitter-topic' with key '4066358405975429456'
2023-04-01 13:01:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:11 -0500 2023","id":"159287339158600735","text":"malesuada libero mara Maecenas mara elit Microservices pulvinar malesuada Maecenas Maecenas","user":{"id":"977145354680879742"}}
2023-04-01 13:01:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada libero mara Maecenas mara elit Microservices pulvinar malesuada Maecenas Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:01:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 977145354680879742, "id": 159287339158600735, "text": "malesuada libero mara Maecenas mara elit Microservices pulvinar malesuada Maecenas Maecenas", "createdAt": 1680372071000}' to topic='twitter-topic' with key '159287339158600735'
2023-04-01 13:01:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:21 -0500 2023","id":"2995680013118809498","text":"Maecenas dolor massa consectetuer Kafka lectus Lorem","user":{"id":"361540564033710528"}}
2023-04-01 13:01:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas dolor massa consectetuer Kafka lectus Lorem and sending to kafka topic twitter-topic
2023-04-01 13:01:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 361540564033710528, "id": 2995680013118809498, "text": "Maecenas dolor massa consectetuer Kafka lectus Lorem", "createdAt": 1680372081000}' to topic='twitter-topic' with key '2995680013118809498'
2023-04-01 13:01:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:31 -0500 2023","id":"9100141073344268711","text":"magna massa magna purus yltricies purus Elasticsearch porttitor ipsum consectetuer pulvinar Lorem","user":{"id":"2810055529352658632"}}
2023-04-01 13:01:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna massa magna purus yltricies purus Elasticsearch porttitor ipsum consectetuer pulvinar Lorem and sending to kafka topic twitter-topic
2023-04-01 13:01:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2810055529352658632, "id": 9100141073344268711, "text": "magna massa magna purus yltricies purus Elasticsearch porttitor ipsum consectetuer pulvinar Lorem", "createdAt": 1680372091000}' to topic='twitter-topic' with key '9100141073344268711'
2023-04-01 13:01:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:41 -0500 2023","id":"4392554932862705444","text":"Lorem sit porttitor elit dolor dolor amet dolor Microservices sit sed yltricies libero purus amet","user":{"id":"5358982088869440362"}}
2023-04-01 13:01:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem sit porttitor elit dolor dolor amet dolor Microservices sit sed yltricies libero purus amet and sending to kafka topic twitter-topic
2023-04-01 13:01:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5358982088869440362, "id": 4392554932862705444, "text": "Lorem sit porttitor elit dolor dolor amet dolor Microservices sit sed yltricies libero purus amet", "createdAt": 1680372101000}' to topic='twitter-topic' with key '4392554932862705444'
2023-04-01 13:01:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:01:51 -0500 2023","id":"3636606674185010954","text":"amet sed malesuada sed lectus purus Elasticsearch conque pulvinar lectus massa","user":{"id":"6827935241447726632"}}
2023-04-01 13:01:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet sed malesuada sed lectus purus Elasticsearch conque pulvinar lectus massa and sending to kafka topic twitter-topic
2023-04-01 13:01:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6827935241447726632, "id": 3636606674185010954, "text": "amet sed malesuada sed lectus purus Elasticsearch conque pulvinar lectus massa", "createdAt": 1680372111000}' to topic='twitter-topic' with key '3636606674185010954'
2023-04-01 13:02:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:01 -0500 2023","id":"2142481155835031798","text":"mara purus libero yltricies purus Kafka sit sed adipiscing adipiscing","user":{"id":"3662879627584348968"}}
2023-04-01 13:02:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara purus libero yltricies purus Kafka sit sed adipiscing adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:02:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3662879627584348968, "id": 2142481155835031798, "text": "mara purus libero yltricies purus Kafka sit sed adipiscing adipiscing", "createdAt": 1680372121000}' to topic='twitter-topic' with key '2142481155835031798'
2023-04-01 13:02:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:11 -0500 2023","id":"4837956430428225222","text":"Maecenas dolor yltricies sed adipiscing sit Kafka sit malesuada mara conque purus","user":{"id":"5708714882675398908"}}
2023-04-01 13:02:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas dolor yltricies sed adipiscing sit Kafka sit malesuada mara conque purus and sending to kafka topic twitter-topic
2023-04-01 13:02:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5708714882675398908, "id": 4837956430428225222, "text": "Maecenas dolor yltricies sed adipiscing sit Kafka sit malesuada mara conque purus", "createdAt": 1680372131000}' to topic='twitter-topic' with key '4837956430428225222'
2023-04-01 13:02:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:21 -0500 2023","id":"3720059164766800211","text":"adipiscing posuere Maecenas posuere Spring purus porttitor consectetuer","user":{"id":"4075039130546323727"}}
2023-04-01 13:02:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere Maecenas posuere Spring purus porttitor consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:02:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4075039130546323727, "id": 3720059164766800211, "text": "adipiscing posuere Maecenas posuere Spring purus porttitor consectetuer", "createdAt": 1680372141000}' to topic='twitter-topic' with key '3720059164766800211'
2023-04-01 13:02:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:31 -0500 2023","id":"2392737769806986336","text":"adipiscing porttitor lectus dolor purus massa dolor Elasticsearch Lorem lectus magna magna porttitor yltricies","user":{"id":"1302331916458225919"}}
2023-04-01 13:02:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing porttitor lectus dolor purus massa dolor Elasticsearch Lorem lectus magna magna porttitor yltricies and sending to kafka topic twitter-topic
2023-04-01 13:02:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1302331916458225919, "id": 2392737769806986336, "text": "adipiscing porttitor lectus dolor purus massa dolor Elasticsearch Lorem lectus magna magna porttitor yltricies", "createdAt": 1680372151000}' to topic='twitter-topic' with key '2392737769806986336'
2023-04-01 13:02:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:41 -0500 2023","id":"4646556422116253206","text":"dolor dolor magna mara Java conque sit","user":{"id":"967667000635153986"}}
2023-04-01 13:02:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor dolor magna mara Java conque sit and sending to kafka topic twitter-topic
2023-04-01 13:02:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 967667000635153986, "id": 4646556422116253206, "text": "dolor dolor magna mara Java conque sit", "createdAt": 1680372161000}' to topic='twitter-topic' with key '4646556422116253206'
2023-04-01 13:02:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:02:51 -0500 2023","id":"8700222789324487972","text":"adipiscing ipsum sed sed consectetuer lectus magna Spring malesuada consectetuer porttitor yltricies malesuada adipiscing","user":{"id":"5296339620360507800"}}
2023-04-01 13:02:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing ipsum sed sed consectetuer lectus magna Spring malesuada consectetuer porttitor yltricies malesuada adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:02:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5296339620360507800, "id": 8700222789324487972, "text": "adipiscing ipsum sed sed consectetuer lectus magna Spring malesuada consectetuer porttitor yltricies malesuada adipiscing", "createdAt": 1680372171000}' to topic='twitter-topic' with key '8700222789324487972'
2023-04-01 13:03:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:01 -0500 2023","id":"5272071359873652259","text":"pulvinar lectus conque elit libero Spring adipiscing massa consectetuer","user":{"id":"7534682262454080018"}}
2023-04-01 13:03:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar lectus conque elit libero Spring adipiscing massa consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:03:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7534682262454080018, "id": 5272071359873652259, "text": "pulvinar lectus conque elit libero Spring adipiscing massa consectetuer", "createdAt": 1680372181000}' to topic='twitter-topic' with key '5272071359873652259'
2023-04-01 13:03:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:11 -0500 2023","id":"4818911988210586838","text":"consectetuer pulvinar pulvinar sit Spring elit Lorem","user":{"id":"1046308284445625561"}}
2023-04-01 13:03:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer pulvinar pulvinar sit Spring elit Lorem and sending to kafka topic twitter-topic
2023-04-01 13:03:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1046308284445625561, "id": 4818911988210586838, "text": "consectetuer pulvinar pulvinar sit Spring elit Lorem", "createdAt": 1680372191000}' to topic='twitter-topic' with key '4818911988210586838'
2023-04-01 13:03:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:21 -0500 2023","id":"6537621803264022270","text":"massa sit Maecenas lectus Maecenas elit massa Microservices libero yltricies dolor libero lectus dolor","user":{"id":"2232891677545957463"}}
2023-04-01 13:03:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa sit Maecenas lectus Maecenas elit massa Microservices libero yltricies dolor libero lectus dolor and sending to kafka topic twitter-topic
2023-04-01 13:03:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2232891677545957463, "id": 6537621803264022270, "text": "massa sit Maecenas lectus Maecenas elit massa Microservices libero yltricies dolor libero lectus dolor", "createdAt": 1680372201000}' to topic='twitter-topic' with key '6537621803264022270'
2023-04-01 13:03:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:31 -0500 2023","id":"2937819673051038670","text":"adipiscing Lorem purus libero porttitor Elasticsearch Lorem conque mara","user":{"id":"58414121008272314"}}
2023-04-01 13:03:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing Lorem purus libero porttitor Elasticsearch Lorem conque mara and sending to kafka topic twitter-topic
2023-04-01 13:03:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 58414121008272314, "id": 2937819673051038670, "text": "adipiscing Lorem purus libero porttitor Elasticsearch Lorem conque mara", "createdAt": 1680372211000}' to topic='twitter-topic' with key '2937819673051038670'
2023-04-01 13:03:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:41 -0500 2023","id":"3963058455803335165","text":"consectetuer porttitor yltricies posuere pulvinar porttitor posuere amet Spring massa amet consectetuer malesuada ipsum dolor","user":{"id":"1949664561878350445"}}
2023-04-01 13:03:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer porttitor yltricies posuere pulvinar porttitor posuere amet Spring massa amet consectetuer malesuada ipsum dolor and sending to kafka topic twitter-topic
2023-04-01 13:03:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1949664561878350445, "id": 3963058455803335165, "text": "consectetuer porttitor yltricies posuere pulvinar porttitor posuere amet Spring massa amet consectetuer malesuada ipsum dolor", "createdAt": 1680372221000}' to topic='twitter-topic' with key '3963058455803335165'
2023-04-01 13:03:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:03:51 -0500 2023","id":"1570425930980250757","text":"porttitor sit Lorem elit adipiscing malesuada Elasticsearch magna conque consectetuer ipsum","user":{"id":"1610548371803067293"}}
2023-04-01 13:03:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor sit Lorem elit adipiscing malesuada Elasticsearch magna conque consectetuer ipsum and sending to kafka topic twitter-topic
2023-04-01 13:03:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1610548371803067293, "id": 1570425930980250757, "text": "porttitor sit Lorem elit adipiscing malesuada Elasticsearch magna conque consectetuer ipsum", "createdAt": 1680372231000}' to topic='twitter-topic' with key '1570425930980250757'
2023-04-01 13:04:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:01 -0500 2023","id":"1430160116917734936","text":"posuere conque pulvinar purus lectus pulvinar adipiscing dolor Kafka mara sit yltricies sit mara massa purus","user":{"id":"3392464717598489468"}}
2023-04-01 13:04:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere conque pulvinar purus lectus pulvinar adipiscing dolor Kafka mara sit yltricies sit mara massa purus and sending to kafka topic twitter-topic
2023-04-01 13:04:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3392464717598489468, "id": 1430160116917734936, "text": "posuere conque pulvinar purus lectus pulvinar adipiscing dolor Kafka mara sit yltricies sit mara massa purus", "createdAt": 1680372241000}' to topic='twitter-topic' with key '1430160116917734936'
2023-04-01 13:04:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:11 -0500 2023","id":"4770174200393442714","text":"adipiscing purus purus consectetuer amet mara mara Java porttitor pulvinar purus conque pulvinar","user":{"id":"7497944337128831016"}}
2023-04-01 13:04:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing purus purus consectetuer amet mara mara Java porttitor pulvinar purus conque pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:04:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7497944337128831016, "id": 4770174200393442714, "text": "adipiscing purus purus consectetuer amet mara mara Java porttitor pulvinar purus conque pulvinar", "createdAt": 1680372251000}' to topic='twitter-topic' with key '4770174200393442714'
2023-04-01 13:04:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:21 -0500 2023","id":"6246947276946958625","text":"pulvinar Lorem conque malesuada Java libero mara","user":{"id":"8054094678308730798"}}
2023-04-01 13:04:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Lorem conque malesuada Java libero mara and sending to kafka topic twitter-topic
2023-04-01 13:04:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8054094678308730798, "id": 6246947276946958625, "text": "pulvinar Lorem conque malesuada Java libero mara", "createdAt": 1680372261000}' to topic='twitter-topic' with key '6246947276946958625'
2023-04-01 13:04:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:31 -0500 2023","id":"1745007227255145539","text":"sit dolor conque Maecenas malesuada Lorem posuere yltricies Spring Lorem purus Maecenas consectetuer mara lectus elit","user":{"id":"4565209680660002247"}}
2023-04-01 13:04:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit dolor conque Maecenas malesuada Lorem posuere yltricies Spring Lorem purus Maecenas consectetuer mara lectus elit and sending to kafka topic twitter-topic
2023-04-01 13:04:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4565209680660002247, "id": 1745007227255145539, "text": "sit dolor conque Maecenas malesuada Lorem posuere yltricies Spring Lorem purus Maecenas consectetuer mara lectus elit", "createdAt": 1680372271000}' to topic='twitter-topic' with key '1745007227255145539'
2023-04-01 13:04:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:41 -0500 2023","id":"7012548088767682818","text":"mara amet elit sed adipiscing pulvinar Microservices purus sit magna elit","user":{"id":"1067460774821808060"}}
2023-04-01 13:04:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara amet elit sed adipiscing pulvinar Microservices purus sit magna elit and sending to kafka topic twitter-topic
2023-04-01 13:04:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1067460774821808060, "id": 7012548088767682818, "text": "mara amet elit sed adipiscing pulvinar Microservices purus sit magna elit", "createdAt": 1680372281000}' to topic='twitter-topic' with key '7012548088767682818'
2023-04-01 13:04:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:04:51 -0500 2023","id":"299246420365625458","text":"lectus magna sed sed Kafka ipsum mara","user":{"id":"5051396264187485020"}}
2023-04-01 13:04:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus magna sed sed Kafka ipsum mara and sending to kafka topic twitter-topic
2023-04-01 13:04:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5051396264187485020, "id": 299246420365625458, "text": "lectus magna sed sed Kafka ipsum mara", "createdAt": 1680372291000}' to topic='twitter-topic' with key '299246420365625458'
2023-04-01 13:05:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:01 -0500 2023","id":"7392554790675007115","text":"porttitor ipsum magna elit Maecenas malesuada ipsum consectetuer Microservices amet purus dolor lectus Maecenas amet mara","user":{"id":"5627369193877430052"}}
2023-04-01 13:05:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor ipsum magna elit Maecenas malesuada ipsum consectetuer Microservices amet purus dolor lectus Maecenas amet mara and sending to kafka topic twitter-topic
2023-04-01 13:05:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5627369193877430052, "id": 7392554790675007115, "text": "porttitor ipsum magna elit Maecenas malesuada ipsum consectetuer Microservices amet purus dolor lectus Maecenas amet mara", "createdAt": 1680372301000}' to topic='twitter-topic' with key '7392554790675007115'
2023-04-01 13:05:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:11 -0500 2023","id":"543392826909905163","text":"adipiscing sit ipsum consectetuer lectus Java Lorem elit elit","user":{"id":"8784682590650627043"}}
2023-04-01 13:05:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing sit ipsum consectetuer lectus Java Lorem elit elit and sending to kafka topic twitter-topic
2023-04-01 13:05:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8784682590650627043, "id": 543392826909905163, "text": "adipiscing sit ipsum consectetuer lectus Java Lorem elit elit", "createdAt": 1680372311000}' to topic='twitter-topic' with key '543392826909905163'
2023-04-01 13:05:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:21 -0500 2023","id":"4933546954931514809","text":"sit conque elit Kafka dolor consectetuer","user":{"id":"9071048544398158491"}}
2023-04-01 13:05:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit conque elit Kafka dolor consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:05:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9071048544398158491, "id": 4933546954931514809, "text": "sit conque elit Kafka dolor consectetuer", "createdAt": 1680372321000}' to topic='twitter-topic' with key '4933546954931514809'
2023-04-01 13:05:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:31 -0500 2023","id":"6609473827434682959","text":"sit porttitor yltricies posuere Spring massa elit mara","user":{"id":"4508622200921166692"}}
2023-04-01 13:05:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit porttitor yltricies posuere Spring massa elit mara and sending to kafka topic twitter-topic
2023-04-01 13:05:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4508622200921166692, "id": 6609473827434682959, "text": "sit porttitor yltricies posuere Spring massa elit mara", "createdAt": 1680372331000}' to topic='twitter-topic' with key '6609473827434682959'
2023-04-01 13:05:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:41 -0500 2023","id":"53274563061693797","text":"libero magna posuere elit Microservices yltricies massa sit","user":{"id":"6867269071822425926"}}
2023-04-01 13:05:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero magna posuere elit Microservices yltricies massa sit and sending to kafka topic twitter-topic
2023-04-01 13:05:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6867269071822425926, "id": 53274563061693797, "text": "libero magna posuere elit Microservices yltricies massa sit", "createdAt": 1680372341000}' to topic='twitter-topic' with key '53274563061693797'
2023-04-01 13:05:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:05:51 -0500 2023","id":"1919381077705646815","text":"mara sit libero conque mara Lorem Spring malesuada malesuada elit adipiscing","user":{"id":"7385945464078260205"}}
2023-04-01 13:05:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sit libero conque mara Lorem Spring malesuada malesuada elit adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:05:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7385945464078260205, "id": 1919381077705646815, "text": "mara sit libero conque mara Lorem Spring malesuada malesuada elit adipiscing", "createdAt": 1680372351000}' to topic='twitter-topic' with key '1919381077705646815'
2023-04-01 13:06:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:01 -0500 2023","id":"8456958773891742822","text":"Lorem libero consectetuer porttitor pulvinar malesuada consectetuer sed Elasticsearch pulvinar Maecenas purus purus sit ipsum","user":{"id":"5250124541757661221"}}
2023-04-01 13:06:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem libero consectetuer porttitor pulvinar malesuada consectetuer sed Elasticsearch pulvinar Maecenas purus purus sit ipsum and sending to kafka topic twitter-topic
2023-04-01 13:06:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5250124541757661221, "id": 8456958773891742822, "text": "Lorem libero consectetuer porttitor pulvinar malesuada consectetuer sed Elasticsearch pulvinar Maecenas purus purus sit ipsum", "createdAt": 1680372361000}' to topic='twitter-topic' with key '8456958773891742822'
2023-04-01 13:06:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:11 -0500 2023","id":"616844951258498572","text":"massa massa malesuada Kafka amet lectus","user":{"id":"404709722499732970"}}
2023-04-01 13:06:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa massa malesuada Kafka amet lectus and sending to kafka topic twitter-topic
2023-04-01 13:06:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 404709722499732970, "id": 616844951258498572, "text": "massa massa malesuada Kafka amet lectus", "createdAt": 1680372371000}' to topic='twitter-topic' with key '616844951258498572'
2023-04-01 13:06:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:21 -0500 2023","id":"1972863632352794650","text":"mara conque sed purus elit posuere mara Spring adipiscing pulvinar Lorem lectus mara porttitor","user":{"id":"4164874716205825964"}}
2023-04-01 13:06:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara conque sed purus elit posuere mara Spring adipiscing pulvinar Lorem lectus mara porttitor and sending to kafka topic twitter-topic
2023-04-01 13:06:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4164874716205825964, "id": 1972863632352794650, "text": "mara conque sed purus elit posuere mara Spring adipiscing pulvinar Lorem lectus mara porttitor", "createdAt": 1680372381000}' to topic='twitter-topic' with key '1972863632352794650'
2023-04-01 13:06:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:31 -0500 2023","id":"2267994719557043230","text":"dolor ipsum massa lectus Microservices ipsum adipiscing","user":{"id":"9122425336603264220"}}
2023-04-01 13:06:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor ipsum massa lectus Microservices ipsum adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:06:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9122425336603264220, "id": 2267994719557043230, "text": "dolor ipsum massa lectus Microservices ipsum adipiscing", "createdAt": 1680372391000}' to topic='twitter-topic' with key '2267994719557043230'
2023-04-01 13:06:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:41 -0500 2023","id":"139064333227546437","text":"adipiscing malesuada amet dolor sit ipsum consectetuer Maecenas Spring dolor ipsum purus purus malesuada sit","user":{"id":"3257939477413941541"}}
2023-04-01 13:06:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing malesuada amet dolor sit ipsum consectetuer Maecenas Spring dolor ipsum purus purus malesuada sit and sending to kafka topic twitter-topic
2023-04-01 13:06:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3257939477413941541, "id": 139064333227546437, "text": "adipiscing malesuada amet dolor sit ipsum consectetuer Maecenas Spring dolor ipsum purus purus malesuada sit", "createdAt": 1680372401000}' to topic='twitter-topic' with key '139064333227546437'
2023-04-01 13:06:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:06:51 -0500 2023","id":"9204980980149505017","text":"sed Lorem porttitor consectetuer Lorem yltricies dolor mara Elasticsearch conque magna libero lectus porttitor massa adipiscing","user":{"id":"4636714707638805062"}}
2023-04-01 13:06:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed Lorem porttitor consectetuer Lorem yltricies dolor mara Elasticsearch conque magna libero lectus porttitor massa adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:06:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4636714707638805062, "id": 9204980980149505017, "text": "sed Lorem porttitor consectetuer Lorem yltricies dolor mara Elasticsearch conque magna libero lectus porttitor massa adipiscing", "createdAt": 1680372411000}' to topic='twitter-topic' with key '9204980980149505017'
2023-04-01 13:07:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:01 -0500 2023","id":"7968239447338641085","text":"porttitor ipsum posuere libero yltricies Java dolor yltricies yltricies","user":{"id":"7772200108834551247"}}
2023-04-01 13:07:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor ipsum posuere libero yltricies Java dolor yltricies yltricies and sending to kafka topic twitter-topic
2023-04-01 13:07:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7772200108834551247, "id": 7968239447338641085, "text": "porttitor ipsum posuere libero yltricies Java dolor yltricies yltricies", "createdAt": 1680372421000}' to topic='twitter-topic' with key '7968239447338641085'
2023-04-01 13:07:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:11 -0500 2023","id":"7662464612741779740","text":"conque ipsum ipsum mara amet dolor lectus magna Java purus mara Lorem lectus sit conque","user":{"id":"4292192807436295703"}}
2023-04-01 13:07:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque ipsum ipsum mara amet dolor lectus magna Java purus mara Lorem lectus sit conque and sending to kafka topic twitter-topic
2023-04-01 13:07:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4292192807436295703, "id": 7662464612741779740, "text": "conque ipsum ipsum mara amet dolor lectus magna Java purus mara Lorem lectus sit conque", "createdAt": 1680372431000}' to topic='twitter-topic' with key '7662464612741779740'
2023-04-01 13:07:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:21 -0500 2023","id":"8000815386162199711","text":"massa posuere elit pulvinar amet sed Kafka purus sit yltricies sit adipiscing","user":{"id":"334802452168475607"}}
2023-04-01 13:07:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa posuere elit pulvinar amet sed Kafka purus sit yltricies sit adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:07:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 334802452168475607, "id": 8000815386162199711, "text": "massa posuere elit pulvinar amet sed Kafka purus sit yltricies sit adipiscing", "createdAt": 1680372441000}' to topic='twitter-topic' with key '8000815386162199711'
2023-04-01 13:07:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:31 -0500 2023","id":"1733545086099769794","text":"purus sed malesuada amet massa sed elit adipiscing Elasticsearch massa yltricies sit Lorem sit libero elit","user":{"id":"764309271568427762"}}
2023-04-01 13:07:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus sed malesuada amet massa sed elit adipiscing Elasticsearch massa yltricies sit Lorem sit libero elit and sending to kafka topic twitter-topic
2023-04-01 13:07:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 764309271568427762, "id": 1733545086099769794, "text": "purus sed malesuada amet massa sed elit adipiscing Elasticsearch massa yltricies sit Lorem sit libero elit", "createdAt": 1680372451000}' to topic='twitter-topic' with key '1733545086099769794'
2023-04-01 13:07:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:41 -0500 2023","id":"4843844370354944744","text":"ipsum sed elit elit ipsum posuere libero libero Spring libero sit Lorem pulvinar magna posuere posuere","user":{"id":"2768889300055106416"}}
2023-04-01 13:07:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum sed elit elit ipsum posuere libero libero Spring libero sit Lorem pulvinar magna posuere posuere and sending to kafka topic twitter-topic
2023-04-01 13:07:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2768889300055106416, "id": 4843844370354944744, "text": "ipsum sed elit elit ipsum posuere libero libero Spring libero sit Lorem pulvinar magna posuere posuere", "createdAt": 1680372461000}' to topic='twitter-topic' with key '4843844370354944744'
2023-04-01 13:07:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:07:51 -0500 2023","id":"7590158035417720699","text":"elit pulvinar pulvinar massa purus adipiscing consectetuer Java purus Lorem elit Maecenas sit","user":{"id":"9039138862373947263"}}
2023-04-01 13:07:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit pulvinar pulvinar massa purus adipiscing consectetuer Java purus Lorem elit Maecenas sit and sending to kafka topic twitter-topic
2023-04-01 13:07:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9039138862373947263, "id": 7590158035417720699, "text": "elit pulvinar pulvinar massa purus adipiscing consectetuer Java purus Lorem elit Maecenas sit", "createdAt": 1680372471000}' to topic='twitter-topic' with key '7590158035417720699'
2023-04-01 13:08:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:01 -0500 2023","id":"530605092808199253","text":"porttitor yltricies mara amet purus magna elit adipiscing Microservices massa lectus purus dolor conque purus","user":{"id":"2788619846164356102"}}
2023-04-01 13:08:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor yltricies mara amet purus magna elit adipiscing Microservices massa lectus purus dolor conque purus and sending to kafka topic twitter-topic
2023-04-01 13:08:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2788619846164356102, "id": 530605092808199253, "text": "porttitor yltricies mara amet purus magna elit adipiscing Microservices massa lectus purus dolor conque purus", "createdAt": 1680372481000}' to topic='twitter-topic' with key '530605092808199253'
2023-04-01 13:08:11 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:11 -0500 2023","id":"7586237412538619726","text":"Maecenas posuere sed consectetuer libero Microservices Lorem sed ipsum consectetuer","user":{"id":"2877071156771045710"}}
2023-04-01 13:08:11 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas posuere sed consectetuer libero Microservices Lorem sed ipsum consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:08:11 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2877071156771045710, "id": 7586237412538619726, "text": "Maecenas posuere sed consectetuer libero Microservices Lorem sed ipsum consectetuer", "createdAt": 1680372491000}' to topic='twitter-topic' with key '7586237412538619726'
2023-04-01 13:08:21 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:21 -0500 2023","id":"7328849192288396871","text":"porttitor adipiscing posuere amet dolor purus Kafka purus ipsum pulvinar massa","user":{"id":"6770102686211579631"}}
2023-04-01 13:08:21 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor adipiscing posuere amet dolor purus Kafka purus ipsum pulvinar massa and sending to kafka topic twitter-topic
2023-04-01 13:08:21 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6770102686211579631, "id": 7328849192288396871, "text": "porttitor adipiscing posuere amet dolor purus Kafka purus ipsum pulvinar massa", "createdAt": 1680372501000}' to topic='twitter-topic' with key '7328849192288396871'
2023-04-01 13:08:31 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:31 -0500 2023","id":"2409827028093821311","text":"purus libero sed conque sit Spring conque yltricies amet elit","user":{"id":"3002300227611788206"}}
2023-04-01 13:08:31 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus libero sed conque sit Spring conque yltricies amet elit and sending to kafka topic twitter-topic
2023-04-01 13:08:31 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3002300227611788206, "id": 2409827028093821311, "text": "purus libero sed conque sit Spring conque yltricies amet elit", "createdAt": 1680372511000}' to topic='twitter-topic' with key '2409827028093821311'
2023-04-01 13:08:41 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:41 -0500 2023","id":"9014936443189058328","text":"pulvinar adipiscing pulvinar massa magna Maecenas consectetuer libero Kafka Lorem Maecenas purus posuere Maecenas consectetuer","user":{"id":"3625763592250949297"}}
2023-04-01 13:08:41 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar adipiscing pulvinar massa magna Maecenas consectetuer libero Kafka Lorem Maecenas purus posuere Maecenas consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:08:41 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3625763592250949297, "id": 9014936443189058328, "text": "pulvinar adipiscing pulvinar massa magna Maecenas consectetuer libero Kafka Lorem Maecenas purus posuere Maecenas consectetuer", "createdAt": 1680372521000}' to topic='twitter-topic' with key '9014936443189058328'
2023-04-01 13:08:51 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:08:51 -0500 2023","id":"6089207512766500465","text":"pulvinar adipiscing pulvinar magna yltricies purus conque Elasticsearch Maecenas porttitor amet posuere conque Lorem","user":{"id":"2090150778289958523"}}
2023-04-01 13:08:51 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar adipiscing pulvinar magna yltricies purus conque Elasticsearch Maecenas porttitor amet posuere conque Lorem and sending to kafka topic twitter-topic
2023-04-01 13:08:51 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2090150778289958523, "id": 6089207512766500465, "text": "pulvinar adipiscing pulvinar magna yltricies purus conque Elasticsearch Maecenas porttitor amet posuere conque Lorem", "createdAt": 1680372531000}' to topic='twitter-topic' with key '6089207512766500465'
2023-04-01 13:09:01 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:01 -0500 2023","id":"3464161439931701018","text":"posuere dolor elit Lorem conque yltricies Elasticsearch consectetuer adipiscing elit Lorem libero","user":{"id":"6244965948933831034"}}
2023-04-01 13:09:01 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere dolor elit Lorem conque yltricies Elasticsearch consectetuer adipiscing elit Lorem libero and sending to kafka topic twitter-topic
2023-04-01 13:09:01 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6244965948933831034, "id": 3464161439931701018, "text": "posuere dolor elit Lorem conque yltricies Elasticsearch consectetuer adipiscing elit Lorem libero", "createdAt": 1680372541000}' to topic='twitter-topic' with key '3464161439931701018'
2023-04-01 13:09:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:12 -0500 2023","id":"5607788866823752488","text":"malesuada ipsum posuere dolor mara magna dolor Kafka conque Lorem yltricies sed ipsum magna","user":{"id":"1729948093806506678"}}
2023-04-01 13:09:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada ipsum posuere dolor mara magna dolor Kafka conque Lorem yltricies sed ipsum magna and sending to kafka topic twitter-topic
2023-04-01 13:09:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1729948093806506678, "id": 5607788866823752488, "text": "malesuada ipsum posuere dolor mara magna dolor Kafka conque Lorem yltricies sed ipsum magna", "createdAt": 1680372552000}' to topic='twitter-topic' with key '5607788866823752488'
2023-04-01 13:09:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:22 -0500 2023","id":"5059657813119812174","text":"malesuada adipiscing sit adipiscing yltricies porttitor sed purus Kafka lectus pulvinar consectetuer massa mara elit","user":{"id":"4436760199354525249"}}
2023-04-01 13:09:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada adipiscing sit adipiscing yltricies porttitor sed purus Kafka lectus pulvinar consectetuer massa mara elit and sending to kafka topic twitter-topic
2023-04-01 13:09:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4436760199354525249, "id": 5059657813119812174, "text": "malesuada adipiscing sit adipiscing yltricies porttitor sed purus Kafka lectus pulvinar consectetuer massa mara elit", "createdAt": 1680372562000}' to topic='twitter-topic' with key '5059657813119812174'
2023-04-01 13:09:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:32 -0500 2023","id":"8947068034436345573","text":"elit pulvinar Lorem conque amet massa Elasticsearch sit elit elit sed sit","user":{"id":"1510056262717336347"}}
2023-04-01 13:09:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit pulvinar Lorem conque amet massa Elasticsearch sit elit elit sed sit and sending to kafka topic twitter-topic
2023-04-01 13:09:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1510056262717336347, "id": 8947068034436345573, "text": "elit pulvinar Lorem conque amet massa Elasticsearch sit elit elit sed sit", "createdAt": 1680372572000}' to topic='twitter-topic' with key '8947068034436345573'
2023-04-01 13:09:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:42 -0500 2023","id":"9068345522844051501","text":"conque mara dolor Spring elit pulvinar","user":{"id":"6527691297961059570"}}
2023-04-01 13:09:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque mara dolor Spring elit pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:09:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6527691297961059570, "id": 9068345522844051501, "text": "conque mara dolor Spring elit pulvinar", "createdAt": 1680372582000}' to topic='twitter-topic' with key '9068345522844051501'
2023-04-01 13:09:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:09:52 -0500 2023","id":"4036473270678743534","text":"yltricies porttitor purus massa pulvinar sed lectus conque Java sit posuere consectetuer massa Lorem magna","user":{"id":"4535065925016440866"}}
2023-04-01 13:09:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies porttitor purus massa pulvinar sed lectus conque Java sit posuere consectetuer massa Lorem magna and sending to kafka topic twitter-topic
2023-04-01 13:09:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4535065925016440866, "id": 4036473270678743534, "text": "yltricies porttitor purus massa pulvinar sed lectus conque Java sit posuere consectetuer massa Lorem magna", "createdAt": 1680372592000}' to topic='twitter-topic' with key '4036473270678743534'
2023-04-01 13:10:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:02 -0500 2023","id":"7490348713064699359","text":"posuere ipsum porttitor Maecenas Spring Maecenas massa","user":{"id":"2001699009265878958"}}
2023-04-01 13:10:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere ipsum porttitor Maecenas Spring Maecenas massa and sending to kafka topic twitter-topic
2023-04-01 13:10:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2001699009265878958, "id": 7490348713064699359, "text": "posuere ipsum porttitor Maecenas Spring Maecenas massa", "createdAt": 1680372602000}' to topic='twitter-topic' with key '7490348713064699359'
2023-04-01 13:10:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:12 -0500 2023","id":"8159481250237942664","text":"libero lectus dolor conque ipsum libero Spring posuere posuere yltricies pulvinar","user":{"id":"8725569739904604626"}}
2023-04-01 13:10:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero lectus dolor conque ipsum libero Spring posuere posuere yltricies pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:10:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8725569739904604626, "id": 8159481250237942664, "text": "libero lectus dolor conque ipsum libero Spring posuere posuere yltricies pulvinar", "createdAt": 1680372612000}' to topic='twitter-topic' with key '8159481250237942664'
2023-04-01 13:10:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:22 -0500 2023","id":"5465444196199543018","text":"magna amet Maecenas malesuada Elasticsearch yltricies massa Maecenas","user":{"id":"8691001995180274767"}}
2023-04-01 13:10:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna amet Maecenas malesuada Elasticsearch yltricies massa Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:10:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8691001995180274767, "id": 5465444196199543018, "text": "magna amet Maecenas malesuada Elasticsearch yltricies massa Maecenas", "createdAt": 1680372622000}' to topic='twitter-topic' with key '5465444196199543018'
2023-04-01 13:10:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:32 -0500 2023","id":"5074473015127279478","text":"libero sed Maecenas amet Lorem Lorem Microservices massa pulvinar lectus libero","user":{"id":"681176526819915092"}}
2023-04-01 13:10:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero sed Maecenas amet Lorem Lorem Microservices massa pulvinar lectus libero and sending to kafka topic twitter-topic
2023-04-01 13:10:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 681176526819915092, "id": 5074473015127279478, "text": "libero sed Maecenas amet Lorem Lorem Microservices massa pulvinar lectus libero", "createdAt": 1680372632000}' to topic='twitter-topic' with key '5074473015127279478'
2023-04-01 13:10:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:42 -0500 2023","id":"783942151461966189","text":"amet magna lectus pulvinar Lorem Java massa magna adipiscing ipsum","user":{"id":"1823042566504660514"}}
2023-04-01 13:10:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet magna lectus pulvinar Lorem Java massa magna adipiscing ipsum and sending to kafka topic twitter-topic
2023-04-01 13:10:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1823042566504660514, "id": 783942151461966189, "text": "amet magna lectus pulvinar Lorem Java massa magna adipiscing ipsum", "createdAt": 1680372642000}' to topic='twitter-topic' with key '783942151461966189'
2023-04-01 13:10:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:10:52 -0500 2023","id":"7805818933222416425","text":"Lorem posuere pulvinar magna yltricies pulvinar Microservices lectus posuere Lorem porttitor Lorem","user":{"id":"3221028097102342733"}}
2023-04-01 13:10:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem posuere pulvinar magna yltricies pulvinar Microservices lectus posuere Lorem porttitor Lorem and sending to kafka topic twitter-topic
2023-04-01 13:10:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3221028097102342733, "id": 7805818933222416425, "text": "Lorem posuere pulvinar magna yltricies pulvinar Microservices lectus posuere Lorem porttitor Lorem", "createdAt": 1680372652000}' to topic='twitter-topic' with key '7805818933222416425'
2023-04-01 13:11:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:02 -0500 2023","id":"3599668040100758140","text":"elit magna amet Maecenas Lorem lectus pulvinar Elasticsearch magna porttitor sed dolor posuere purus","user":{"id":"3761151963728764680"}}
2023-04-01 13:11:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit magna amet Maecenas Lorem lectus pulvinar Elasticsearch magna porttitor sed dolor posuere purus and sending to kafka topic twitter-topic
2023-04-01 13:11:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3761151963728764680, "id": 3599668040100758140, "text": "elit magna amet Maecenas Lorem lectus pulvinar Elasticsearch magna porttitor sed dolor posuere purus", "createdAt": 1680372662000}' to topic='twitter-topic' with key '3599668040100758140'
2023-04-01 13:11:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:12 -0500 2023","id":"6898938238805936722","text":"porttitor pulvinar lectus massa posuere malesuada Kafka lectus porttitor Lorem purus adipiscing","user":{"id":"3733745979272125695"}}
2023-04-01 13:11:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor pulvinar lectus massa posuere malesuada Kafka lectus porttitor Lorem purus adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:11:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3733745979272125695, "id": 6898938238805936722, "text": "porttitor pulvinar lectus massa posuere malesuada Kafka lectus porttitor Lorem purus adipiscing", "createdAt": 1680372672000}' to topic='twitter-topic' with key '6898938238805936722'
2023-04-01 13:11:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:22 -0500 2023","id":"1103894487098922998","text":"lectus massa purus conque Lorem libero adipiscing posuere Java dolor pulvinar dolor consectetuer adipiscing consectetuer","user":{"id":"8655013901344869357"}}
2023-04-01 13:11:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus massa purus conque Lorem libero adipiscing posuere Java dolor pulvinar dolor consectetuer adipiscing consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:11:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8655013901344869357, "id": 1103894487098922998, "text": "lectus massa purus conque Lorem libero adipiscing posuere Java dolor pulvinar dolor consectetuer adipiscing consectetuer", "createdAt": 1680372682000}' to topic='twitter-topic' with key '1103894487098922998'
2023-04-01 13:11:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:32 -0500 2023","id":"2130197266628840375","text":"Lorem massa posuere magna conque Java sit libero massa Lorem","user":{"id":"3546488077000923059"}}
2023-04-01 13:11:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem massa posuere magna conque Java sit libero massa Lorem and sending to kafka topic twitter-topic
2023-04-01 13:11:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3546488077000923059, "id": 2130197266628840375, "text": "Lorem massa posuere magna conque Java sit libero massa Lorem", "createdAt": 1680372692000}' to topic='twitter-topic' with key '2130197266628840375'
2023-04-01 13:11:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:42 -0500 2023","id":"7714772235415605132","text":"ipsum yltricies libero amet Microservices yltricies lectus","user":{"id":"5342865392282929517"}}
2023-04-01 13:11:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum yltricies libero amet Microservices yltricies lectus and sending to kafka topic twitter-topic
2023-04-01 13:11:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5342865392282929517, "id": 7714772235415605132, "text": "ipsum yltricies libero amet Microservices yltricies lectus", "createdAt": 1680372702000}' to topic='twitter-topic' with key '7714772235415605132'
2023-04-01 13:11:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:11:52 -0500 2023","id":"2952716915709879500","text":"libero massa sit sit ipsum Kafka lectus Lorem conque posuere","user":{"id":"2655691682782483929"}}
2023-04-01 13:11:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero massa sit sit ipsum Kafka lectus Lorem conque posuere and sending to kafka topic twitter-topic
2023-04-01 13:11:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2655691682782483929, "id": 2952716915709879500, "text": "libero massa sit sit ipsum Kafka lectus Lorem conque posuere", "createdAt": 1680372712000}' to topic='twitter-topic' with key '2952716915709879500'
2023-04-01 13:12:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:02 -0500 2023","id":"7643850042987708935","text":"purus adipiscing sit elit Elasticsearch conque lectus Maecenas","user":{"id":"4618150024704319414"}}
2023-04-01 13:12:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus adipiscing sit elit Elasticsearch conque lectus Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:12:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4618150024704319414, "id": 7643850042987708935, "text": "purus adipiscing sit elit Elasticsearch conque lectus Maecenas", "createdAt": 1680372722000}' to topic='twitter-topic' with key '7643850042987708935'
2023-04-01 13:12:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:12 -0500 2023","id":"4930888811437701372","text":"porttitor elit yltricies dolor consectetuer mara massa sit Elasticsearch sed lectus sed elit posuere malesuada ipsum","user":{"id":"480637108898087409"}}
2023-04-01 13:12:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor elit yltricies dolor consectetuer mara massa sit Elasticsearch sed lectus sed elit posuere malesuada ipsum and sending to kafka topic twitter-topic
2023-04-01 13:12:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 480637108898087409, "id": 4930888811437701372, "text": "porttitor elit yltricies dolor consectetuer mara massa sit Elasticsearch sed lectus sed elit posuere malesuada ipsum", "createdAt": 1680372732000}' to topic='twitter-topic' with key '4930888811437701372'
2023-04-01 13:12:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:22 -0500 2023","id":"1542647811015536576","text":"pulvinar lectus malesuada Java sed malesuada","user":{"id":"7530355418815574073"}}
2023-04-01 13:12:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar lectus malesuada Java sed malesuada and sending to kafka topic twitter-topic
2023-04-01 13:12:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7530355418815574073, "id": 1542647811015536576, "text": "pulvinar lectus malesuada Java sed malesuada", "createdAt": 1680372742000}' to topic='twitter-topic' with key '1542647811015536576'
2023-04-01 13:12:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:32 -0500 2023","id":"4494483942979061514","text":"porttitor massa porttitor Lorem dolor malesuada Microservices lectus amet elit porttitor massa","user":{"id":"6326696213925335693"}}
2023-04-01 13:12:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor massa porttitor Lorem dolor malesuada Microservices lectus amet elit porttitor massa and sending to kafka topic twitter-topic
2023-04-01 13:12:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6326696213925335693, "id": 4494483942979061514, "text": "porttitor massa porttitor Lorem dolor malesuada Microservices lectus amet elit porttitor massa", "createdAt": 1680372752000}' to topic='twitter-topic' with key '4494483942979061514'
2023-04-01 13:12:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:42 -0500 2023","id":"4148813702084466066","text":"elit purus posuere libero pulvinar malesuada lectus adipiscing Elasticsearch amet purus amet magna libero consectetuer","user":{"id":"8942383974948334199"}}
2023-04-01 13:12:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit purus posuere libero pulvinar malesuada lectus adipiscing Elasticsearch amet purus amet magna libero consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:12:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8942383974948334199, "id": 4148813702084466066, "text": "elit purus posuere libero pulvinar malesuada lectus adipiscing Elasticsearch amet purus amet magna libero consectetuer", "createdAt": 1680372762000}' to topic='twitter-topic' with key '4148813702084466066'
2023-04-01 13:12:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:12:52 -0500 2023","id":"8256925425743484397","text":"amet porttitor posuere lectus sit Spring purus magna sit","user":{"id":"7397199016158012637"}}
2023-04-01 13:12:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet porttitor posuere lectus sit Spring purus magna sit and sending to kafka topic twitter-topic
2023-04-01 13:12:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7397199016158012637, "id": 8256925425743484397, "text": "amet porttitor posuere lectus sit Spring purus magna sit", "createdAt": 1680372772000}' to topic='twitter-topic' with key '8256925425743484397'
2023-04-01 13:13:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:02 -0500 2023","id":"2556668717539188289","text":"conque purus adipiscing libero sed Microservices yltricies posuere amet ipsum","user":{"id":"5995593776046413148"}}
2023-04-01 13:13:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque purus adipiscing libero sed Microservices yltricies posuere amet ipsum and sending to kafka topic twitter-topic
2023-04-01 13:13:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5995593776046413148, "id": 2556668717539188289, "text": "conque purus adipiscing libero sed Microservices yltricies posuere amet ipsum", "createdAt": 1680372782000}' to topic='twitter-topic' with key '2556668717539188289'
2023-04-01 13:13:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:12 -0500 2023","id":"6695089412589764189","text":"Maecenas sit adipiscing sit porttitor Elasticsearch amet porttitor conque amet","user":{"id":"3324563645442691577"}}
2023-04-01 13:13:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas sit adipiscing sit porttitor Elasticsearch amet porttitor conque amet and sending to kafka topic twitter-topic
2023-04-01 13:13:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3324563645442691577, "id": 6695089412589764189, "text": "Maecenas sit adipiscing sit porttitor Elasticsearch amet porttitor conque amet", "createdAt": 1680372792000}' to topic='twitter-topic' with key '6695089412589764189'
2023-04-01 13:13:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:22 -0500 2023","id":"8563318916191663303","text":"mara amet adipiscing mara libero Kafka mara massa amet adipiscing","user":{"id":"498531207764474037"}}
2023-04-01 13:13:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara amet adipiscing mara libero Kafka mara massa amet adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:13:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 498531207764474037, "id": 8563318916191663303, "text": "mara amet adipiscing mara libero Kafka mara massa amet adipiscing", "createdAt": 1680372802000}' to topic='twitter-topic' with key '8563318916191663303'
2023-04-01 13:13:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:32 -0500 2023","id":"3410555266354318759","text":"sed magna ipsum porttitor libero porttitor Microservices malesuada sed posuere dolor","user":{"id":"3455914807077911943"}}
2023-04-01 13:13:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed magna ipsum porttitor libero porttitor Microservices malesuada sed posuere dolor and sending to kafka topic twitter-topic
2023-04-01 13:13:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3455914807077911943, "id": 3410555266354318759, "text": "sed magna ipsum porttitor libero porttitor Microservices malesuada sed posuere dolor", "createdAt": 1680372812000}' to topic='twitter-topic' with key '3410555266354318759'
2023-04-01 13:13:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:42 -0500 2023","id":"78175066072103427","text":"malesuada sed lectus consectetuer lectus purus libero sit Kafka Maecenas elit Lorem conque dolor yltricies","user":{"id":"8044124428891369394"}}
2023-04-01 13:13:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada sed lectus consectetuer lectus purus libero sit Kafka Maecenas elit Lorem conque dolor yltricies and sending to kafka topic twitter-topic
2023-04-01 13:13:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8044124428891369394, "id": 78175066072103427, "text": "malesuada sed lectus consectetuer lectus purus libero sit Kafka Maecenas elit Lorem conque dolor yltricies", "createdAt": 1680372822000}' to topic='twitter-topic' with key '78175066072103427'
2023-04-01 13:13:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:13:52 -0500 2023","id":"7668298856722902757","text":"yltricies libero amet conque consectetuer Kafka magna dolor amet","user":{"id":"393984106285853470"}}
2023-04-01 13:13:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies libero amet conque consectetuer Kafka magna dolor amet and sending to kafka topic twitter-topic
2023-04-01 13:13:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 393984106285853470, "id": 7668298856722902757, "text": "yltricies libero amet conque consectetuer Kafka magna dolor amet", "createdAt": 1680372832000}' to topic='twitter-topic' with key '7668298856722902757'
2023-04-01 13:14:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:02 -0500 2023","id":"8276873924843382586","text":"sit mara Lorem lectus Elasticsearch magna malesuada massa","user":{"id":"3957729899791324700"}}
2023-04-01 13:14:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit mara Lorem lectus Elasticsearch magna malesuada massa and sending to kafka topic twitter-topic
2023-04-01 13:14:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3957729899791324700, "id": 8276873924843382586, "text": "sit mara Lorem lectus Elasticsearch magna malesuada massa", "createdAt": 1680372842000}' to topic='twitter-topic' with key '8276873924843382586'
2023-04-01 13:14:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:12 -0500 2023","id":"7138215739590041511","text":"malesuada sed conque libero posuere magna purus malesuada Kafka conque elit libero consectetuer purus lectus elit","user":{"id":"5932044041099890737"}}
2023-04-01 13:14:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada sed conque libero posuere magna purus malesuada Kafka conque elit libero consectetuer purus lectus elit and sending to kafka topic twitter-topic
2023-04-01 13:14:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5932044041099890737, "id": 7138215739590041511, "text": "malesuada sed conque libero posuere magna purus malesuada Kafka conque elit libero consectetuer purus lectus elit", "createdAt": 1680372852000}' to topic='twitter-topic' with key '7138215739590041511'
2023-04-01 13:14:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:22 -0500 2023","id":"8727205740169513570","text":"yltricies lectus amet Spring adipiscing magna","user":{"id":"6526461285867403709"}}
2023-04-01 13:14:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies lectus amet Spring adipiscing magna and sending to kafka topic twitter-topic
2023-04-01 13:14:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6526461285867403709, "id": 8727205740169513570, "text": "yltricies lectus amet Spring adipiscing magna", "createdAt": 1680372862000}' to topic='twitter-topic' with key '8727205740169513570'
2023-04-01 13:14:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:32 -0500 2023","id":"8492395356890523034","text":"consectetuer dolor elit elit Spring sed lectus","user":{"id":"6661442929344377871"}}
2023-04-01 13:14:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer dolor elit elit Spring sed lectus and sending to kafka topic twitter-topic
2023-04-01 13:14:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6661442929344377871, "id": 8492395356890523034, "text": "consectetuer dolor elit elit Spring sed lectus", "createdAt": 1680372872000}' to topic='twitter-topic' with key '8492395356890523034'
2023-04-01 13:14:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:42 -0500 2023","id":"4729340095510750211","text":"sed amet sit porttitor elit yltricies Java yltricies purus amet lectus","user":{"id":"7761224300537004650"}}
2023-04-01 13:14:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed amet sit porttitor elit yltricies Java yltricies purus amet lectus and sending to kafka topic twitter-topic
2023-04-01 13:14:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7761224300537004650, "id": 4729340095510750211, "text": "sed amet sit porttitor elit yltricies Java yltricies purus amet lectus", "createdAt": 1680372882000}' to topic='twitter-topic' with key '4729340095510750211'
2023-04-01 13:14:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:14:52 -0500 2023","id":"4115291714762215658","text":"libero sed posuere magna pulvinar Microservices malesuada Maecenas posuere yltricies","user":{"id":"240649524728492572"}}
2023-04-01 13:14:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero sed posuere magna pulvinar Microservices malesuada Maecenas posuere yltricies and sending to kafka topic twitter-topic
2023-04-01 13:14:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 240649524728492572, "id": 4115291714762215658, "text": "libero sed posuere magna pulvinar Microservices malesuada Maecenas posuere yltricies", "createdAt": 1680372892000}' to topic='twitter-topic' with key '4115291714762215658'
2023-04-01 13:15:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:02 -0500 2023","id":"8774460168078581902","text":"dolor porttitor amet libero yltricies adipiscing magna Microservices dolor yltricies yltricies Lorem dolor","user":{"id":"1920415429643262213"}}
2023-04-01 13:15:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor porttitor amet libero yltricies adipiscing magna Microservices dolor yltricies yltricies Lorem dolor and sending to kafka topic twitter-topic
2023-04-01 13:15:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1920415429643262213, "id": 8774460168078581902, "text": "dolor porttitor amet libero yltricies adipiscing magna Microservices dolor yltricies yltricies Lorem dolor", "createdAt": 1680372902000}' to topic='twitter-topic' with key '8774460168078581902'
2023-04-01 13:15:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:12 -0500 2023","id":"7998350361754513311","text":"libero amet Lorem ipsum adipiscing mara sit ipsum Java posuere sit sit purus pulvinar adipiscing","user":{"id":"3814274344014716852"}}
2023-04-01 13:15:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero amet Lorem ipsum adipiscing mara sit ipsum Java posuere sit sit purus pulvinar adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:15:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3814274344014716852, "id": 7998350361754513311, "text": "libero amet Lorem ipsum adipiscing mara sit ipsum Java posuere sit sit purus pulvinar adipiscing", "createdAt": 1680372912000}' to topic='twitter-topic' with key '7998350361754513311'
2023-04-01 13:15:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:22 -0500 2023","id":"4133472653478969905","text":"mara purus malesuada Lorem sed dolor Kafka sit pulvinar yltricies Maecenas","user":{"id":"2389567869745495363"}}
2023-04-01 13:15:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara purus malesuada Lorem sed dolor Kafka sit pulvinar yltricies Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:15:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2389567869745495363, "id": 4133472653478969905, "text": "mara purus malesuada Lorem sed dolor Kafka sit pulvinar yltricies Maecenas", "createdAt": 1680372922000}' to topic='twitter-topic' with key '4133472653478969905'
2023-04-01 13:15:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:32 -0500 2023","id":"7164012213328478838","text":"Lorem pulvinar ipsum dolor libero mara sit Elasticsearch conque mara mara consectetuer dolor magna","user":{"id":"5289686981589722383"}}
2023-04-01 13:15:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem pulvinar ipsum dolor libero mara sit Elasticsearch conque mara mara consectetuer dolor magna and sending to kafka topic twitter-topic
2023-04-01 13:15:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5289686981589722383, "id": 7164012213328478838, "text": "Lorem pulvinar ipsum dolor libero mara sit Elasticsearch conque mara mara consectetuer dolor magna", "createdAt": 1680372932000}' to topic='twitter-topic' with key '7164012213328478838'
2023-04-01 13:15:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:42 -0500 2023","id":"1762658868345110650","text":"sed ipsum yltricies sit Elasticsearch dolor pulvinar elit","user":{"id":"3432831258263081371"}}
2023-04-01 13:15:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed ipsum yltricies sit Elasticsearch dolor pulvinar elit and sending to kafka topic twitter-topic
2023-04-01 13:15:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3432831258263081371, "id": 1762658868345110650, "text": "sed ipsum yltricies sit Elasticsearch dolor pulvinar elit", "createdAt": 1680372942000}' to topic='twitter-topic' with key '1762658868345110650'
2023-04-01 13:15:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:15:52 -0500 2023","id":"5004358114644735160","text":"ipsum adipiscing purus yltricies magna amet Java posuere pulvinar consectetuer adipiscing porttitor","user":{"id":"4983619393640765235"}}
2023-04-01 13:15:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum adipiscing purus yltricies magna amet Java posuere pulvinar consectetuer adipiscing porttitor and sending to kafka topic twitter-topic
2023-04-01 13:15:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4983619393640765235, "id": 5004358114644735160, "text": "ipsum adipiscing purus yltricies magna amet Java posuere pulvinar consectetuer adipiscing porttitor", "createdAt": 1680372952000}' to topic='twitter-topic' with key '5004358114644735160'
2023-04-01 13:16:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:02 -0500 2023","id":"3506626016569406581","text":"malesuada malesuada consectetuer purus consectetuer Elasticsearch ipsum malesuada dolor","user":{"id":"7609477546380044102"}}
2023-04-01 13:16:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada malesuada consectetuer purus consectetuer Elasticsearch ipsum malesuada dolor and sending to kafka topic twitter-topic
2023-04-01 13:16:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7609477546380044102, "id": 3506626016569406581, "text": "malesuada malesuada consectetuer purus consectetuer Elasticsearch ipsum malesuada dolor", "createdAt": 1680372962000}' to topic='twitter-topic' with key '3506626016569406581'
2023-04-01 13:16:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:12 -0500 2023","id":"7035917256798731060","text":"mara sit libero amet sit Java dolor lectus Maecenas yltricies","user":{"id":"3402852738724670982"}}
2023-04-01 13:16:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sit libero amet sit Java dolor lectus Maecenas yltricies and sending to kafka topic twitter-topic
2023-04-01 13:16:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3402852738724670982, "id": 7035917256798731060, "text": "mara sit libero amet sit Java dolor lectus Maecenas yltricies", "createdAt": 1680372972000}' to topic='twitter-topic' with key '7035917256798731060'
2023-04-01 13:16:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:22 -0500 2023","id":"2566886312992560754","text":"consectetuer pulvinar sed Lorem adipiscing yltricies dolor amet Kafka ipsum elit magna purus Maecenas magna posuere","user":{"id":"6816717938269410669"}}
2023-04-01 13:16:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer pulvinar sed Lorem adipiscing yltricies dolor amet Kafka ipsum elit magna purus Maecenas magna posuere and sending to kafka topic twitter-topic
2023-04-01 13:16:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6816717938269410669, "id": 2566886312992560754, "text": "consectetuer pulvinar sed Lorem adipiscing yltricies dolor amet Kafka ipsum elit magna purus Maecenas magna posuere", "createdAt": 1680372982000}' to topic='twitter-topic' with key '2566886312992560754'
2023-04-01 13:16:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:32 -0500 2023","id":"234853108172481402","text":"sit magna conque massa magna Kafka yltricies adipiscing Lorem ipsum","user":{"id":"1478534367374491725"}}
2023-04-01 13:16:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit magna conque massa magna Kafka yltricies adipiscing Lorem ipsum and sending to kafka topic twitter-topic
2023-04-01 13:16:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1478534367374491725, "id": 234853108172481402, "text": "sit magna conque massa magna Kafka yltricies adipiscing Lorem ipsum", "createdAt": 1680372992000}' to topic='twitter-topic' with key '234853108172481402'
2023-04-01 13:16:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:42 -0500 2023","id":"3617110640060493701","text":"massa pulvinar yltricies lectus sit consectetuer massa mara Spring amet dolor conque massa pulvinar Maecenas porttitor","user":{"id":"3614692939322719464"}}
2023-04-01 13:16:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa pulvinar yltricies lectus sit consectetuer massa mara Spring amet dolor conque massa pulvinar Maecenas porttitor and sending to kafka topic twitter-topic
2023-04-01 13:16:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3614692939322719464, "id": 3617110640060493701, "text": "massa pulvinar yltricies lectus sit consectetuer massa mara Spring amet dolor conque massa pulvinar Maecenas porttitor", "createdAt": 1680373002000}' to topic='twitter-topic' with key '3617110640060493701'
2023-04-01 13:16:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:16:52 -0500 2023","id":"2841029596139331317","text":"elit amet malesuada Maecenas Spring pulvinar mara","user":{"id":"5281294067284726811"}}
2023-04-01 13:16:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit amet malesuada Maecenas Spring pulvinar mara and sending to kafka topic twitter-topic
2023-04-01 13:16:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5281294067284726811, "id": 2841029596139331317, "text": "elit amet malesuada Maecenas Spring pulvinar mara", "createdAt": 1680373012000}' to topic='twitter-topic' with key '2841029596139331317'
2023-04-01 13:17:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:02 -0500 2023","id":"475201511211834159","text":"yltricies dolor Lorem Lorem malesuada amet lectus Java elit sit massa consectetuer magna Maecenas","user":{"id":"1113149559761963671"}}
2023-04-01 13:17:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies dolor Lorem Lorem malesuada amet lectus Java elit sit massa consectetuer magna Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:17:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1113149559761963671, "id": 475201511211834159, "text": "yltricies dolor Lorem Lorem malesuada amet lectus Java elit sit massa consectetuer magna Maecenas", "createdAt": 1680373022000}' to topic='twitter-topic' with key '475201511211834159'
2023-04-01 13:17:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:12 -0500 2023","id":"3471021869522679377","text":"mara adipiscing conque lectus dolor ipsum amet Java Maecenas lectus elit sit malesuada amet","user":{"id":"4139533585485467332"}}
2023-04-01 13:17:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara adipiscing conque lectus dolor ipsum amet Java Maecenas lectus elit sit malesuada amet and sending to kafka topic twitter-topic
2023-04-01 13:17:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4139533585485467332, "id": 3471021869522679377, "text": "mara adipiscing conque lectus dolor ipsum amet Java Maecenas lectus elit sit malesuada amet", "createdAt": 1680373032000}' to topic='twitter-topic' with key '3471021869522679377'
2023-04-01 13:17:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:22 -0500 2023","id":"7062332067825249163","text":"mara mara lectus adipiscing lectus Java massa posuere purus","user":{"id":"3229364528575509743"}}
2023-04-01 13:17:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara mara lectus adipiscing lectus Java massa posuere purus and sending to kafka topic twitter-topic
2023-04-01 13:17:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3229364528575509743, "id": 7062332067825249163, "text": "mara mara lectus adipiscing lectus Java massa posuere purus", "createdAt": 1680373042000}' to topic='twitter-topic' with key '7062332067825249163'
2023-04-01 13:17:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:32 -0500 2023","id":"2057214214875729311","text":"yltricies libero sit Kafka ipsum posuere","user":{"id":"4944509217611966872"}}
2023-04-01 13:17:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies libero sit Kafka ipsum posuere and sending to kafka topic twitter-topic
2023-04-01 13:17:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4944509217611966872, "id": 2057214214875729311, "text": "yltricies libero sit Kafka ipsum posuere", "createdAt": 1680373052000}' to topic='twitter-topic' with key '2057214214875729311'
2023-04-01 13:17:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:42 -0500 2023","id":"2029244042954670119","text":"sit dolor sed amet Kafka magna Maecenas conque","user":{"id":"1744953710838372036"}}
2023-04-01 13:17:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit dolor sed amet Kafka magna Maecenas conque and sending to kafka topic twitter-topic
2023-04-01 13:17:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1744953710838372036, "id": 2029244042954670119, "text": "sit dolor sed amet Kafka magna Maecenas conque", "createdAt": 1680373062000}' to topic='twitter-topic' with key '2029244042954670119'
2023-04-01 13:17:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:17:52 -0500 2023","id":"8138582279777306741","text":"conque dolor sit Kafka posuere ipsum","user":{"id":"1247398104944195862"}}
2023-04-01 13:17:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque dolor sit Kafka posuere ipsum and sending to kafka topic twitter-topic
2023-04-01 13:17:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1247398104944195862, "id": 8138582279777306741, "text": "conque dolor sit Kafka posuere ipsum", "createdAt": 1680373072000}' to topic='twitter-topic' with key '8138582279777306741'
2023-04-01 13:18:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:02 -0500 2023","id":"630035170909936806","text":"malesuada conque Maecenas Java posuere malesuada","user":{"id":"914192235400655308"}}
2023-04-01 13:18:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada conque Maecenas Java posuere malesuada and sending to kafka topic twitter-topic
2023-04-01 13:18:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 914192235400655308, "id": 630035170909936806, "text": "malesuada conque Maecenas Java posuere malesuada", "createdAt": 1680373082000}' to topic='twitter-topic' with key '630035170909936806'
2023-04-01 13:18:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:12 -0500 2023","id":"3477191279730611314","text":"mara posuere dolor elit dolor consectetuer Kafka mara Lorem porttitor amet conque","user":{"id":"5655001067567441448"}}
2023-04-01 13:18:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara posuere dolor elit dolor consectetuer Kafka mara Lorem porttitor amet conque and sending to kafka topic twitter-topic
2023-04-01 13:18:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5655001067567441448, "id": 3477191279730611314, "text": "mara posuere dolor elit dolor consectetuer Kafka mara Lorem porttitor amet conque", "createdAt": 1680373092000}' to topic='twitter-topic' with key '3477191279730611314'
2023-04-01 13:18:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:22 -0500 2023","id":"2223680349944521525","text":"sit mara posuere elit porttitor ipsum Kafka porttitor amet consectetuer malesuada","user":{"id":"8021022118082432305"}}
2023-04-01 13:18:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit mara posuere elit porttitor ipsum Kafka porttitor amet consectetuer malesuada and sending to kafka topic twitter-topic
2023-04-01 13:18:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8021022118082432305, "id": 2223680349944521525, "text": "sit mara posuere elit porttitor ipsum Kafka porttitor amet consectetuer malesuada", "createdAt": 1680373102000}' to topic='twitter-topic' with key '2223680349944521525'
2023-04-01 13:18:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:32 -0500 2023","id":"8055972535137504232","text":"elit lectus lectus purus malesuada Kafka consectetuer sed posuere massa","user":{"id":"3765938897923233046"}}
2023-04-01 13:18:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit lectus lectus purus malesuada Kafka consectetuer sed posuere massa and sending to kafka topic twitter-topic
2023-04-01 13:18:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3765938897923233046, "id": 8055972535137504232, "text": "elit lectus lectus purus malesuada Kafka consectetuer sed posuere massa", "createdAt": 1680373112000}' to topic='twitter-topic' with key '8055972535137504232'
2023-04-01 13:18:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:42 -0500 2023","id":"6095131637354346115","text":"libero lectus yltricies porttitor malesuada lectus sed sed Spring sed dolor posuere magna conque massa","user":{"id":"2139389897586172305"}}
2023-04-01 13:18:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero lectus yltricies porttitor malesuada lectus sed sed Spring sed dolor posuere magna conque massa and sending to kafka topic twitter-topic
2023-04-01 13:18:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2139389897586172305, "id": 6095131637354346115, "text": "libero lectus yltricies porttitor malesuada lectus sed sed Spring sed dolor posuere magna conque massa", "createdAt": 1680373122000}' to topic='twitter-topic' with key '6095131637354346115'
2023-04-01 13:18:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:18:52 -0500 2023","id":"3330095118487866084","text":"purus dolor posuere massa posuere Spring ipsum magna elit Maecenas","user":{"id":"986191515944978198"}}
2023-04-01 13:18:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus dolor posuere massa posuere Spring ipsum magna elit Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:18:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 986191515944978198, "id": 3330095118487866084, "text": "purus dolor posuere massa posuere Spring ipsum magna elit Maecenas", "createdAt": 1680373132000}' to topic='twitter-topic' with key '3330095118487866084'
2023-04-01 13:19:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:02 -0500 2023","id":"5168232188784725214","text":"sit consectetuer Maecenas pulvinar adipiscing Elasticsearch dolor pulvinar magna","user":{"id":"821839420410732793"}}
2023-04-01 13:19:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit consectetuer Maecenas pulvinar adipiscing Elasticsearch dolor pulvinar magna and sending to kafka topic twitter-topic
2023-04-01 13:19:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 821839420410732793, "id": 5168232188784725214, "text": "sit consectetuer Maecenas pulvinar adipiscing Elasticsearch dolor pulvinar magna", "createdAt": 1680373142000}' to topic='twitter-topic' with key '5168232188784725214'
2023-04-01 13:19:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:12 -0500 2023","id":"4382740219039617988","text":"consectetuer yltricies ipsum dolor purus sit Microservices libero conque porttitor yltricies lectus","user":{"id":"6220030893396125356"}}
2023-04-01 13:19:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer yltricies ipsum dolor purus sit Microservices libero conque porttitor yltricies lectus and sending to kafka topic twitter-topic
2023-04-01 13:19:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6220030893396125356, "id": 4382740219039617988, "text": "consectetuer yltricies ipsum dolor purus sit Microservices libero conque porttitor yltricies lectus", "createdAt": 1680373152000}' to topic='twitter-topic' with key '4382740219039617988'
2023-04-01 13:19:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:22 -0500 2023","id":"3651640695084126700","text":"malesuada purus yltricies yltricies purus mara conque Spring pulvinar dolor amet dolor adipiscing sit","user":{"id":"2240573940702247782"}}
2023-04-01 13:19:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada purus yltricies yltricies purus mara conque Spring pulvinar dolor amet dolor adipiscing sit and sending to kafka topic twitter-topic
2023-04-01 13:19:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2240573940702247782, "id": 3651640695084126700, "text": "malesuada purus yltricies yltricies purus mara conque Spring pulvinar dolor amet dolor adipiscing sit", "createdAt": 1680373162000}' to topic='twitter-topic' with key '3651640695084126700'
2023-04-01 13:19:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:32 -0500 2023","id":"5621134120660146400","text":"lectus magna libero libero Java sed yltricies","user":{"id":"8419445622917465974"}}
2023-04-01 13:19:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus magna libero libero Java sed yltricies and sending to kafka topic twitter-topic
2023-04-01 13:19:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8419445622917465974, "id": 5621134120660146400, "text": "lectus magna libero libero Java sed yltricies", "createdAt": 1680373172000}' to topic='twitter-topic' with key '5621134120660146400'
2023-04-01 13:19:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:42 -0500 2023","id":"7940330070880916302","text":"mara malesuada dolor massa sit Spring purus malesuada sed sit","user":{"id":"6080554383970374380"}}
2023-04-01 13:19:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara malesuada dolor massa sit Spring purus malesuada sed sit and sending to kafka topic twitter-topic
2023-04-01 13:19:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6080554383970374380, "id": 7940330070880916302, "text": "mara malesuada dolor massa sit Spring purus malesuada sed sit", "createdAt": 1680373182000}' to topic='twitter-topic' with key '7940330070880916302'
2023-04-01 13:19:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:19:52 -0500 2023","id":"5480590588428388536","text":"amet Maecenas malesuada Java Maecenas porttitor","user":{"id":"651815677563323884"}}
2023-04-01 13:19:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet Maecenas malesuada Java Maecenas porttitor and sending to kafka topic twitter-topic
2023-04-01 13:19:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 651815677563323884, "id": 5480590588428388536, "text": "amet Maecenas malesuada Java Maecenas porttitor", "createdAt": 1680373192000}' to topic='twitter-topic' with key '5480590588428388536'
2023-04-01 13:20:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:02 -0500 2023","id":"7333725840212915148","text":"malesuada Maecenas purus massa purus Maecenas conque mara Kafka lectus porttitor mara elit consectetuer massa","user":{"id":"7324008816351485303"}}
2023-04-01 13:20:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada Maecenas purus massa purus Maecenas conque mara Kafka lectus porttitor mara elit consectetuer massa and sending to kafka topic twitter-topic
2023-04-01 13:20:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7324008816351485303, "id": 7333725840212915148, "text": "malesuada Maecenas purus massa purus Maecenas conque mara Kafka lectus porttitor mara elit consectetuer massa", "createdAt": 1680373202000}' to topic='twitter-topic' with key '7333725840212915148'
2023-04-01 13:20:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:12 -0500 2023","id":"2835318303508593550","text":"massa amet conque conque yltricies Microservices Maecenas pulvinar amet","user":{"id":"8510290160647483448"}}
2023-04-01 13:20:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa amet conque conque yltricies Microservices Maecenas pulvinar amet and sending to kafka topic twitter-topic
2023-04-01 13:20:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8510290160647483448, "id": 2835318303508593550, "text": "massa amet conque conque yltricies Microservices Maecenas pulvinar amet", "createdAt": 1680373212000}' to topic='twitter-topic' with key '2835318303508593550'
2023-04-01 13:20:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:22 -0500 2023","id":"6207678254135404292","text":"yltricies pulvinar amet posuere elit amet adipiscing Java malesuada sed porttitor amet pulvinar consectetuer","user":{"id":"4520608116550465129"}}
2023-04-01 13:20:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies pulvinar amet posuere elit amet adipiscing Java malesuada sed porttitor amet pulvinar consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:20:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4520608116550465129, "id": 6207678254135404292, "text": "yltricies pulvinar amet posuere elit amet adipiscing Java malesuada sed porttitor amet pulvinar consectetuer", "createdAt": 1680373222000}' to topic='twitter-topic' with key '6207678254135404292'
2023-04-01 13:20:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:32 -0500 2023","id":"2140424600219090503","text":"libero elit elit libero Elasticsearch sit yltricies purus","user":{"id":"5337669328297953885"}}
2023-04-01 13:20:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero elit elit libero Elasticsearch sit yltricies purus and sending to kafka topic twitter-topic
2023-04-01 13:20:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5337669328297953885, "id": 2140424600219090503, "text": "libero elit elit libero Elasticsearch sit yltricies purus", "createdAt": 1680373232000}' to topic='twitter-topic' with key '2140424600219090503'
2023-04-01 13:20:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:42 -0500 2023","id":"5026184093730461479","text":"Maecenas conque libero amet magna Kafka amet malesuada pulvinar","user":{"id":"1158581582894252948"}}
2023-04-01 13:20:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas conque libero amet magna Kafka amet malesuada pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:20:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1158581582894252948, "id": 5026184093730461479, "text": "Maecenas conque libero amet magna Kafka amet malesuada pulvinar", "createdAt": 1680373242000}' to topic='twitter-topic' with key '5026184093730461479'
2023-04-01 13:20:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:20:52 -0500 2023","id":"1531991547189830993","text":"elit malesuada ipsum sed ipsum ipsum malesuada Java amet sit elit Maecenas libero","user":{"id":"7925430205984157907"}}
2023-04-01 13:20:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit malesuada ipsum sed ipsum ipsum malesuada Java amet sit elit Maecenas libero and sending to kafka topic twitter-topic
2023-04-01 13:20:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7925430205984157907, "id": 1531991547189830993, "text": "elit malesuada ipsum sed ipsum ipsum malesuada Java amet sit elit Maecenas libero", "createdAt": 1680373252000}' to topic='twitter-topic' with key '1531991547189830993'
2023-04-01 13:21:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:02 -0500 2023","id":"4941968987700486253","text":"conque malesuada purus adipiscing malesuada posuere malesuada Elasticsearch ipsum purus elit amet posuere adipiscing","user":{"id":"2134585271270176806"}}
2023-04-01 13:21:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque malesuada purus adipiscing malesuada posuere malesuada Elasticsearch ipsum purus elit amet posuere adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:21:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2134585271270176806, "id": 4941968987700486253, "text": "conque malesuada purus adipiscing malesuada posuere malesuada Elasticsearch ipsum purus elit amet posuere adipiscing", "createdAt": 1680373262000}' to topic='twitter-topic' with key '4941968987700486253'
2023-04-01 13:21:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:12 -0500 2023","id":"2954057053367552156","text":"massa sed yltricies sit Spring lectus sed mara","user":{"id":"3688819171955139935"}}
2023-04-01 13:21:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa sed yltricies sit Spring lectus sed mara and sending to kafka topic twitter-topic
2023-04-01 13:21:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3688819171955139935, "id": 2954057053367552156, "text": "massa sed yltricies sit Spring lectus sed mara", "createdAt": 1680373272000}' to topic='twitter-topic' with key '2954057053367552156'
2023-04-01 13:21:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:22 -0500 2023","id":"6868547062529463817","text":"posuere massa sit purus posuere dolor posuere adipiscing Java Maecenas sed Lorem yltricies Maecenas elit","user":{"id":"1998638877153500580"}}
2023-04-01 13:21:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere massa sit purus posuere dolor posuere adipiscing Java Maecenas sed Lorem yltricies Maecenas elit and sending to kafka topic twitter-topic
2023-04-01 13:21:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1998638877153500580, "id": 6868547062529463817, "text": "posuere massa sit purus posuere dolor posuere adipiscing Java Maecenas sed Lorem yltricies Maecenas elit", "createdAt": 1680373282000}' to topic='twitter-topic' with key '6868547062529463817'
2023-04-01 13:21:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:32 -0500 2023","id":"498395476930399723","text":"sed magna elit consectetuer Kafka posuere purus libero","user":{"id":"7882302688790881004"}}
2023-04-01 13:21:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed magna elit consectetuer Kafka posuere purus libero and sending to kafka topic twitter-topic
2023-04-01 13:21:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7882302688790881004, "id": 498395476930399723, "text": "sed magna elit consectetuer Kafka posuere purus libero", "createdAt": 1680373292000}' to topic='twitter-topic' with key '498395476930399723'
2023-04-01 13:21:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:42 -0500 2023","id":"2973222695794784755","text":"adipiscing posuere purus adipiscing lectus Maecenas Java pulvinar magna Lorem sit","user":{"id":"3871021824219830956"}}
2023-04-01 13:21:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere purus adipiscing lectus Maecenas Java pulvinar magna Lorem sit and sending to kafka topic twitter-topic
2023-04-01 13:21:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3871021824219830956, "id": 2973222695794784755, "text": "adipiscing posuere purus adipiscing lectus Maecenas Java pulvinar magna Lorem sit", "createdAt": 1680373302000}' to topic='twitter-topic' with key '2973222695794784755'
2023-04-01 13:21:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:21:52 -0500 2023","id":"4227293751978935012","text":"purus purus dolor dolor Lorem adipiscing magna Elasticsearch pulvinar consectetuer dolor massa amet","user":{"id":"7991971430954050814"}}
2023-04-01 13:21:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus purus dolor dolor Lorem adipiscing magna Elasticsearch pulvinar consectetuer dolor massa amet and sending to kafka topic twitter-topic
2023-04-01 13:21:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7991971430954050814, "id": 4227293751978935012, "text": "purus purus dolor dolor Lorem adipiscing magna Elasticsearch pulvinar consectetuer dolor massa amet", "createdAt": 1680373312000}' to topic='twitter-topic' with key '4227293751978935012'
2023-04-01 13:22:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:02 -0500 2023","id":"556096356828170081","text":"malesuada Lorem lectus mara consectetuer ipsum Microservices Maecenas amet yltricies elit consectetuer","user":{"id":"2671917729601973400"}}
2023-04-01 13:22:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada Lorem lectus mara consectetuer ipsum Microservices Maecenas amet yltricies elit consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:22:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2671917729601973400, "id": 556096356828170081, "text": "malesuada Lorem lectus mara consectetuer ipsum Microservices Maecenas amet yltricies elit consectetuer", "createdAt": 1680373322000}' to topic='twitter-topic' with key '556096356828170081'
2023-04-01 13:22:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:12 -0500 2023","id":"5049049195451940","text":"adipiscing purus conque elit sit Lorem Maecenas Java amet conque Lorem porttitor elit adipiscing","user":{"id":"6426645569647450239"}}
2023-04-01 13:22:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing purus conque elit sit Lorem Maecenas Java amet conque Lorem porttitor elit adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:22:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6426645569647450239, "id": 5049049195451940, "text": "adipiscing purus conque elit sit Lorem Maecenas Java amet conque Lorem porttitor elit adipiscing", "createdAt": 1680373332000}' to topic='twitter-topic' with key '5049049195451940'
2023-04-01 13:22:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:22 -0500 2023","id":"5552564342869424582","text":"mara Lorem pulvinar yltricies porttitor malesuada elit Spring Maecenas consectetuer dolor adipiscing porttitor","user":{"id":"6346186753095417271"}}
2023-04-01 13:22:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara Lorem pulvinar yltricies porttitor malesuada elit Spring Maecenas consectetuer dolor adipiscing porttitor and sending to kafka topic twitter-topic
2023-04-01 13:22:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6346186753095417271, "id": 5552564342869424582, "text": "mara Lorem pulvinar yltricies porttitor malesuada elit Spring Maecenas consectetuer dolor adipiscing porttitor", "createdAt": 1680373342000}' to topic='twitter-topic' with key '5552564342869424582'
2023-04-01 13:22:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:32 -0500 2023","id":"4867868021196519900","text":"amet conque pulvinar posuere pulvinar libero sed Maecenas Spring consectetuer magna adipiscing porttitor conque amet","user":{"id":"3671935866889466373"}}
2023-04-01 13:22:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet conque pulvinar posuere pulvinar libero sed Maecenas Spring consectetuer magna adipiscing porttitor conque amet and sending to kafka topic twitter-topic
2023-04-01 13:22:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3671935866889466373, "id": 4867868021196519900, "text": "amet conque pulvinar posuere pulvinar libero sed Maecenas Spring consectetuer magna adipiscing porttitor conque amet", "createdAt": 1680373352000}' to topic='twitter-topic' with key '4867868021196519900'
2023-04-01 13:22:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:42 -0500 2023","id":"5717880934446065166","text":"massa pulvinar lectus Elasticsearch massa ipsum","user":{"id":"6944680780685983389"}}
2023-04-01 13:22:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa pulvinar lectus Elasticsearch massa ipsum and sending to kafka topic twitter-topic
2023-04-01 13:22:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6944680780685983389, "id": 5717880934446065166, "text": "massa pulvinar lectus Elasticsearch massa ipsum", "createdAt": 1680373362000}' to topic='twitter-topic' with key '5717880934446065166'
2023-04-01 13:22:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:22:52 -0500 2023","id":"998285496087866397","text":"posuere Maecenas Lorem Spring malesuada purus","user":{"id":"1732906049500190692"}}
2023-04-01 13:22:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere Maecenas Lorem Spring malesuada purus and sending to kafka topic twitter-topic
2023-04-01 13:22:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1732906049500190692, "id": 998285496087866397, "text": "posuere Maecenas Lorem Spring malesuada purus", "createdAt": 1680373372000}' to topic='twitter-topic' with key '998285496087866397'
2023-04-01 13:23:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:02 -0500 2023","id":"7924155129042668445","text":"conque amet libero massa pulvinar malesuada sed Spring lectus libero adipiscing dolor massa Lorem","user":{"id":"2227453082792839783"}}
2023-04-01 13:23:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque amet libero massa pulvinar malesuada sed Spring lectus libero adipiscing dolor massa Lorem and sending to kafka topic twitter-topic
2023-04-01 13:23:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2227453082792839783, "id": 7924155129042668445, "text": "conque amet libero massa pulvinar malesuada sed Spring lectus libero adipiscing dolor massa Lorem", "createdAt": 1680373382000}' to topic='twitter-topic' with key '7924155129042668445'
2023-04-01 13:23:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:12 -0500 2023","id":"2888237280135326424","text":"dolor libero elit magna dolor conque Maecenas Microservices consectetuer porttitor porttitor Lorem posuere massa","user":{"id":"3096812032976291798"}}
2023-04-01 13:23:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor libero elit magna dolor conque Maecenas Microservices consectetuer porttitor porttitor Lorem posuere massa and sending to kafka topic twitter-topic
2023-04-01 13:23:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3096812032976291798, "id": 2888237280135326424, "text": "dolor libero elit magna dolor conque Maecenas Microservices consectetuer porttitor porttitor Lorem posuere massa", "createdAt": 1680373392000}' to topic='twitter-topic' with key '2888237280135326424'
2023-04-01 13:23:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:22 -0500 2023","id":"9050877789968645485","text":"yltricies sit malesuada purus dolor purus adipiscing pulvinar Java malesuada malesuada ipsum malesuada conque posuere","user":{"id":"2485793544294740620"}}
2023-04-01 13:23:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies sit malesuada purus dolor purus adipiscing pulvinar Java malesuada malesuada ipsum malesuada conque posuere and sending to kafka topic twitter-topic
2023-04-01 13:23:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2485793544294740620, "id": 9050877789968645485, "text": "yltricies sit malesuada purus dolor purus adipiscing pulvinar Java malesuada malesuada ipsum malesuada conque posuere", "createdAt": 1680373402000}' to topic='twitter-topic' with key '9050877789968645485'
2023-04-01 13:23:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:32 -0500 2023","id":"499052438761252531","text":"mara dolor elit purus yltricies Microservices conque yltricies mara magna","user":{"id":"3627134837246360055"}}
2023-04-01 13:23:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara dolor elit purus yltricies Microservices conque yltricies mara magna and sending to kafka topic twitter-topic
2023-04-01 13:23:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3627134837246360055, "id": 499052438761252531, "text": "mara dolor elit purus yltricies Microservices conque yltricies mara magna", "createdAt": 1680373412000}' to topic='twitter-topic' with key '499052438761252531'
2023-04-01 13:23:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:42 -0500 2023","id":"3123271854201081943","text":"mara dolor porttitor elit sed pulvinar yltricies lectus Java libero sit malesuada porttitor yltricies libero","user":{"id":"5885594834869839010"}}
2023-04-01 13:23:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara dolor porttitor elit sed pulvinar yltricies lectus Java libero sit malesuada porttitor yltricies libero and sending to kafka topic twitter-topic
2023-04-01 13:23:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5885594834869839010, "id": 3123271854201081943, "text": "mara dolor porttitor elit sed pulvinar yltricies lectus Java libero sit malesuada porttitor yltricies libero", "createdAt": 1680373422000}' to topic='twitter-topic' with key '3123271854201081943'
2023-04-01 13:23:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:23:52 -0500 2023","id":"6631574223158078571","text":"libero Maecenas sed consectetuer consectetuer Spring consectetuer porttitor magna purus","user":{"id":"5675320892908825790"}}
2023-04-01 13:23:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero Maecenas sed consectetuer consectetuer Spring consectetuer porttitor magna purus and sending to kafka topic twitter-topic
2023-04-01 13:23:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5675320892908825790, "id": 6631574223158078571, "text": "libero Maecenas sed consectetuer consectetuer Spring consectetuer porttitor magna purus", "createdAt": 1680373432000}' to topic='twitter-topic' with key '6631574223158078571'
2023-04-01 13:24:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:02 -0500 2023","id":"8609489527538777317","text":"posuere yltricies dolor Maecenas Maecenas libero porttitor Spring adipiscing amet massa ipsum purus libero","user":{"id":"5234171007434472725"}}
2023-04-01 13:24:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere yltricies dolor Maecenas Maecenas libero porttitor Spring adipiscing amet massa ipsum purus libero and sending to kafka topic twitter-topic
2023-04-01 13:24:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5234171007434472725, "id": 8609489527538777317, "text": "posuere yltricies dolor Maecenas Maecenas libero porttitor Spring adipiscing amet massa ipsum purus libero", "createdAt": 1680373442000}' to topic='twitter-topic' with key '8609489527538777317'
2023-04-01 13:24:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:12 -0500 2023","id":"9092152030889552721","text":"dolor libero porttitor amet pulvinar adipiscing Java elit libero sit Lorem","user":{"id":"4448849625131732369"}}
2023-04-01 13:24:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor libero porttitor amet pulvinar adipiscing Java elit libero sit Lorem and sending to kafka topic twitter-topic
2023-04-01 13:24:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4448849625131732369, "id": 9092152030889552721, "text": "dolor libero porttitor amet pulvinar adipiscing Java elit libero sit Lorem", "createdAt": 1680373452000}' to topic='twitter-topic' with key '9092152030889552721'
2023-04-01 13:24:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:22 -0500 2023","id":"3023257806231561747","text":"purus porttitor ipsum adipiscing malesuada amet Java purus magna sit elit elit","user":{"id":"6422390583517495129"}}
2023-04-01 13:24:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus porttitor ipsum adipiscing malesuada amet Java purus magna sit elit elit and sending to kafka topic twitter-topic
2023-04-01 13:24:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6422390583517495129, "id": 3023257806231561747, "text": "purus porttitor ipsum adipiscing malesuada amet Java purus magna sit elit elit", "createdAt": 1680373462000}' to topic='twitter-topic' with key '3023257806231561747'
2023-04-01 13:24:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:32 -0500 2023","id":"7643918083272179252","text":"elit consectetuer mara amet amet ipsum Kafka ipsum magna sit consectetuer","user":{"id":"7747696741417019131"}}
2023-04-01 13:24:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit consectetuer mara amet amet ipsum Kafka ipsum magna sit consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:24:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7747696741417019131, "id": 7643918083272179252, "text": "elit consectetuer mara amet amet ipsum Kafka ipsum magna sit consectetuer", "createdAt": 1680373472000}' to topic='twitter-topic' with key '7643918083272179252'
2023-04-01 13:24:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:42 -0500 2023","id":"6097301275944973452","text":"purus consectetuer massa Maecenas Lorem purus Kafka sed pulvinar elit elit","user":{"id":"2230246166676875797"}}
2023-04-01 13:24:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus consectetuer massa Maecenas Lorem purus Kafka sed pulvinar elit elit and sending to kafka topic twitter-topic
2023-04-01 13:24:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2230246166676875797, "id": 6097301275944973452, "text": "purus consectetuer massa Maecenas Lorem purus Kafka sed pulvinar elit elit", "createdAt": 1680373482000}' to topic='twitter-topic' with key '6097301275944973452'
2023-04-01 13:24:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:24:52 -0500 2023","id":"2532056172707423336","text":"amet ipsum amet libero malesuada libero Elasticsearch elit elit sit pulvinar","user":{"id":"8872381306013611836"}}
2023-04-01 13:24:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet ipsum amet libero malesuada libero Elasticsearch elit elit sit pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:24:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8872381306013611836, "id": 2532056172707423336, "text": "amet ipsum amet libero malesuada libero Elasticsearch elit elit sit pulvinar", "createdAt": 1680373492000}' to topic='twitter-topic' with key '2532056172707423336'
2023-04-01 13:25:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:02 -0500 2023","id":"1960726345273255694","text":"sed Maecenas yltricies malesuada Lorem Elasticsearch lectus ipsum purus elit","user":{"id":"1898199614440991742"}}
2023-04-01 13:25:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed Maecenas yltricies malesuada Lorem Elasticsearch lectus ipsum purus elit and sending to kafka topic twitter-topic
2023-04-01 13:25:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1898199614440991742, "id": 1960726345273255694, "text": "sed Maecenas yltricies malesuada Lorem Elasticsearch lectus ipsum purus elit", "createdAt": 1680373502000}' to topic='twitter-topic' with key '1960726345273255694'
2023-04-01 13:25:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:12 -0500 2023","id":"3738628216835821244","text":"adipiscing adipiscing elit mara consectetuer mara Microservices sed sed massa posuere","user":{"id":"6245761112969700212"}}
2023-04-01 13:25:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing adipiscing elit mara consectetuer mara Microservices sed sed massa posuere and sending to kafka topic twitter-topic
2023-04-01 13:25:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6245761112969700212, "id": 3738628216835821244, "text": "adipiscing adipiscing elit mara consectetuer mara Microservices sed sed massa posuere", "createdAt": 1680373512000}' to topic='twitter-topic' with key '3738628216835821244'
2023-04-01 13:25:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:22 -0500 2023","id":"923249243627430058","text":"mara posuere adipiscing consectetuer yltricies Elasticsearch posuere posuere dolor","user":{"id":"2019365637957036931"}}
2023-04-01 13:25:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara posuere adipiscing consectetuer yltricies Elasticsearch posuere posuere dolor and sending to kafka topic twitter-topic
2023-04-01 13:25:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2019365637957036931, "id": 923249243627430058, "text": "mara posuere adipiscing consectetuer yltricies Elasticsearch posuere posuere dolor", "createdAt": 1680373522000}' to topic='twitter-topic' with key '923249243627430058'
2023-04-01 13:25:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:32 -0500 2023","id":"2764697677787073472","text":"sit Lorem consectetuer libero Spring massa sit amet","user":{"id":"517806842175253949"}}
2023-04-01 13:25:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit Lorem consectetuer libero Spring massa sit amet and sending to kafka topic twitter-topic
2023-04-01 13:25:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 517806842175253949, "id": 2764697677787073472, "text": "sit Lorem consectetuer libero Spring massa sit amet", "createdAt": 1680373532000}' to topic='twitter-topic' with key '2764697677787073472'
2023-04-01 13:25:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:42 -0500 2023","id":"4842111898918530098","text":"adipiscing magna posuere Kafka purus libero","user":{"id":"6903859939849124892"}}
2023-04-01 13:25:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing magna posuere Kafka purus libero and sending to kafka topic twitter-topic
2023-04-01 13:25:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6903859939849124892, "id": 4842111898918530098, "text": "adipiscing magna posuere Kafka purus libero", "createdAt": 1680373542000}' to topic='twitter-topic' with key '4842111898918530098'
2023-04-01 13:25:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:25:52 -0500 2023","id":"8644733901723132485","text":"porttitor malesuada purus porttitor Java amet sit adipiscing","user":{"id":"5590613784521890940"}}
2023-04-01 13:25:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor malesuada purus porttitor Java amet sit adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:25:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5590613784521890940, "id": 8644733901723132485, "text": "porttitor malesuada purus porttitor Java amet sit adipiscing", "createdAt": 1680373552000}' to topic='twitter-topic' with key '8644733901723132485'
2023-04-01 13:26:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:02 -0500 2023","id":"2006077873754459758","text":"adipiscing amet mara Maecenas malesuada Spring magna ipsum magna adipiscing","user":{"id":"4713609048032903967"}}
2023-04-01 13:26:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing amet mara Maecenas malesuada Spring magna ipsum magna adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:26:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4713609048032903967, "id": 2006077873754459758, "text": "adipiscing amet mara Maecenas malesuada Spring magna ipsum magna adipiscing", "createdAt": 1680373562000}' to topic='twitter-topic' with key '2006077873754459758'
2023-04-01 13:26:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:12 -0500 2023","id":"4420984697536392699","text":"magna magna porttitor sed lectus sit Elasticsearch conque posuere amet ipsum","user":{"id":"2771755423594168858"}}
2023-04-01 13:26:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna magna porttitor sed lectus sit Elasticsearch conque posuere amet ipsum and sending to kafka topic twitter-topic
2023-04-01 13:26:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2771755423594168858, "id": 4420984697536392699, "text": "magna magna porttitor sed lectus sit Elasticsearch conque posuere amet ipsum", "createdAt": 1680373572000}' to topic='twitter-topic' with key '4420984697536392699'
2023-04-01 13:26:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:22 -0500 2023","id":"3378855815430877565","text":"porttitor Maecenas sed Lorem dolor conque libero Kafka sit posuere mara sed yltricies","user":{"id":"5905761541318728431"}}
2023-04-01 13:26:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor Maecenas sed Lorem dolor conque libero Kafka sit posuere mara sed yltricies and sending to kafka topic twitter-topic
2023-04-01 13:26:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5905761541318728431, "id": 3378855815430877565, "text": "porttitor Maecenas sed Lorem dolor conque libero Kafka sit posuere mara sed yltricies", "createdAt": 1680373582000}' to topic='twitter-topic' with key '3378855815430877565'
2023-04-01 13:26:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:32 -0500 2023","id":"8866988156773802241","text":"libero posuere porttitor Lorem porttitor Elasticsearch yltricies malesuada purus Maecenas","user":{"id":"7435714354835785750"}}
2023-04-01 13:26:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero posuere porttitor Lorem porttitor Elasticsearch yltricies malesuada purus Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:26:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7435714354835785750, "id": 8866988156773802241, "text": "libero posuere porttitor Lorem porttitor Elasticsearch yltricies malesuada purus Maecenas", "createdAt": 1680373592000}' to topic='twitter-topic' with key '8866988156773802241'
2023-04-01 13:26:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:42 -0500 2023","id":"6261969809706055048","text":"conque elit conque amet sit consectetuer amet Elasticsearch elit conque yltricies amet pulvinar amet","user":{"id":"5160100822310150614"}}
2023-04-01 13:26:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque elit conque amet sit consectetuer amet Elasticsearch elit conque yltricies amet pulvinar amet and sending to kafka topic twitter-topic
2023-04-01 13:26:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5160100822310150614, "id": 6261969809706055048, "text": "conque elit conque amet sit consectetuer amet Elasticsearch elit conque yltricies amet pulvinar amet", "createdAt": 1680373602000}' to topic='twitter-topic' with key '6261969809706055048'
2023-04-01 13:26:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:26:52 -0500 2023","id":"6278606402445517009","text":"adipiscing Lorem malesuada ipsum elit sed ipsum Lorem Spring adipiscing lectus consectetuer libero amet adipiscing","user":{"id":"45814185522184881"}}
2023-04-01 13:26:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing Lorem malesuada ipsum elit sed ipsum Lorem Spring adipiscing lectus consectetuer libero amet adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:26:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 45814185522184881, "id": 6278606402445517009, "text": "adipiscing Lorem malesuada ipsum elit sed ipsum Lorem Spring adipiscing lectus consectetuer libero amet adipiscing", "createdAt": 1680373612000}' to topic='twitter-topic' with key '6278606402445517009'
2023-04-01 13:27:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:02 -0500 2023","id":"681243014713141660","text":"malesuada lectus sed lectus consectetuer lectus posuere Kafka sed ipsum massa adipiscing Maecenas","user":{"id":"6884896697729711032"}}
2023-04-01 13:27:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada lectus sed lectus consectetuer lectus posuere Kafka sed ipsum massa adipiscing Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:27:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6884896697729711032, "id": 681243014713141660, "text": "malesuada lectus sed lectus consectetuer lectus posuere Kafka sed ipsum massa adipiscing Maecenas", "createdAt": 1680373622000}' to topic='twitter-topic' with key '681243014713141660'
2023-04-01 13:27:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:12 -0500 2023","id":"5468679397920219250","text":"ipsum elit purus libero ipsum Java Maecenas Maecenas massa","user":{"id":"1418172686602169646"}}
2023-04-01 13:27:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum elit purus libero ipsum Java Maecenas Maecenas massa and sending to kafka topic twitter-topic
2023-04-01 13:27:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1418172686602169646, "id": 5468679397920219250, "text": "ipsum elit purus libero ipsum Java Maecenas Maecenas massa", "createdAt": 1680373632000}' to topic='twitter-topic' with key '5468679397920219250'
2023-04-01 13:27:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:22 -0500 2023","id":"9067256940053844870","text":"purus elit pulvinar sed magna sit consectetuer Java purus malesuada pulvinar porttitor ipsum","user":{"id":"2153052772185722153"}}
2023-04-01 13:27:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus elit pulvinar sed magna sit consectetuer Java purus malesuada pulvinar porttitor ipsum and sending to kafka topic twitter-topic
2023-04-01 13:27:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2153052772185722153, "id": 9067256940053844870, "text": "purus elit pulvinar sed magna sit consectetuer Java purus malesuada pulvinar porttitor ipsum", "createdAt": 1680373642000}' to topic='twitter-topic' with key '9067256940053844870'
2023-04-01 13:27:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:32 -0500 2023","id":"6999971979607969171","text":"mara massa elit libero Maecenas libero Microservices libero mara amet dolor sed","user":{"id":"7504960912996009818"}}
2023-04-01 13:27:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara massa elit libero Maecenas libero Microservices libero mara amet dolor sed and sending to kafka topic twitter-topic
2023-04-01 13:27:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7504960912996009818, "id": 6999971979607969171, "text": "mara massa elit libero Maecenas libero Microservices libero mara amet dolor sed", "createdAt": 1680373652000}' to topic='twitter-topic' with key '6999971979607969171'
2023-04-01 13:27:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:42 -0500 2023","id":"3659249292011344063","text":"mara sit posuere adipiscing amet Kafka pulvinar adipiscing magna","user":{"id":"931516523952597211"}}
2023-04-01 13:27:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sit posuere adipiscing amet Kafka pulvinar adipiscing magna and sending to kafka topic twitter-topic
2023-04-01 13:27:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 931516523952597211, "id": 3659249292011344063, "text": "mara sit posuere adipiscing amet Kafka pulvinar adipiscing magna", "createdAt": 1680373662000}' to topic='twitter-topic' with key '3659249292011344063'
2023-04-01 13:27:52 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:27:52 -0500 2023","id":"2653857616803807606","text":"sit Maecenas Lorem adipiscing massa lectus Spring conque purus Maecenas porttitor libero","user":{"id":"3337433942879582156"}}
2023-04-01 13:27:52 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit Maecenas Lorem adipiscing massa lectus Spring conque purus Maecenas porttitor libero and sending to kafka topic twitter-topic
2023-04-01 13:27:52 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3337433942879582156, "id": 2653857616803807606, "text": "sit Maecenas Lorem adipiscing massa lectus Spring conque purus Maecenas porttitor libero", "createdAt": 1680373672000}' to topic='twitter-topic' with key '2653857616803807606'
2023-04-01 13:28:02 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:02 -0500 2023","id":"4109787350494863902","text":"massa lectus pulvinar Java sed malesuada","user":{"id":"655176266110264245"}}
2023-04-01 13:28:02 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa lectus pulvinar Java sed malesuada and sending to kafka topic twitter-topic
2023-04-01 13:28:02 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 655176266110264245, "id": 4109787350494863902, "text": "massa lectus pulvinar Java sed malesuada", "createdAt": 1680373682000}' to topic='twitter-topic' with key '4109787350494863902'
2023-04-01 13:28:12 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:12 -0500 2023","id":"6508923094831256575","text":"posuere adipiscing lectus Java posuere elit","user":{"id":"1367305053371034936"}}
2023-04-01 13:28:12 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere adipiscing lectus Java posuere elit and sending to kafka topic twitter-topic
2023-04-01 13:28:12 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1367305053371034936, "id": 6508923094831256575, "text": "posuere adipiscing lectus Java posuere elit", "createdAt": 1680373692000}' to topic='twitter-topic' with key '6508923094831256575'
2023-04-01 13:28:22 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:22 -0500 2023","id":"7761501376023996748","text":"magna yltricies Maecenas yltricies Microservices ipsum pulvinar","user":{"id":"5200838205865471413"}}
2023-04-01 13:28:22 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna yltricies Maecenas yltricies Microservices ipsum pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:28:22 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5200838205865471413, "id": 7761501376023996748, "text": "magna yltricies Maecenas yltricies Microservices ipsum pulvinar", "createdAt": 1680373702000}' to topic='twitter-topic' with key '7761501376023996748'
2023-04-01 13:28:32 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:32 -0500 2023","id":"7938573780014446450","text":"consectetuer Maecenas Maecenas yltricies purus Microservices consectetuer amet amet elit","user":{"id":"1670388465595812066"}}
2023-04-01 13:28:32 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer Maecenas Maecenas yltricies purus Microservices consectetuer amet amet elit and sending to kafka topic twitter-topic
2023-04-01 13:28:32 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1670388465595812066, "id": 7938573780014446450, "text": "consectetuer Maecenas Maecenas yltricies purus Microservices consectetuer amet amet elit", "createdAt": 1680373712000}' to topic='twitter-topic' with key '7938573780014446450'
2023-04-01 13:28:42 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:42 -0500 2023","id":"2578804760657152856","text":"magna posuere Lorem libero Maecenas purus lectus adipiscing Microservices posuere porttitor Maecenas libero posuere pulvinar mara","user":{"id":"6494932992968722582"}}
2023-04-01 13:28:42 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna posuere Lorem libero Maecenas purus lectus adipiscing Microservices posuere porttitor Maecenas libero posuere pulvinar mara and sending to kafka topic twitter-topic
2023-04-01 13:28:42 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6494932992968722582, "id": 2578804760657152856, "text": "magna posuere Lorem libero Maecenas purus lectus adipiscing Microservices posuere porttitor Maecenas libero posuere pulvinar mara", "createdAt": 1680373722000}' to topic='twitter-topic' with key '2578804760657152856'
2023-04-01 13:28:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:28:53 -0500 2023","id":"860151922893408276","text":"sed elit porttitor porttitor lectus mara adipiscing dolor Java posuere yltricies adipiscing consectetuer conque adipiscing posuere","user":{"id":"7597205983942762763"}}
2023-04-01 13:28:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed elit porttitor porttitor lectus mara adipiscing dolor Java posuere yltricies adipiscing consectetuer conque adipiscing posuere and sending to kafka topic twitter-topic
2023-04-01 13:28:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7597205983942762763, "id": 860151922893408276, "text": "sed elit porttitor porttitor lectus mara adipiscing dolor Java posuere yltricies adipiscing consectetuer conque adipiscing posuere", "createdAt": 1680373733000}' to topic='twitter-topic' with key '860151922893408276'
2023-04-01 13:29:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:03 -0500 2023","id":"212521853089772094","text":"malesuada lectus mara Kafka Maecenas conque","user":{"id":"5500141472649863346"}}
2023-04-01 13:29:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada lectus mara Kafka Maecenas conque and sending to kafka topic twitter-topic
2023-04-01 13:29:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5500141472649863346, "id": 212521853089772094, "text": "malesuada lectus mara Kafka Maecenas conque", "createdAt": 1680373743000}' to topic='twitter-topic' with key '212521853089772094'
2023-04-01 13:29:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:13 -0500 2023","id":"3715977090322614740","text":"sed sed sed amet consectetuer Spring consectetuer elit magna","user":{"id":"3708462785609342240"}}
2023-04-01 13:29:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed sed sed amet consectetuer Spring consectetuer elit magna and sending to kafka topic twitter-topic
2023-04-01 13:29:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3708462785609342240, "id": 3715977090322614740, "text": "sed sed sed amet consectetuer Spring consectetuer elit magna", "createdAt": 1680373753000}' to topic='twitter-topic' with key '3715977090322614740'
2023-04-01 13:29:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:23 -0500 2023","id":"8720151813871387953","text":"purus magna posuere elit ipsum yltricies dolor Elasticsearch lectus conque magna Lorem elit sit","user":{"id":"4086225375315975790"}}
2023-04-01 13:29:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus magna posuere elit ipsum yltricies dolor Elasticsearch lectus conque magna Lorem elit sit and sending to kafka topic twitter-topic
2023-04-01 13:29:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4086225375315975790, "id": 8720151813871387953, "text": "purus magna posuere elit ipsum yltricies dolor Elasticsearch lectus conque magna Lorem elit sit", "createdAt": 1680373763000}' to topic='twitter-topic' with key '8720151813871387953'
2023-04-01 13:29:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:33 -0500 2023","id":"6347233834722689168","text":"Maecenas sed libero libero libero Microservices libero yltricies adipiscing porttitor","user":{"id":"1365736330721176071"}}
2023-04-01 13:29:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas sed libero libero libero Microservices libero yltricies adipiscing porttitor and sending to kafka topic twitter-topic
2023-04-01 13:29:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1365736330721176071, "id": 6347233834722689168, "text": "Maecenas sed libero libero libero Microservices libero yltricies adipiscing porttitor", "createdAt": 1680373773000}' to topic='twitter-topic' with key '6347233834722689168'
2023-04-01 13:29:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:43 -0500 2023","id":"4233758635127217037","text":"purus sit Lorem posuere Kafka amet amet malesuada","user":{"id":"2813590307373218036"}}
2023-04-01 13:29:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus sit Lorem posuere Kafka amet amet malesuada and sending to kafka topic twitter-topic
2023-04-01 13:29:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2813590307373218036, "id": 4233758635127217037, "text": "purus sit Lorem posuere Kafka amet amet malesuada", "createdAt": 1680373783000}' to topic='twitter-topic' with key '4233758635127217037'
2023-04-01 13:29:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:29:53 -0500 2023","id":"4518883311526348005","text":"amet consectetuer mara sed adipiscing Kafka magna consectetuer posuere","user":{"id":"3171774321144467397"}}
2023-04-01 13:29:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet consectetuer mara sed adipiscing Kafka magna consectetuer posuere and sending to kafka topic twitter-topic
2023-04-01 13:29:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3171774321144467397, "id": 4518883311526348005, "text": "amet consectetuer mara sed adipiscing Kafka magna consectetuer posuere", "createdAt": 1680373793000}' to topic='twitter-topic' with key '4518883311526348005'
2023-04-01 13:30:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:03 -0500 2023","id":"8711298301973846591","text":"amet pulvinar purus amet consectetuer purus amet sit Elasticsearch mara sit ipsum mara Maecenas sit","user":{"id":"7459440689285653888"}}
2023-04-01 13:30:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet pulvinar purus amet consectetuer purus amet sit Elasticsearch mara sit ipsum mara Maecenas sit and sending to kafka topic twitter-topic
2023-04-01 13:30:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7459440689285653888, "id": 8711298301973846591, "text": "amet pulvinar purus amet consectetuer purus amet sit Elasticsearch mara sit ipsum mara Maecenas sit", "createdAt": 1680373803000}' to topic='twitter-topic' with key '8711298301973846591'
2023-04-01 13:30:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:13 -0500 2023","id":"7972671577455646702","text":"massa sit porttitor libero posuere ipsum purus consectetuer Microservices sit pulvinar dolor ipsum ipsum purus","user":{"id":"4927576422544304335"}}
2023-04-01 13:30:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa sit porttitor libero posuere ipsum purus consectetuer Microservices sit pulvinar dolor ipsum ipsum purus and sending to kafka topic twitter-topic
2023-04-01 13:30:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4927576422544304335, "id": 7972671577455646702, "text": "massa sit porttitor libero posuere ipsum purus consectetuer Microservices sit pulvinar dolor ipsum ipsum purus", "createdAt": 1680373813000}' to topic='twitter-topic' with key '7972671577455646702'
2023-04-01 13:30:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:23 -0500 2023","id":"1455961325875870571","text":"conque massa Lorem conque malesuada mara porttitor Spring porttitor elit pulvinar sed lectus lectus","user":{"id":"537012677446440795"}}
2023-04-01 13:30:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque massa Lorem conque malesuada mara porttitor Spring porttitor elit pulvinar sed lectus lectus and sending to kafka topic twitter-topic
2023-04-01 13:30:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 537012677446440795, "id": 1455961325875870571, "text": "conque massa Lorem conque malesuada mara porttitor Spring porttitor elit pulvinar sed lectus lectus", "createdAt": 1680373823000}' to topic='twitter-topic' with key '1455961325875870571'
2023-04-01 13:30:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:33 -0500 2023","id":"5556674045663360908","text":"dolor elit Lorem conque posuere amet ipsum Elasticsearch Lorem pulvinar Lorem purus sit purus","user":{"id":"5207311349380120086"}}
2023-04-01 13:30:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor elit Lorem conque posuere amet ipsum Elasticsearch Lorem pulvinar Lorem purus sit purus and sending to kafka topic twitter-topic
2023-04-01 13:30:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5207311349380120086, "id": 5556674045663360908, "text": "dolor elit Lorem conque posuere amet ipsum Elasticsearch Lorem pulvinar Lorem purus sit purus", "createdAt": 1680373833000}' to topic='twitter-topic' with key '5556674045663360908'
2023-04-01 13:30:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:43 -0500 2023","id":"4596680046225099451","text":"dolor adipiscing Maecenas yltricies libero malesuada malesuada Java pulvinar malesuada Maecenas pulvinar Lorem Maecenas","user":{"id":"6107511849403108552"}}
2023-04-01 13:30:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor adipiscing Maecenas yltricies libero malesuada malesuada Java pulvinar malesuada Maecenas pulvinar Lorem Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:30:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6107511849403108552, "id": 4596680046225099451, "text": "dolor adipiscing Maecenas yltricies libero malesuada malesuada Java pulvinar malesuada Maecenas pulvinar Lorem Maecenas", "createdAt": 1680373843000}' to topic='twitter-topic' with key '4596680046225099451'
2023-04-01 13:30:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:30:53 -0500 2023","id":"3708471017217844981","text":"ipsum Lorem sed Maecenas malesuada massa consectetuer Elasticsearch Lorem massa Lorem malesuada porttitor","user":{"id":"510713450007577288"}}
2023-04-01 13:30:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum Lorem sed Maecenas malesuada massa consectetuer Elasticsearch Lorem massa Lorem malesuada porttitor and sending to kafka topic twitter-topic
2023-04-01 13:30:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 510713450007577288, "id": 3708471017217844981, "text": "ipsum Lorem sed Maecenas malesuada massa consectetuer Elasticsearch Lorem massa Lorem malesuada porttitor", "createdAt": 1680373853000}' to topic='twitter-topic' with key '3708471017217844981'
2023-04-01 13:31:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:03 -0500 2023","id":"5399591959866891665","text":"Lorem elit pulvinar malesuada Microservices adipiscing ipsum magna","user":{"id":"7017780024954792281"}}
2023-04-01 13:31:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem elit pulvinar malesuada Microservices adipiscing ipsum magna and sending to kafka topic twitter-topic
2023-04-01 13:31:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7017780024954792281, "id": 5399591959866891665, "text": "Lorem elit pulvinar malesuada Microservices adipiscing ipsum magna", "createdAt": 1680373863000}' to topic='twitter-topic' with key '5399591959866891665'
2023-04-01 13:31:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:13 -0500 2023","id":"7546804166368224676","text":"dolor conque yltricies Kafka Lorem ipsum","user":{"id":"8026293178842785022"}}
2023-04-01 13:31:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor conque yltricies Kafka Lorem ipsum and sending to kafka topic twitter-topic
2023-04-01 13:31:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8026293178842785022, "id": 7546804166368224676, "text": "dolor conque yltricies Kafka Lorem ipsum", "createdAt": 1680373873000}' to topic='twitter-topic' with key '7546804166368224676'
2023-04-01 13:31:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:23 -0500 2023","id":"3850318839572291013","text":"ipsum magna conque libero libero adipiscing Java posuere conque libero yltricies ipsum","user":{"id":"6717935966762847375"}}
2023-04-01 13:31:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum magna conque libero libero adipiscing Java posuere conque libero yltricies ipsum and sending to kafka topic twitter-topic
2023-04-01 13:31:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6717935966762847375, "id": 3850318839572291013, "text": "ipsum magna conque libero libero adipiscing Java posuere conque libero yltricies ipsum", "createdAt": 1680373883000}' to topic='twitter-topic' with key '3850318839572291013'
2023-04-01 13:31:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:33 -0500 2023","id":"7207478512456370122","text":"posuere purus consectetuer conque adipiscing posuere Java lectus purus mara sit","user":{"id":"2447205873989516740"}}
2023-04-01 13:31:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere purus consectetuer conque adipiscing posuere Java lectus purus mara sit and sending to kafka topic twitter-topic
2023-04-01 13:31:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2447205873989516740, "id": 7207478512456370122, "text": "posuere purus consectetuer conque adipiscing posuere Java lectus purus mara sit", "createdAt": 1680373893000}' to topic='twitter-topic' with key '7207478512456370122'
2023-04-01 13:31:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:43 -0500 2023","id":"3876625937818526376","text":"mara mara porttitor massa lectus amet magna magna Java adipiscing sed Lorem consectetuer purus adipiscing","user":{"id":"7403702374206590746"}}
2023-04-01 13:31:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara mara porttitor massa lectus amet magna magna Java adipiscing sed Lorem consectetuer purus adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:31:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7403702374206590746, "id": 3876625937818526376, "text": "mara mara porttitor massa lectus amet magna magna Java adipiscing sed Lorem consectetuer purus adipiscing", "createdAt": 1680373903000}' to topic='twitter-topic' with key '3876625937818526376'
2023-04-01 13:31:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:31:53 -0500 2023","id":"9012394623457394006","text":"pulvinar massa libero magna adipiscing Kafka conque sed Lorem posuere","user":{"id":"3358360264249167649"}}
2023-04-01 13:31:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar massa libero magna adipiscing Kafka conque sed Lorem posuere and sending to kafka topic twitter-topic
2023-04-01 13:31:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3358360264249167649, "id": 9012394623457394006, "text": "pulvinar massa libero magna adipiscing Kafka conque sed Lorem posuere", "createdAt": 1680373913000}' to topic='twitter-topic' with key '9012394623457394006'
2023-04-01 13:32:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:03 -0500 2023","id":"7923460284212429440","text":"elit conque Lorem magna amet purus adipiscing Microservices libero sed mara libero lectus amet","user":{"id":"920975258415200930"}}
2023-04-01 13:32:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit conque Lorem magna amet purus adipiscing Microservices libero sed mara libero lectus amet and sending to kafka topic twitter-topic
2023-04-01 13:32:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 920975258415200930, "id": 7923460284212429440, "text": "elit conque Lorem magna amet purus adipiscing Microservices libero sed mara libero lectus amet", "createdAt": 1680373923000}' to topic='twitter-topic' with key '7923460284212429440'
2023-04-01 13:32:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:13 -0500 2023","id":"6034844394997800161","text":"libero lectus porttitor libero Spring magna pulvinar ipsum","user":{"id":"9173873515073518844"}}
2023-04-01 13:32:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero lectus porttitor libero Spring magna pulvinar ipsum and sending to kafka topic twitter-topic
2023-04-01 13:32:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9173873515073518844, "id": 6034844394997800161, "text": "libero lectus porttitor libero Spring magna pulvinar ipsum", "createdAt": 1680373933000}' to topic='twitter-topic' with key '6034844394997800161'
2023-04-01 13:32:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:23 -0500 2023","id":"7257992426864987404","text":"porttitor amet Maecenas Java sit mara","user":{"id":"4771253299136589909"}}
2023-04-01 13:32:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor amet Maecenas Java sit mara and sending to kafka topic twitter-topic
2023-04-01 13:32:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4771253299136589909, "id": 7257992426864987404, "text": "porttitor amet Maecenas Java sit mara", "createdAt": 1680373943000}' to topic='twitter-topic' with key '7257992426864987404'
2023-04-01 13:32:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:33 -0500 2023","id":"979856116497310542","text":"ipsum sed libero Spring sed elit","user":{"id":"3374842832575797996"}}
2023-04-01 13:32:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum sed libero Spring sed elit and sending to kafka topic twitter-topic
2023-04-01 13:32:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3374842832575797996, "id": 979856116497310542, "text": "ipsum sed libero Spring sed elit", "createdAt": 1680373953000}' to topic='twitter-topic' with key '979856116497310542'
2023-04-01 13:32:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:43 -0500 2023","id":"3433271822383578495","text":"pulvinar posuere Lorem sit conque Lorem elit Spring yltricies sit ipsum mara magna magna","user":{"id":"5171046676007726901"}}
2023-04-01 13:32:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar posuere Lorem sit conque Lorem elit Spring yltricies sit ipsum mara magna magna and sending to kafka topic twitter-topic
2023-04-01 13:32:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5171046676007726901, "id": 3433271822383578495, "text": "pulvinar posuere Lorem sit conque Lorem elit Spring yltricies sit ipsum mara magna magna", "createdAt": 1680373963000}' to topic='twitter-topic' with key '3433271822383578495'
2023-04-01 13:32:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:32:53 -0500 2023","id":"2907529422085233632","text":"posuere malesuada conque lectus posuere Microservices Lorem Lorem lectus","user":{"id":"3356441436294854830"}}
2023-04-01 13:32:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere malesuada conque lectus posuere Microservices Lorem Lorem lectus and sending to kafka topic twitter-topic
2023-04-01 13:32:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3356441436294854830, "id": 2907529422085233632, "text": "posuere malesuada conque lectus posuere Microservices Lorem Lorem lectus", "createdAt": 1680373973000}' to topic='twitter-topic' with key '2907529422085233632'
2023-04-01 13:33:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:03 -0500 2023","id":"5370625940964373724","text":"sit adipiscing magna malesuada sit Elasticsearch consectetuer consectetuer posuere posuere","user":{"id":"4754231808326555792"}}
2023-04-01 13:33:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit adipiscing magna malesuada sit Elasticsearch consectetuer consectetuer posuere posuere and sending to kafka topic twitter-topic
2023-04-01 13:33:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4754231808326555792, "id": 5370625940964373724, "text": "sit adipiscing magna malesuada sit Elasticsearch consectetuer consectetuer posuere posuere", "createdAt": 1680373983000}' to topic='twitter-topic' with key '5370625940964373724'
2023-04-01 13:33:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:13 -0500 2023","id":"4835298690324236843","text":"pulvinar Maecenas massa conque dolor elit malesuada Spring elit posuere porttitor Lorem elit posuere","user":{"id":"5433849754185236998"}}
2023-04-01 13:33:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Maecenas massa conque dolor elit malesuada Spring elit posuere porttitor Lorem elit posuere and sending to kafka topic twitter-topic
2023-04-01 13:33:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5433849754185236998, "id": 4835298690324236843, "text": "pulvinar Maecenas massa conque dolor elit malesuada Spring elit posuere porttitor Lorem elit posuere", "createdAt": 1680373993000}' to topic='twitter-topic' with key '4835298690324236843'
2023-04-01 13:33:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:23 -0500 2023","id":"4328054994990636471","text":"porttitor dolor malesuada conque Java posuere sed","user":{"id":"336204841371833582"}}
2023-04-01 13:33:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor dolor malesuada conque Java posuere sed and sending to kafka topic twitter-topic
2023-04-01 13:33:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 336204841371833582, "id": 4328054994990636471, "text": "porttitor dolor malesuada conque Java posuere sed", "createdAt": 1680374003000}' to topic='twitter-topic' with key '4328054994990636471'
2023-04-01 13:33:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:33 -0500 2023","id":"8561792232960850746","text":"purus lectus elit amet mara purus Microservices porttitor lectus Lorem dolor","user":{"id":"2984230888020062545"}}
2023-04-01 13:33:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus lectus elit amet mara purus Microservices porttitor lectus Lorem dolor and sending to kafka topic twitter-topic
2023-04-01 13:33:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2984230888020062545, "id": 8561792232960850746, "text": "purus lectus elit amet mara purus Microservices porttitor lectus Lorem dolor", "createdAt": 1680374013000}' to topic='twitter-topic' with key '8561792232960850746'
2023-04-01 13:33:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:43 -0500 2023","id":"8571707800882634019","text":"libero malesuada Lorem amet massa consectetuer adipiscing consectetuer Kafka massa posuere posuere pulvinar consectetuer mara massa","user":{"id":"5238105872606903485"}}
2023-04-01 13:33:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero malesuada Lorem amet massa consectetuer adipiscing consectetuer Kafka massa posuere posuere pulvinar consectetuer mara massa and sending to kafka topic twitter-topic
2023-04-01 13:33:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5238105872606903485, "id": 8571707800882634019, "text": "libero malesuada Lorem amet massa consectetuer adipiscing consectetuer Kafka massa posuere posuere pulvinar consectetuer mara massa", "createdAt": 1680374023000}' to topic='twitter-topic' with key '8571707800882634019'
2023-04-01 13:33:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:33:53 -0500 2023","id":"2622907379507042480","text":"magna conque elit Kafka libero sed","user":{"id":"1552776234388145166"}}
2023-04-01 13:33:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna conque elit Kafka libero sed and sending to kafka topic twitter-topic
2023-04-01 13:33:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1552776234388145166, "id": 2622907379507042480, "text": "magna conque elit Kafka libero sed", "createdAt": 1680374033000}' to topic='twitter-topic' with key '2622907379507042480'
2023-04-01 13:34:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:03 -0500 2023","id":"7223543337208350417","text":"lectus Maecenas sed lectus yltricies sit massa yltricies Java Maecenas massa porttitor purus purus elit","user":{"id":"7544031069556163119"}}
2023-04-01 13:34:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus Maecenas sed lectus yltricies sit massa yltricies Java Maecenas massa porttitor purus purus elit and sending to kafka topic twitter-topic
2023-04-01 13:34:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7544031069556163119, "id": 7223543337208350417, "text": "lectus Maecenas sed lectus yltricies sit massa yltricies Java Maecenas massa porttitor purus purus elit", "createdAt": 1680374043000}' to topic='twitter-topic' with key '7223543337208350417'
2023-04-01 13:34:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:13 -0500 2023","id":"1433408536499363557","text":"malesuada malesuada libero yltricies Java Maecenas Maecenas posuere","user":{"id":"4533971961670326992"}}
2023-04-01 13:34:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada malesuada libero yltricies Java Maecenas Maecenas posuere and sending to kafka topic twitter-topic
2023-04-01 13:34:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4533971961670326992, "id": 1433408536499363557, "text": "malesuada malesuada libero yltricies Java Maecenas Maecenas posuere", "createdAt": 1680374053000}' to topic='twitter-topic' with key '1433408536499363557'
2023-04-01 13:34:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:23 -0500 2023","id":"1782255393868831746","text":"yltricies purus purus Java dolor sed","user":{"id":"4534828254358439036"}}
2023-04-01 13:34:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies purus purus Java dolor sed and sending to kafka topic twitter-topic
2023-04-01 13:34:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4534828254358439036, "id": 1782255393868831746, "text": "yltricies purus purus Java dolor sed", "createdAt": 1680374063000}' to topic='twitter-topic' with key '1782255393868831746'
2023-04-01 13:34:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:33 -0500 2023","id":"1848425185743114628","text":"yltricies purus lectus dolor posuere Java massa conque consectetuer","user":{"id":"8738205394981552104"}}
2023-04-01 13:34:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies purus lectus dolor posuere Java massa conque consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:34:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8738205394981552104, "id": 1848425185743114628, "text": "yltricies purus lectus dolor posuere Java massa conque consectetuer", "createdAt": 1680374073000}' to topic='twitter-topic' with key '1848425185743114628'
2023-04-01 13:34:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:43 -0500 2023","id":"4520742098463901434","text":"dolor conque pulvinar lectus posuere yltricies sed consectetuer Java mara conque sit posuere dolor malesuada","user":{"id":"5980770126966608428"}}
2023-04-01 13:34:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor conque pulvinar lectus posuere yltricies sed consectetuer Java mara conque sit posuere dolor malesuada and sending to kafka topic twitter-topic
2023-04-01 13:34:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5980770126966608428, "id": 4520742098463901434, "text": "dolor conque pulvinar lectus posuere yltricies sed consectetuer Java mara conque sit posuere dolor malesuada", "createdAt": 1680374083000}' to topic='twitter-topic' with key '4520742098463901434'
2023-04-01 13:34:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:34:53 -0500 2023","id":"3482103522880227963","text":"ipsum amet malesuada dolor posuere Spring conque libero ipsum sit","user":{"id":"7054876137357126573"}}
2023-04-01 13:34:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum amet malesuada dolor posuere Spring conque libero ipsum sit and sending to kafka topic twitter-topic
2023-04-01 13:34:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7054876137357126573, "id": 3482103522880227963, "text": "ipsum amet malesuada dolor posuere Spring conque libero ipsum sit", "createdAt": 1680374093000}' to topic='twitter-topic' with key '3482103522880227963'
2023-04-01 13:35:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:03 -0500 2023","id":"4316595403374073792","text":"sit yltricies massa dolor sit Elasticsearch conque amet adipiscing","user":{"id":"9109522919099488741"}}
2023-04-01 13:35:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit yltricies massa dolor sit Elasticsearch conque amet adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:35:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9109522919099488741, "id": 4316595403374073792, "text": "sit yltricies massa dolor sit Elasticsearch conque amet adipiscing", "createdAt": 1680374103000}' to topic='twitter-topic' with key '4316595403374073792'
2023-04-01 13:35:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:13 -0500 2023","id":"9084650043564083136","text":"sed consectetuer adipiscing adipiscing libero ipsum Microservices purus libero mara posuere lectus","user":{"id":"2675473748487281934"}}
2023-04-01 13:35:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed consectetuer adipiscing adipiscing libero ipsum Microservices purus libero mara posuere lectus and sending to kafka topic twitter-topic
2023-04-01 13:35:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2675473748487281934, "id": 9084650043564083136, "text": "sed consectetuer adipiscing adipiscing libero ipsum Microservices purus libero mara posuere lectus", "createdAt": 1680374113000}' to topic='twitter-topic' with key '9084650043564083136'
2023-04-01 13:35:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:23 -0500 2023","id":"4095612236760771948","text":"conque lectus Maecenas adipiscing amet amet Spring purus consectetuer adipiscing dolor","user":{"id":"3801668562635547724"}}
2023-04-01 13:35:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque lectus Maecenas adipiscing amet amet Spring purus consectetuer adipiscing dolor and sending to kafka topic twitter-topic
2023-04-01 13:35:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3801668562635547724, "id": 4095612236760771948, "text": "conque lectus Maecenas adipiscing amet amet Spring purus consectetuer adipiscing dolor", "createdAt": 1680374123000}' to topic='twitter-topic' with key '4095612236760771948'
2023-04-01 13:35:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:33 -0500 2023","id":"580915367368708076","text":"Lorem elit sed sit purus mara Kafka elit libero lectus Lorem malesuada","user":{"id":"6176576718548661880"}}
2023-04-01 13:35:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem elit sed sit purus mara Kafka elit libero lectus Lorem malesuada and sending to kafka topic twitter-topic
2023-04-01 13:35:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6176576718548661880, "id": 580915367368708076, "text": "Lorem elit sed sit purus mara Kafka elit libero lectus Lorem malesuada", "createdAt": 1680374133000}' to topic='twitter-topic' with key '580915367368708076'
2023-04-01 13:35:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:43 -0500 2023","id":"7782222906230738412","text":"libero Maecenas sed posuere pulvinar adipiscing Kafka Maecenas consectetuer lectus posuere","user":{"id":"2817601454766603785"}}
2023-04-01 13:35:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero Maecenas sed posuere pulvinar adipiscing Kafka Maecenas consectetuer lectus posuere and sending to kafka topic twitter-topic
2023-04-01 13:35:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2817601454766603785, "id": 7782222906230738412, "text": "libero Maecenas sed posuere pulvinar adipiscing Kafka Maecenas consectetuer lectus posuere", "createdAt": 1680374143000}' to topic='twitter-topic' with key '7782222906230738412'
2023-04-01 13:35:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:35:53 -0500 2023","id":"3804752465803188780","text":"magna purus porttitor posuere Elasticsearch consectetuer purus","user":{"id":"4830422765128370659"}}
2023-04-01 13:35:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna purus porttitor posuere Elasticsearch consectetuer purus and sending to kafka topic twitter-topic
2023-04-01 13:35:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4830422765128370659, "id": 3804752465803188780, "text": "magna purus porttitor posuere Elasticsearch consectetuer purus", "createdAt": 1680374153000}' to topic='twitter-topic' with key '3804752465803188780'
2023-04-01 13:36:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:03 -0500 2023","id":"106412241976967129","text":"pulvinar massa massa Java amet dolor","user":{"id":"6879674070318022354"}}
2023-04-01 13:36:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar massa massa Java amet dolor and sending to kafka topic twitter-topic
2023-04-01 13:36:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6879674070318022354, "id": 106412241976967129, "text": "pulvinar massa massa Java amet dolor", "createdAt": 1680374163000}' to topic='twitter-topic' with key '106412241976967129'
2023-04-01 13:36:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:13 -0500 2023","id":"2368511695041563849","text":"mara consectetuer lectus libero purus ipsum Elasticsearch Maecenas sit ipsum amet","user":{"id":"6466340025409974778"}}
2023-04-01 13:36:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara consectetuer lectus libero purus ipsum Elasticsearch Maecenas sit ipsum amet and sending to kafka topic twitter-topic
2023-04-01 13:36:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6466340025409974778, "id": 2368511695041563849, "text": "mara consectetuer lectus libero purus ipsum Elasticsearch Maecenas sit ipsum amet", "createdAt": 1680374173000}' to topic='twitter-topic' with key '2368511695041563849'
2023-04-01 13:36:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:23 -0500 2023","id":"8135658667302620705","text":"malesuada malesuada yltricies massa consectetuer dolor purus libero Kafka elit mara magna amet elit sit","user":{"id":"4281752441649258993"}}
2023-04-01 13:36:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada malesuada yltricies massa consectetuer dolor purus libero Kafka elit mara magna amet elit sit and sending to kafka topic twitter-topic
2023-04-01 13:36:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4281752441649258993, "id": 8135658667302620705, "text": "malesuada malesuada yltricies massa consectetuer dolor purus libero Kafka elit mara magna amet elit sit", "createdAt": 1680374183000}' to topic='twitter-topic' with key '8135658667302620705'
2023-04-01 13:36:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:33 -0500 2023","id":"7988666754991944649","text":"adipiscing adipiscing massa posuere magna malesuada magna Java adipiscing pulvinar amet adipiscing posuere malesuada","user":{"id":"8601439518575250249"}}
2023-04-01 13:36:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing adipiscing massa posuere magna malesuada magna Java adipiscing pulvinar amet adipiscing posuere malesuada and sending to kafka topic twitter-topic
2023-04-01 13:36:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8601439518575250249, "id": 7988666754991944649, "text": "adipiscing adipiscing massa posuere magna malesuada magna Java adipiscing pulvinar amet adipiscing posuere malesuada", "createdAt": 1680374193000}' to topic='twitter-topic' with key '7988666754991944649'
2023-04-01 13:36:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:43 -0500 2023","id":"7335128624394156216","text":"ipsum malesuada adipiscing mara massa Java elit lectus ipsum yltricies","user":{"id":"5269208904139603380"}}
2023-04-01 13:36:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum malesuada adipiscing mara massa Java elit lectus ipsum yltricies and sending to kafka topic twitter-topic
2023-04-01 13:36:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5269208904139603380, "id": 7335128624394156216, "text": "ipsum malesuada adipiscing mara massa Java elit lectus ipsum yltricies", "createdAt": 1680374203000}' to topic='twitter-topic' with key '7335128624394156216'
2023-04-01 13:36:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:36:53 -0500 2023","id":"2501982623744045265","text":"conque amet lectus amet sed sit adipiscing Elasticsearch consectetuer dolor yltricies amet sit magna","user":{"id":"3537693343530654046"}}
2023-04-01 13:36:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque amet lectus amet sed sit adipiscing Elasticsearch consectetuer dolor yltricies amet sit magna and sending to kafka topic twitter-topic
2023-04-01 13:36:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3537693343530654046, "id": 2501982623744045265, "text": "conque amet lectus amet sed sit adipiscing Elasticsearch consectetuer dolor yltricies amet sit magna", "createdAt": 1680374213000}' to topic='twitter-topic' with key '2501982623744045265'
2023-04-01 13:37:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:03 -0500 2023","id":"5747864937389861174","text":"sit purus massa Spring sed Lorem","user":{"id":"885720043198192662"}}
2023-04-01 13:37:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit purus massa Spring sed Lorem and sending to kafka topic twitter-topic
2023-04-01 13:37:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 885720043198192662, "id": 5747864937389861174, "text": "sit purus massa Spring sed Lorem", "createdAt": 1680374223000}' to topic='twitter-topic' with key '5747864937389861174'
2023-04-01 13:37:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:13 -0500 2023","id":"4506191684959462823","text":"libero yltricies ipsum massa purus sed elit Java Maecenas elit yltricies yltricies malesuada massa","user":{"id":"924897158062771386"}}
2023-04-01 13:37:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero yltricies ipsum massa purus sed elit Java Maecenas elit yltricies yltricies malesuada massa and sending to kafka topic twitter-topic
2023-04-01 13:37:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 924897158062771386, "id": 4506191684959462823, "text": "libero yltricies ipsum massa purus sed elit Java Maecenas elit yltricies yltricies malesuada massa", "createdAt": 1680374233000}' to topic='twitter-topic' with key '4506191684959462823'
2023-04-01 13:37:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:23 -0500 2023","id":"8447445221580809865","text":"libero yltricies malesuada malesuada Lorem amet Java dolor massa sed dolor amet","user":{"id":"2744806487644516429"}}
2023-04-01 13:37:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero yltricies malesuada malesuada Lorem amet Java dolor massa sed dolor amet and sending to kafka topic twitter-topic
2023-04-01 13:37:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2744806487644516429, "id": 8447445221580809865, "text": "libero yltricies malesuada malesuada Lorem amet Java dolor massa sed dolor amet", "createdAt": 1680374243000}' to topic='twitter-topic' with key '8447445221580809865'
2023-04-01 13:37:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:33 -0500 2023","id":"6249365469121944623","text":"sed purus libero purus consectetuer Spring dolor lectus yltricies","user":{"id":"9164254634464302062"}}
2023-04-01 13:37:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed purus libero purus consectetuer Spring dolor lectus yltricies and sending to kafka topic twitter-topic
2023-04-01 13:37:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9164254634464302062, "id": 6249365469121944623, "text": "sed purus libero purus consectetuer Spring dolor lectus yltricies", "createdAt": 1680374253000}' to topic='twitter-topic' with key '6249365469121944623'
2023-04-01 13:37:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:43 -0500 2023","id":"5220626899069912716","text":"pulvinar sed adipiscing conque ipsum dolor libero porttitor Microservices yltricies purus mara porttitor lectus posuere yltricies","user":{"id":"1337244947548287137"}}
2023-04-01 13:37:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar sed adipiscing conque ipsum dolor libero porttitor Microservices yltricies purus mara porttitor lectus posuere yltricies and sending to kafka topic twitter-topic
2023-04-01 13:37:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1337244947548287137, "id": 5220626899069912716, "text": "pulvinar sed adipiscing conque ipsum dolor libero porttitor Microservices yltricies purus mara porttitor lectus posuere yltricies", "createdAt": 1680374263000}' to topic='twitter-topic' with key '5220626899069912716'
2023-04-01 13:37:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:37:53 -0500 2023","id":"2007277943574711330","text":"elit posuere purus amet malesuada pulvinar Lorem Microservices purus massa purus massa sit","user":{"id":"2123147909715954943"}}
2023-04-01 13:37:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit posuere purus amet malesuada pulvinar Lorem Microservices purus massa purus massa sit and sending to kafka topic twitter-topic
2023-04-01 13:37:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2123147909715954943, "id": 2007277943574711330, "text": "elit posuere purus amet malesuada pulvinar Lorem Microservices purus massa purus massa sit", "createdAt": 1680374273000}' to topic='twitter-topic' with key '2007277943574711330'
2023-04-01 13:38:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:03 -0500 2023","id":"6384316480602100806","text":"massa libero purus sit malesuada massa Java conque porttitor elit ipsum","user":{"id":"1326574987977598770"}}
2023-04-01 13:38:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa libero purus sit malesuada massa Java conque porttitor elit ipsum and sending to kafka topic twitter-topic
2023-04-01 13:38:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1326574987977598770, "id": 6384316480602100806, "text": "massa libero purus sit malesuada massa Java conque porttitor elit ipsum", "createdAt": 1680374283000}' to topic='twitter-topic' with key '6384316480602100806'
2023-04-01 13:38:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:13 -0500 2023","id":"8225875318711441358","text":"magna conque lectus Spring purus porttitor","user":{"id":"2666805966374805721"}}
2023-04-01 13:38:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna conque lectus Spring purus porttitor and sending to kafka topic twitter-topic
2023-04-01 13:38:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2666805966374805721, "id": 8225875318711441358, "text": "magna conque lectus Spring purus porttitor", "createdAt": 1680374293000}' to topic='twitter-topic' with key '8225875318711441358'
2023-04-01 13:38:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:23 -0500 2023","id":"1157195175796064240","text":"amet sit ipsum mara adipiscing ipsum sit libero Java sed mara ipsum massa conque lectus conque","user":{"id":"5000072395936404691"}}
2023-04-01 13:38:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet sit ipsum mara adipiscing ipsum sit libero Java sed mara ipsum massa conque lectus conque and sending to kafka topic twitter-topic
2023-04-01 13:38:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5000072395936404691, "id": 1157195175796064240, "text": "amet sit ipsum mara adipiscing ipsum sit libero Java sed mara ipsum massa conque lectus conque", "createdAt": 1680374303000}' to topic='twitter-topic' with key '1157195175796064240'
2023-04-01 13:38:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:33 -0500 2023","id":"8582775778032803682","text":"lectus malesuada Maecenas mara purus yltricies Elasticsearch amet magna pulvinar massa conque","user":{"id":"7854748035859571664"}}
2023-04-01 13:38:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus malesuada Maecenas mara purus yltricies Elasticsearch amet magna pulvinar massa conque and sending to kafka topic twitter-topic
2023-04-01 13:38:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7854748035859571664, "id": 8582775778032803682, "text": "lectus malesuada Maecenas mara purus yltricies Elasticsearch amet magna pulvinar massa conque", "createdAt": 1680374313000}' to topic='twitter-topic' with key '8582775778032803682'
2023-04-01 13:38:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:43 -0500 2023","id":"6116850083009987986","text":"magna malesuada amet yltricies dolor Elasticsearch pulvinar adipiscing Maecenas Maecenas","user":{"id":"3757298666092036004"}}
2023-04-01 13:38:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna malesuada amet yltricies dolor Elasticsearch pulvinar adipiscing Maecenas Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:38:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3757298666092036004, "id": 6116850083009987986, "text": "magna malesuada amet yltricies dolor Elasticsearch pulvinar adipiscing Maecenas Maecenas", "createdAt": 1680374323000}' to topic='twitter-topic' with key '6116850083009987986'
2023-04-01 13:38:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:38:53 -0500 2023","id":"3039736048223185408","text":"magna adipiscing dolor yltricies Maecenas dolor mara Java consectetuer yltricies adipiscing pulvinar elit libero","user":{"id":"1971051616915814564"}}
2023-04-01 13:38:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna adipiscing dolor yltricies Maecenas dolor mara Java consectetuer yltricies adipiscing pulvinar elit libero and sending to kafka topic twitter-topic
2023-04-01 13:38:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1971051616915814564, "id": 3039736048223185408, "text": "magna adipiscing dolor yltricies Maecenas dolor mara Java consectetuer yltricies adipiscing pulvinar elit libero", "createdAt": 1680374333000}' to topic='twitter-topic' with key '3039736048223185408'
2023-04-01 13:39:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:03 -0500 2023","id":"2111654477227039450","text":"massa lectus Lorem conque yltricies magna Kafka Lorem sit dolor dolor","user":{"id":"5875719550847568958"}}
2023-04-01 13:39:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa lectus Lorem conque yltricies magna Kafka Lorem sit dolor dolor and sending to kafka topic twitter-topic
2023-04-01 13:39:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5875719550847568958, "id": 2111654477227039450, "text": "massa lectus Lorem conque yltricies magna Kafka Lorem sit dolor dolor", "createdAt": 1680374343000}' to topic='twitter-topic' with key '2111654477227039450'
2023-04-01 13:39:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:13 -0500 2023","id":"7182751194387874805","text":"porttitor magna pulvinar posuere Java ipsum consectetuer consectetuer","user":{"id":"7757019873728454997"}}
2023-04-01 13:39:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor magna pulvinar posuere Java ipsum consectetuer consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:39:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7757019873728454997, "id": 7182751194387874805, "text": "porttitor magna pulvinar posuere Java ipsum consectetuer consectetuer", "createdAt": 1680374353000}' to topic='twitter-topic' with key '7182751194387874805'
2023-04-01 13:39:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:23 -0500 2023","id":"3428247443832080023","text":"conque consectetuer Maecenas Kafka dolor purus","user":{"id":"9218179300188618842"}}
2023-04-01 13:39:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque consectetuer Maecenas Kafka dolor purus and sending to kafka topic twitter-topic
2023-04-01 13:39:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9218179300188618842, "id": 3428247443832080023, "text": "conque consectetuer Maecenas Kafka dolor purus", "createdAt": 1680374363000}' to topic='twitter-topic' with key '3428247443832080023'
2023-04-01 13:39:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:33 -0500 2023","id":"2581208176533149603","text":"elit yltricies dolor malesuada Lorem conque Elasticsearch posuere amet libero sed","user":{"id":"6846403364336733371"}}
2023-04-01 13:39:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit yltricies dolor malesuada Lorem conque Elasticsearch posuere amet libero sed and sending to kafka topic twitter-topic
2023-04-01 13:39:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6846403364336733371, "id": 2581208176533149603, "text": "elit yltricies dolor malesuada Lorem conque Elasticsearch posuere amet libero sed", "createdAt": 1680374373000}' to topic='twitter-topic' with key '2581208176533149603'
2023-04-01 13:39:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:43 -0500 2023","id":"7243537777129801539","text":"purus purus posuere amet pulvinar massa lectus elit Elasticsearch purus adipiscing mara purus amet conque","user":{"id":"3790357535951683986"}}
2023-04-01 13:39:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus purus posuere amet pulvinar massa lectus elit Elasticsearch purus adipiscing mara purus amet conque and sending to kafka topic twitter-topic
2023-04-01 13:39:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3790357535951683986, "id": 7243537777129801539, "text": "purus purus posuere amet pulvinar massa lectus elit Elasticsearch purus adipiscing mara purus amet conque", "createdAt": 1680374383000}' to topic='twitter-topic' with key '7243537777129801539'
2023-04-01 13:39:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:39:53 -0500 2023","id":"6149143181208808281","text":"magna Lorem purus Lorem sit libero Elasticsearch lectus Maecenas pulvinar Maecenas mara","user":{"id":"5423873331928758949"}}
2023-04-01 13:39:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna Lorem purus Lorem sit libero Elasticsearch lectus Maecenas pulvinar Maecenas mara and sending to kafka topic twitter-topic
2023-04-01 13:39:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5423873331928758949, "id": 6149143181208808281, "text": "magna Lorem purus Lorem sit libero Elasticsearch lectus Maecenas pulvinar Maecenas mara", "createdAt": 1680374393000}' to topic='twitter-topic' with key '6149143181208808281'
2023-04-01 13:40:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:03 -0500 2023","id":"2920886860875670135","text":"posuere elit magna ipsum yltricies sed yltricies dolor Kafka consectetuer malesuada sit amet libero ipsum lectus","user":{"id":"5107287636100598888"}}
2023-04-01 13:40:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere elit magna ipsum yltricies sed yltricies dolor Kafka consectetuer malesuada sit amet libero ipsum lectus and sending to kafka topic twitter-topic
2023-04-01 13:40:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5107287636100598888, "id": 2920886860875670135, "text": "posuere elit magna ipsum yltricies sed yltricies dolor Kafka consectetuer malesuada sit amet libero ipsum lectus", "createdAt": 1680374403000}' to topic='twitter-topic' with key '2920886860875670135'
2023-04-01 13:40:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:13 -0500 2023","id":"1192518522677645262","text":"amet massa malesuada mara adipiscing dolor Elasticsearch consectetuer consectetuer elit massa","user":{"id":"2064831216148325789"}}
2023-04-01 13:40:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet massa malesuada mara adipiscing dolor Elasticsearch consectetuer consectetuer elit massa and sending to kafka topic twitter-topic
2023-04-01 13:40:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2064831216148325789, "id": 1192518522677645262, "text": "amet massa malesuada mara adipiscing dolor Elasticsearch consectetuer consectetuer elit massa", "createdAt": 1680374413000}' to topic='twitter-topic' with key '1192518522677645262'
2023-04-01 13:40:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:23 -0500 2023","id":"2219540321237163141","text":"ipsum amet yltricies pulvinar massa libero Maecenas Spring sed Lorem lectus consectetuer magna","user":{"id":"797847822319175627"}}
2023-04-01 13:40:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum amet yltricies pulvinar massa libero Maecenas Spring sed Lorem lectus consectetuer magna and sending to kafka topic twitter-topic
2023-04-01 13:40:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 797847822319175627, "id": 2219540321237163141, "text": "ipsum amet yltricies pulvinar massa libero Maecenas Spring sed Lorem lectus consectetuer magna", "createdAt": 1680374423000}' to topic='twitter-topic' with key '2219540321237163141'
2023-04-01 13:40:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:33 -0500 2023","id":"2042210218597341527","text":"mara massa magna porttitor Elasticsearch elit lectus","user":{"id":"2940031954277375702"}}
2023-04-01 13:40:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara massa magna porttitor Elasticsearch elit lectus and sending to kafka topic twitter-topic
2023-04-01 13:40:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2940031954277375702, "id": 2042210218597341527, "text": "mara massa magna porttitor Elasticsearch elit lectus", "createdAt": 1680374433000}' to topic='twitter-topic' with key '2042210218597341527'
2023-04-01 13:40:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:43 -0500 2023","id":"144189130509606552","text":"yltricies elit ipsum sed magna malesuada mara consectetuer Kafka purus consectetuer malesuada yltricies consectetuer adipiscing magna","user":{"id":"1274742368176501164"}}
2023-04-01 13:40:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies elit ipsum sed magna malesuada mara consectetuer Kafka purus consectetuer malesuada yltricies consectetuer adipiscing magna and sending to kafka topic twitter-topic
2023-04-01 13:40:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1274742368176501164, "id": 144189130509606552, "text": "yltricies elit ipsum sed magna malesuada mara consectetuer Kafka purus consectetuer malesuada yltricies consectetuer adipiscing magna", "createdAt": 1680374443000}' to topic='twitter-topic' with key '144189130509606552'
2023-04-01 13:40:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:40:53 -0500 2023","id":"669332313057518967","text":"posuere libero sed Maecenas yltricies Microservices malesuada magna purus elit","user":{"id":"640980658613066699"}}
2023-04-01 13:40:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere libero sed Maecenas yltricies Microservices malesuada magna purus elit and sending to kafka topic twitter-topic
2023-04-01 13:40:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 640980658613066699, "id": 669332313057518967, "text": "posuere libero sed Maecenas yltricies Microservices malesuada magna purus elit", "createdAt": 1680374453000}' to topic='twitter-topic' with key '669332313057518967'
2023-04-01 13:41:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:03 -0500 2023","id":"7059975645140904946","text":"magna ipsum magna yltricies amet dolor Kafka adipiscing Maecenas dolor ipsum Maecenas","user":{"id":"5914202838448175861"}}
2023-04-01 13:41:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna ipsum magna yltricies amet dolor Kafka adipiscing Maecenas dolor ipsum Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:41:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5914202838448175861, "id": 7059975645140904946, "text": "magna ipsum magna yltricies amet dolor Kafka adipiscing Maecenas dolor ipsum Maecenas", "createdAt": 1680374463000}' to topic='twitter-topic' with key '7059975645140904946'
2023-04-01 13:41:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:13 -0500 2023","id":"583636989127611705","text":"pulvinar libero libero conque pulvinar Lorem posuere conque Java posuere elit dolor mara magna magna","user":{"id":"7153090279960782649"}}
2023-04-01 13:41:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar libero libero conque pulvinar Lorem posuere conque Java posuere elit dolor mara magna magna and sending to kafka topic twitter-topic
2023-04-01 13:41:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7153090279960782649, "id": 583636989127611705, "text": "pulvinar libero libero conque pulvinar Lorem posuere conque Java posuere elit dolor mara magna magna", "createdAt": 1680374473000}' to topic='twitter-topic' with key '583636989127611705'
2023-04-01 13:41:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:23 -0500 2023","id":"3625191878804453986","text":"porttitor sit amet pulvinar dolor posuere sit Microservices dolor elit sed yltricies magna libero","user":{"id":"1853112896184456673"}}
2023-04-01 13:41:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor sit amet pulvinar dolor posuere sit Microservices dolor elit sed yltricies magna libero and sending to kafka topic twitter-topic
2023-04-01 13:41:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1853112896184456673, "id": 3625191878804453986, "text": "porttitor sit amet pulvinar dolor posuere sit Microservices dolor elit sed yltricies magna libero", "createdAt": 1680374483000}' to topic='twitter-topic' with key '3625191878804453986'
2023-04-01 13:41:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:33 -0500 2023","id":"3813933679306872029","text":"magna sed Lorem elit consectetuer elit Spring adipiscing posuere elit massa ipsum","user":{"id":"5666138150298379463"}}
2023-04-01 13:41:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna sed Lorem elit consectetuer elit Spring adipiscing posuere elit massa ipsum and sending to kafka topic twitter-topic
2023-04-01 13:41:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5666138150298379463, "id": 3813933679306872029, "text": "magna sed Lorem elit consectetuer elit Spring adipiscing posuere elit massa ipsum", "createdAt": 1680374493000}' to topic='twitter-topic' with key '3813933679306872029'
2023-04-01 13:41:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:43 -0500 2023","id":"864059210741117591","text":"malesuada pulvinar ipsum Kafka Maecenas pulvinar","user":{"id":"2381701585748652990"}}
2023-04-01 13:41:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada pulvinar ipsum Kafka Maecenas pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:41:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2381701585748652990, "id": 864059210741117591, "text": "malesuada pulvinar ipsum Kafka Maecenas pulvinar", "createdAt": 1680374503000}' to topic='twitter-topic' with key '864059210741117591'
2023-04-01 13:41:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:41:53 -0500 2023","id":"2655605160183254594","text":"mara Maecenas libero amet magna ipsum Java consectetuer elit malesuada sit","user":{"id":"6963521580513243511"}}
2023-04-01 13:41:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara Maecenas libero amet magna ipsum Java consectetuer elit malesuada sit and sending to kafka topic twitter-topic
2023-04-01 13:41:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6963521580513243511, "id": 2655605160183254594, "text": "mara Maecenas libero amet magna ipsum Java consectetuer elit malesuada sit", "createdAt": 1680374513000}' to topic='twitter-topic' with key '2655605160183254594'
2023-04-01 13:42:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:03 -0500 2023","id":"8871080265890334931","text":"malesuada elit sit libero conque mara lectus Microservices Maecenas sed yltricies massa magna massa","user":{"id":"9078221794723111892"}}
2023-04-01 13:42:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada elit sit libero conque mara lectus Microservices Maecenas sed yltricies massa magna massa and sending to kafka topic twitter-topic
2023-04-01 13:42:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9078221794723111892, "id": 8871080265890334931, "text": "malesuada elit sit libero conque mara lectus Microservices Maecenas sed yltricies massa magna massa", "createdAt": 1680374523000}' to topic='twitter-topic' with key '8871080265890334931'
2023-04-01 13:42:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:13 -0500 2023","id":"8885106705254078575","text":"magna amet yltricies Elasticsearch ipsum amet","user":{"id":"3227797958986395514"}}
2023-04-01 13:42:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna amet yltricies Elasticsearch ipsum amet and sending to kafka topic twitter-topic
2023-04-01 13:42:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3227797958986395514, "id": 8885106705254078575, "text": "magna amet yltricies Elasticsearch ipsum amet", "createdAt": 1680374533000}' to topic='twitter-topic' with key '8885106705254078575'
2023-04-01 13:42:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:23 -0500 2023","id":"3285898649678019162","text":"lectus conque massa libero Microservices mara yltricies sed","user":{"id":"5164482736487336460"}}
2023-04-01 13:42:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus conque massa libero Microservices mara yltricies sed and sending to kafka topic twitter-topic
2023-04-01 13:42:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5164482736487336460, "id": 3285898649678019162, "text": "lectus conque massa libero Microservices mara yltricies sed", "createdAt": 1680374543000}' to topic='twitter-topic' with key '3285898649678019162'
2023-04-01 13:42:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:33 -0500 2023","id":"653261633295573491","text":"Maecenas lectus magna posuere Microservices lectus purus","user":{"id":"3564391662506686108"}}
2023-04-01 13:42:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas lectus magna posuere Microservices lectus purus and sending to kafka topic twitter-topic
2023-04-01 13:42:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3564391662506686108, "id": 653261633295573491, "text": "Maecenas lectus magna posuere Microservices lectus purus", "createdAt": 1680374553000}' to topic='twitter-topic' with key '653261633295573491'
2023-04-01 13:42:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:43 -0500 2023","id":"2581291866933483935","text":"conque purus amet Java pulvinar massa","user":{"id":"245772623237959405"}}
2023-04-01 13:42:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque purus amet Java pulvinar massa and sending to kafka topic twitter-topic
2023-04-01 13:42:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 245772623237959405, "id": 2581291866933483935, "text": "conque purus amet Java pulvinar massa", "createdAt": 1680374563000}' to topic='twitter-topic' with key '2581291866933483935'
2023-04-01 13:42:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:42:53 -0500 2023","id":"2514423201633724117","text":"Maecenas lectus Maecenas amet porttitor Elasticsearch ipsum dolor consectetuer","user":{"id":"4315043972796528049"}}
2023-04-01 13:42:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas lectus Maecenas amet porttitor Elasticsearch ipsum dolor consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:42:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4315043972796528049, "id": 2514423201633724117, "text": "Maecenas lectus Maecenas amet porttitor Elasticsearch ipsum dolor consectetuer", "createdAt": 1680374573000}' to topic='twitter-topic' with key '2514423201633724117'
2023-04-01 13:43:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:03 -0500 2023","id":"3730237110818723343","text":"sit conque conque sed magna massa mara Microservices libero Lorem conque purus massa libero","user":{"id":"4058474883842998142"}}
2023-04-01 13:43:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit conque conque sed magna massa mara Microservices libero Lorem conque purus massa libero and sending to kafka topic twitter-topic
2023-04-01 13:43:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4058474883842998142, "id": 3730237110818723343, "text": "sit conque conque sed magna massa mara Microservices libero Lorem conque purus massa libero", "createdAt": 1680374583000}' to topic='twitter-topic' with key '3730237110818723343'
2023-04-01 13:43:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:13 -0500 2023","id":"4169639088518628657","text":"lectus purus dolor sit amet lectus mara malesuada Spring ipsum elit lectus mara amet mara","user":{"id":"6448951547136328884"}}
2023-04-01 13:43:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus dolor sit amet lectus mara malesuada Spring ipsum elit lectus mara amet mara and sending to kafka topic twitter-topic
2023-04-01 13:43:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6448951547136328884, "id": 4169639088518628657, "text": "lectus purus dolor sit amet lectus mara malesuada Spring ipsum elit lectus mara amet mara", "createdAt": 1680374593000}' to topic='twitter-topic' with key '4169639088518628657'
2023-04-01 13:43:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:23 -0500 2023","id":"7483308424696546558","text":"amet dolor consectetuer sit porttitor elit lectus Spring porttitor Maecenas sed adipiscing pulvinar","user":{"id":"5681048962307876356"}}
2023-04-01 13:43:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet dolor consectetuer sit porttitor elit lectus Spring porttitor Maecenas sed adipiscing pulvinar and sending to kafka topic twitter-topic
2023-04-01 13:43:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5681048962307876356, "id": 7483308424696546558, "text": "amet dolor consectetuer sit porttitor elit lectus Spring porttitor Maecenas sed adipiscing pulvinar", "createdAt": 1680374603000}' to topic='twitter-topic' with key '7483308424696546558'
2023-04-01 13:43:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:33 -0500 2023","id":"7545487836702233926","text":"porttitor massa sit purus Lorem sit elit libero Elasticsearch elit consectetuer yltricies amet malesuada mara","user":{"id":"2124441219549050686"}}
2023-04-01 13:43:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor massa sit purus Lorem sit elit libero Elasticsearch elit consectetuer yltricies amet malesuada mara and sending to kafka topic twitter-topic
2023-04-01 13:43:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2124441219549050686, "id": 7545487836702233926, "text": "porttitor massa sit purus Lorem sit elit libero Elasticsearch elit consectetuer yltricies amet malesuada mara", "createdAt": 1680374613000}' to topic='twitter-topic' with key '7545487836702233926'
2023-04-01 13:43:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:43 -0500 2023","id":"4837972159371472986","text":"dolor mara consectetuer pulvinar conque magna conque Kafka sit sed consectetuer sed ipsum","user":{"id":"1951100933469873102"}}
2023-04-01 13:43:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor mara consectetuer pulvinar conque magna conque Kafka sit sed consectetuer sed ipsum and sending to kafka topic twitter-topic
2023-04-01 13:43:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1951100933469873102, "id": 4837972159371472986, "text": "dolor mara consectetuer pulvinar conque magna conque Kafka sit sed consectetuer sed ipsum", "createdAt": 1680374623000}' to topic='twitter-topic' with key '4837972159371472986'
2023-04-01 13:43:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:43:53 -0500 2023","id":"8680891945482117469","text":"ipsum magna yltricies magna magna posuere magna sit Microservices yltricies purus sit pulvinar elit adipiscing Lorem","user":{"id":"4328123340083550817"}}
2023-04-01 13:43:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum magna yltricies magna magna posuere magna sit Microservices yltricies purus sit pulvinar elit adipiscing Lorem and sending to kafka topic twitter-topic
2023-04-01 13:43:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4328123340083550817, "id": 8680891945482117469, "text": "ipsum magna yltricies magna magna posuere magna sit Microservices yltricies purus sit pulvinar elit adipiscing Lorem", "createdAt": 1680374633000}' to topic='twitter-topic' with key '8680891945482117469'
2023-04-01 13:44:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:03 -0500 2023","id":"8241626871585426046","text":"Maecenas pulvinar ipsum mara adipiscing dolor malesuada Elasticsearch malesuada Maecenas malesuada mara adipiscing","user":{"id":"1444541471152071518"}}
2023-04-01 13:44:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas pulvinar ipsum mara adipiscing dolor malesuada Elasticsearch malesuada Maecenas malesuada mara adipiscing and sending to kafka topic twitter-topic
2023-04-01 13:44:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1444541471152071518, "id": 8241626871585426046, "text": "Maecenas pulvinar ipsum mara adipiscing dolor malesuada Elasticsearch malesuada Maecenas malesuada mara adipiscing", "createdAt": 1680374643000}' to topic='twitter-topic' with key '8241626871585426046'
2023-04-01 13:44:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:13 -0500 2023","id":"6154944045987992925","text":"conque libero porttitor purus libero Kafka sed sit conque","user":{"id":"7794218129466804449"}}
2023-04-01 13:44:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque libero porttitor purus libero Kafka sed sit conque and sending to kafka topic twitter-topic
2023-04-01 13:44:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7794218129466804449, "id": 6154944045987992925, "text": "conque libero porttitor purus libero Kafka sed sit conque", "createdAt": 1680374653000}' to topic='twitter-topic' with key '6154944045987992925'
2023-04-01 13:44:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:23 -0500 2023","id":"4250993811434009365","text":"mara magna conque Spring massa sed","user":{"id":"3520253482916001932"}}
2023-04-01 13:44:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara magna conque Spring massa sed and sending to kafka topic twitter-topic
2023-04-01 13:44:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3520253482916001932, "id": 4250993811434009365, "text": "mara magna conque Spring massa sed", "createdAt": 1680374663000}' to topic='twitter-topic' with key '4250993811434009365'
2023-04-01 13:44:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:33 -0500 2023","id":"4976221451354481631","text":"sed elit malesuada ipsum ipsum Lorem libero posuere Elasticsearch Lorem mara conque sit porttitor dolor","user":{"id":"1841421039044756479"}}
2023-04-01 13:44:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed elit malesuada ipsum ipsum Lorem libero posuere Elasticsearch Lorem mara conque sit porttitor dolor and sending to kafka topic twitter-topic
2023-04-01 13:44:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1841421039044756479, "id": 4976221451354481631, "text": "sed elit malesuada ipsum ipsum Lorem libero posuere Elasticsearch Lorem mara conque sit porttitor dolor", "createdAt": 1680374673000}' to topic='twitter-topic' with key '4976221451354481631'
2023-04-01 13:44:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:43 -0500 2023","id":"2583190373936283550","text":"lectus posuere massa libero lectus elit massa sit Kafka sed posuere magna posuere massa posuere","user":{"id":"5463798997957769432"}}
2023-04-01 13:44:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus posuere massa libero lectus elit massa sit Kafka sed posuere magna posuere massa posuere and sending to kafka topic twitter-topic
2023-04-01 13:44:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5463798997957769432, "id": 2583190373936283550, "text": "lectus posuere massa libero lectus elit massa sit Kafka sed posuere magna posuere massa posuere", "createdAt": 1680374683000}' to topic='twitter-topic' with key '2583190373936283550'
2023-04-01 13:44:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:44:53 -0500 2023","id":"6823097755685208499","text":"lectus Lorem consectetuer sit porttitor Lorem dolor sed Kafka purus consectetuer posuere massa lectus malesuada yltricies","user":{"id":"8605161382533950169"}}
2023-04-01 13:44:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus Lorem consectetuer sit porttitor Lorem dolor sed Kafka purus consectetuer posuere massa lectus malesuada yltricies and sending to kafka topic twitter-topic
2023-04-01 13:44:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8605161382533950169, "id": 6823097755685208499, "text": "lectus Lorem consectetuer sit porttitor Lorem dolor sed Kafka purus consectetuer posuere massa lectus malesuada yltricies", "createdAt": 1680374693000}' to topic='twitter-topic' with key '6823097755685208499'
2023-04-01 13:45:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:03 -0500 2023","id":"8125803785138379002","text":"sit yltricies purus amet adipiscing Spring conque malesuada lectus","user":{"id":"6678078081626901455"}}
2023-04-01 13:45:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit yltricies purus amet adipiscing Spring conque malesuada lectus and sending to kafka topic twitter-topic
2023-04-01 13:45:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6678078081626901455, "id": 8125803785138379002, "text": "sit yltricies purus amet adipiscing Spring conque malesuada lectus", "createdAt": 1680374703000}' to topic='twitter-topic' with key '8125803785138379002'
2023-04-01 13:45:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:13 -0500 2023","id":"6225742942713370014","text":"lectus sit Lorem consectetuer adipiscing yltricies Java yltricies lectus lectus consectetuer libero","user":{"id":"3139643191132340543"}}
2023-04-01 13:45:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sit Lorem consectetuer adipiscing yltricies Java yltricies lectus lectus consectetuer libero and sending to kafka topic twitter-topic
2023-04-01 13:45:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3139643191132340543, "id": 6225742942713370014, "text": "lectus sit Lorem consectetuer adipiscing yltricies Java yltricies lectus lectus consectetuer libero", "createdAt": 1680374713000}' to topic='twitter-topic' with key '6225742942713370014'
2023-04-01 13:45:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:23 -0500 2023","id":"4017360179908440600","text":"ipsum sed ipsum purus amet magna malesuada posuere Elasticsearch libero lectus lectus Lorem elit elit Lorem","user":{"id":"6747568106785348911"}}
2023-04-01 13:45:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum sed ipsum purus amet magna malesuada posuere Elasticsearch libero lectus lectus Lorem elit elit Lorem and sending to kafka topic twitter-topic
2023-04-01 13:45:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6747568106785348911, "id": 4017360179908440600, "text": "ipsum sed ipsum purus amet magna malesuada posuere Elasticsearch libero lectus lectus Lorem elit elit Lorem", "createdAt": 1680374723000}' to topic='twitter-topic' with key '4017360179908440600'
2023-04-01 13:45:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:33 -0500 2023","id":"4153551587850640812","text":"massa ipsum libero elit pulvinar consectetuer conque purus Elasticsearch massa conque sit sit adipiscing magna","user":{"id":"7990887944648451685"}}
2023-04-01 13:45:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa ipsum libero elit pulvinar consectetuer conque purus Elasticsearch massa conque sit sit adipiscing magna and sending to kafka topic twitter-topic
2023-04-01 13:45:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7990887944648451685, "id": 4153551587850640812, "text": "massa ipsum libero elit pulvinar consectetuer conque purus Elasticsearch massa conque sit sit adipiscing magna", "createdAt": 1680374733000}' to topic='twitter-topic' with key '4153551587850640812'
2023-04-01 13:45:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:43 -0500 2023","id":"7912822048817149853","text":"magna magna yltricies mara conque posuere Maecenas porttitor Microservices dolor malesuada posuere purus sit adipiscing magna","user":{"id":"7421867317255505478"}}
2023-04-01 13:45:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna magna yltricies mara conque posuere Maecenas porttitor Microservices dolor malesuada posuere purus sit adipiscing magna and sending to kafka topic twitter-topic
2023-04-01 13:45:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7421867317255505478, "id": 7912822048817149853, "text": "magna magna yltricies mara conque posuere Maecenas porttitor Microservices dolor malesuada posuere purus sit adipiscing magna", "createdAt": 1680374743000}' to topic='twitter-topic' with key '7912822048817149853'
2023-04-01 13:45:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:45:53 -0500 2023","id":"776576261568177026","text":"mara yltricies sit conque Spring ipsum sed","user":{"id":"3519971968274469923"}}
2023-04-01 13:45:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara yltricies sit conque Spring ipsum sed and sending to kafka topic twitter-topic
2023-04-01 13:45:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3519971968274469923, "id": 776576261568177026, "text": "mara yltricies sit conque Spring ipsum sed", "createdAt": 1680374753000}' to topic='twitter-topic' with key '776576261568177026'
2023-04-01 13:46:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:03 -0500 2023","id":"8719609351474837127","text":"lectus purus Lorem pulvinar sit lectus Spring magna porttitor magna magna","user":{"id":"5262571972891373208"}}
2023-04-01 13:46:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus Lorem pulvinar sit lectus Spring magna porttitor magna magna and sending to kafka topic twitter-topic
2023-04-01 13:46:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5262571972891373208, "id": 8719609351474837127, "text": "lectus purus Lorem pulvinar sit lectus Spring magna porttitor magna magna", "createdAt": 1680374763000}' to topic='twitter-topic' with key '8719609351474837127'
2023-04-01 13:46:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:13 -0500 2023","id":"3363424027250678971","text":"amet posuere consectetuer Maecenas porttitor Kafka malesuada elit ipsum","user":{"id":"9047760895118685105"}}
2023-04-01 13:46:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet posuere consectetuer Maecenas porttitor Kafka malesuada elit ipsum and sending to kafka topic twitter-topic
2023-04-01 13:46:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9047760895118685105, "id": 3363424027250678971, "text": "amet posuere consectetuer Maecenas porttitor Kafka malesuada elit ipsum", "createdAt": 1680374773000}' to topic='twitter-topic' with key '3363424027250678971'
2023-04-01 13:46:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:23 -0500 2023","id":"4358229255369478422","text":"mara massa libero ipsum Kafka Lorem massa","user":{"id":"7930633048276253306"}}
2023-04-01 13:46:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara massa libero ipsum Kafka Lorem massa and sending to kafka topic twitter-topic
2023-04-01 13:46:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7930633048276253306, "id": 4358229255369478422, "text": "mara massa libero ipsum Kafka Lorem massa", "createdAt": 1680374783000}' to topic='twitter-topic' with key '4358229255369478422'
2023-04-01 13:46:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:33 -0500 2023","id":"3911865188308121378","text":"purus libero elit lectus lectus yltricies elit malesuada Microservices consectetuer conque libero consectetuer amet ipsum","user":{"id":"5535580489800607441"}}
2023-04-01 13:46:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus libero elit lectus lectus yltricies elit malesuada Microservices consectetuer conque libero consectetuer amet ipsum and sending to kafka topic twitter-topic
2023-04-01 13:46:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5535580489800607441, "id": 3911865188308121378, "text": "purus libero elit lectus lectus yltricies elit malesuada Microservices consectetuer conque libero consectetuer amet ipsum", "createdAt": 1680374793000}' to topic='twitter-topic' with key '3911865188308121378'
2023-04-01 13:46:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:43 -0500 2023","id":"8195563214463176578","text":"mara massa libero Kafka ipsum massa","user":{"id":"6516008754309419524"}}
2023-04-01 13:46:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara massa libero Kafka ipsum massa and sending to kafka topic twitter-topic
2023-04-01 13:46:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6516008754309419524, "id": 8195563214463176578, "text": "mara massa libero Kafka ipsum massa", "createdAt": 1680374803000}' to topic='twitter-topic' with key '8195563214463176578'
2023-04-01 13:46:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:46:53 -0500 2023","id":"4409424392335538588","text":"posuere magna libero mara yltricies consectetuer Lorem lectus Java lectus mara amet magna amet amet","user":{"id":"7762126280380570280"}}
2023-04-01 13:46:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere magna libero mara yltricies consectetuer Lorem lectus Java lectus mara amet magna amet amet and sending to kafka topic twitter-topic
2023-04-01 13:46:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7762126280380570280, "id": 4409424392335538588, "text": "posuere magna libero mara yltricies consectetuer Lorem lectus Java lectus mara amet magna amet amet", "createdAt": 1680374813000}' to topic='twitter-topic' with key '4409424392335538588'
2023-04-01 13:47:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:03 -0500 2023","id":"3045996231218731257","text":"magna sit sed pulvinar dolor ipsum Java consectetuer elit malesuada Lorem consectetuer","user":{"id":"1711895833289015355"}}
2023-04-01 13:47:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna sit sed pulvinar dolor ipsum Java consectetuer elit malesuada Lorem consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:47:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1711895833289015355, "id": 3045996231218731257, "text": "magna sit sed pulvinar dolor ipsum Java consectetuer elit malesuada Lorem consectetuer", "createdAt": 1680374823000}' to topic='twitter-topic' with key '3045996231218731257'
2023-04-01 13:47:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:13 -0500 2023","id":"4947559861346481834","text":"consectetuer posuere lectus Kafka pulvinar dolor","user":{"id":"1505935212779073780"}}
2023-04-01 13:47:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer posuere lectus Kafka pulvinar dolor and sending to kafka topic twitter-topic
2023-04-01 13:47:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1505935212779073780, "id": 4947559861346481834, "text": "consectetuer posuere lectus Kafka pulvinar dolor", "createdAt": 1680374833000}' to topic='twitter-topic' with key '4947559861346481834'
2023-04-01 13:47:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:23 -0500 2023","id":"6171158543134823820","text":"sit ipsum conque magna amet posuere Java posuere consectetuer lectus yltricies mara","user":{"id":"6042587524131874321"}}
2023-04-01 13:47:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit ipsum conque magna amet posuere Java posuere consectetuer lectus yltricies mara and sending to kafka topic twitter-topic
2023-04-01 13:47:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6042587524131874321, "id": 6171158543134823820, "text": "sit ipsum conque magna amet posuere Java posuere consectetuer lectus yltricies mara", "createdAt": 1680374843000}' to topic='twitter-topic' with key '6171158543134823820'
2023-04-01 13:47:33 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:33 -0500 2023","id":"4422552187421161311","text":"consectetuer massa sed mara purus magna mara consectetuer Kafka dolor posuere yltricies malesuada malesuada elit","user":{"id":"8388707128925611060"}}
2023-04-01 13:47:33 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer massa sed mara purus magna mara consectetuer Kafka dolor posuere yltricies malesuada malesuada elit and sending to kafka topic twitter-topic
2023-04-01 13:47:33 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8388707128925611060, "id": 4422552187421161311, "text": "consectetuer massa sed mara purus magna mara consectetuer Kafka dolor posuere yltricies malesuada malesuada elit", "createdAt": 1680374853000}' to topic='twitter-topic' with key '4422552187421161311'
2023-04-01 13:47:43 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:43 -0500 2023","id":"8339509255395819285","text":"sit dolor ipsum massa yltricies Microservices sit sed massa sit","user":{"id":"1234122056619556569"}}
2023-04-01 13:47:43 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit dolor ipsum massa yltricies Microservices sit sed massa sit and sending to kafka topic twitter-topic
2023-04-01 13:47:43 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1234122056619556569, "id": 8339509255395819285, "text": "sit dolor ipsum massa yltricies Microservices sit sed massa sit", "createdAt": 1680374863000}' to topic='twitter-topic' with key '8339509255395819285'
2023-04-01 13:47:53 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:47:53 -0500 2023","id":"7453425471084648112","text":"lectus sed posuere consectetuer sit Lorem purus Spring Maecenas adipiscing Lorem yltricies Maecenas","user":{"id":"4839628451197584126"}}
2023-04-01 13:47:53 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sed posuere consectetuer sit Lorem purus Spring Maecenas adipiscing Lorem yltricies Maecenas and sending to kafka topic twitter-topic
2023-04-01 13:47:53 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4839628451197584126, "id": 7453425471084648112, "text": "lectus sed posuere consectetuer sit Lorem purus Spring Maecenas adipiscing Lorem yltricies Maecenas", "createdAt": 1680374873000}' to topic='twitter-topic' with key '7453425471084648112'
2023-04-01 13:48:03 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:03 -0500 2023","id":"5191889091579994403","text":"magna pulvinar amet elit dolor massa consectetuer dolor Spring consectetuer Lorem pulvinar sit lectus lectus","user":{"id":"8446478321293878552"}}
2023-04-01 13:48:03 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna pulvinar amet elit dolor massa consectetuer dolor Spring consectetuer Lorem pulvinar sit lectus lectus and sending to kafka topic twitter-topic
2023-04-01 13:48:03 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8446478321293878552, "id": 5191889091579994403, "text": "magna pulvinar amet elit dolor massa consectetuer dolor Spring consectetuer Lorem pulvinar sit lectus lectus", "createdAt": 1680374883000}' to topic='twitter-topic' with key '5191889091579994403'
2023-04-01 13:48:13 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:13 -0500 2023","id":"6191628837910944291","text":"lectus posuere amet adipiscing Elasticsearch posuere ipsum conque","user":{"id":"3473968227721637686"}}
2023-04-01 13:48:13 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus posuere amet adipiscing Elasticsearch posuere ipsum conque and sending to kafka topic twitter-topic
2023-04-01 13:48:13 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3473968227721637686, "id": 6191628837910944291, "text": "lectus posuere amet adipiscing Elasticsearch posuere ipsum conque", "createdAt": 1680374893000}' to topic='twitter-topic' with key '6191628837910944291'
2023-04-01 13:48:23 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:23 -0500 2023","id":"8934276213698433672","text":"posuere posuere magna Maecenas mara Elasticsearch libero amet posuere","user":{"id":"3957760321055822333"}}
2023-04-01 13:48:23 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere posuere magna Maecenas mara Elasticsearch libero amet posuere and sending to kafka topic twitter-topic
2023-04-01 13:48:23 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3957760321055822333, "id": 8934276213698433672, "text": "posuere posuere magna Maecenas mara Elasticsearch libero amet posuere", "createdAt": 1680374903000}' to topic='twitter-topic' with key '8934276213698433672'
2023-04-01 13:48:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:34 -0500 2023","id":"8104051469545305831","text":"yltricies pulvinar massa conque Elasticsearch pulvinar sed","user":{"id":"3688725067206955398"}}
2023-04-01 13:48:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies pulvinar massa conque Elasticsearch pulvinar sed and sending to kafka topic twitter-topic
2023-04-01 13:48:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3688725067206955398, "id": 8104051469545305831, "text": "yltricies pulvinar massa conque Elasticsearch pulvinar sed", "createdAt": 1680374914000}' to topic='twitter-topic' with key '8104051469545305831'
2023-04-01 13:48:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:44 -0500 2023","id":"8261070478839894843","text":"porttitor malesuada adipiscing mara Spring sed conque massa","user":{"id":"5246979994737605985"}}
2023-04-01 13:48:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor malesuada adipiscing mara Spring sed conque massa and sending to kafka topic twitter-topic
2023-04-01 13:48:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5246979994737605985, "id": 8261070478839894843, "text": "porttitor malesuada adipiscing mara Spring sed conque massa", "createdAt": 1680374924000}' to topic='twitter-topic' with key '8261070478839894843'
2023-04-01 13:48:54 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:48:54 -0500 2023","id":"4360004625018179539","text":"dolor consectetuer consectetuer Lorem ipsum adipiscing lectus consectetuer Elasticsearch sit porttitor amet mara amet sed dolor","user":{"id":"8039240209900239089"}}
2023-04-01 13:48:54 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor consectetuer consectetuer Lorem ipsum adipiscing lectus consectetuer Elasticsearch sit porttitor amet mara amet sed dolor and sending to kafka topic twitter-topic
2023-04-01 13:48:54 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8039240209900239089, "id": 4360004625018179539, "text": "dolor consectetuer consectetuer Lorem ipsum adipiscing lectus consectetuer Elasticsearch sit porttitor amet mara amet sed dolor", "createdAt": 1680374934000}' to topic='twitter-topic' with key '4360004625018179539'
2023-04-01 13:49:04 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:04 -0500 2023","id":"5313239858940152353","text":"elit libero lectus posuere Lorem sed sit elit Kafka adipiscing posuere porttitor dolor massa dolor yltricies","user":{"id":"310194842896066770"}}
2023-04-01 13:49:04 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit libero lectus posuere Lorem sed sit elit Kafka adipiscing posuere porttitor dolor massa dolor yltricies and sending to kafka topic twitter-topic
2023-04-01 13:49:04 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 310194842896066770, "id": 5313239858940152353, "text": "elit libero lectus posuere Lorem sed sit elit Kafka adipiscing posuere porttitor dolor massa dolor yltricies", "createdAt": 1680374944000}' to topic='twitter-topic' with key '5313239858940152353'
2023-04-01 13:49:14 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:14 -0500 2023","id":"6377156404385959030","text":"Lorem conque Maecenas magna Elasticsearch ipsum porttitor ipsum","user":{"id":"6059765632670456772"}}
2023-04-01 13:49:14 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem conque Maecenas magna Elasticsearch ipsum porttitor ipsum and sending to kafka topic twitter-topic
2023-04-01 13:49:14 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6059765632670456772, "id": 6377156404385959030, "text": "Lorem conque Maecenas magna Elasticsearch ipsum porttitor ipsum", "createdAt": 1680374954000}' to topic='twitter-topic' with key '6377156404385959030'
2023-04-01 13:49:24 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:24 -0500 2023","id":"6854410400948038212","text":"consectetuer pulvinar sed massa conque yltricies Kafka dolor amet libero mara","user":{"id":"658069375780771546"}}
2023-04-01 13:49:24 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer pulvinar sed massa conque yltricies Kafka dolor amet libero mara and sending to kafka topic twitter-topic
2023-04-01 13:49:24 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 658069375780771546, "id": 6854410400948038212, "text": "consectetuer pulvinar sed massa conque yltricies Kafka dolor amet libero mara", "createdAt": 1680374964000}' to topic='twitter-topic' with key '6854410400948038212'
2023-04-01 13:49:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:34 -0500 2023","id":"4691373400071890139","text":"pulvinar massa mara mara pulvinar conque ipsum pulvinar Elasticsearch porttitor posuere yltricies consectetuer elit mara Lorem","user":{"id":"6813481702811389434"}}
2023-04-01 13:49:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar massa mara mara pulvinar conque ipsum pulvinar Elasticsearch porttitor posuere yltricies consectetuer elit mara Lorem and sending to kafka topic twitter-topic
2023-04-01 13:49:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6813481702811389434, "id": 4691373400071890139, "text": "pulvinar massa mara mara pulvinar conque ipsum pulvinar Elasticsearch porttitor posuere yltricies consectetuer elit mara Lorem", "createdAt": 1680374974000}' to topic='twitter-topic' with key '4691373400071890139'
2023-04-01 13:49:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:44 -0500 2023","id":"998787526829498804","text":"purus ipsum mara magna sit porttitor Elasticsearch adipiscing elit purus amet mara","user":{"id":"6080331956162041011"}}
2023-04-01 13:49:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus ipsum mara magna sit porttitor Elasticsearch adipiscing elit purus amet mara and sending to kafka topic twitter-topic
2023-04-01 13:49:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6080331956162041011, "id": 998787526829498804, "text": "purus ipsum mara magna sit porttitor Elasticsearch adipiscing elit purus amet mara", "createdAt": 1680374984000}' to topic='twitter-topic' with key '998787526829498804'
2023-04-01 13:49:54 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:49:54 -0500 2023","id":"7872848825981118244","text":"lectus Lorem mara lectus Spring ipsum pulvinar consectetuer","user":{"id":"8532542084533323652"}}
2023-04-01 13:49:54 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus Lorem mara lectus Spring ipsum pulvinar consectetuer and sending to kafka topic twitter-topic
2023-04-01 13:49:54 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8532542084533323652, "id": 7872848825981118244, "text": "lectus Lorem mara lectus Spring ipsum pulvinar consectetuer", "createdAt": 1680374994000}' to topic='twitter-topic' with key '7872848825981118244'
2023-04-01 13:50:04 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:04 -0500 2023","id":"293083136247716477","text":"libero ipsum libero magna libero Maecenas sed Microservices sit libero pulvinar consectetuer Maecenas posuere","user":{"id":"3355248672654900609"}}
2023-04-01 13:50:04 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero ipsum libero magna libero Maecenas sed Microservices sit libero pulvinar consectetuer Maecenas posuere and sending to kafka topic twitter-topic
2023-04-01 13:50:04 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3355248672654900609, "id": 293083136247716477, "text": "libero ipsum libero magna libero Maecenas sed Microservices sit libero pulvinar consectetuer Maecenas posuere", "createdAt": 1680375004000}' to topic='twitter-topic' with key '293083136247716477'
2023-04-01 13:50:14 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:14 -0500 2023","id":"1098519311996054948","text":"yltricies libero adipiscing pulvinar Java pulvinar massa","user":{"id":"6239661056565577004"}}
2023-04-01 13:50:14 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies libero adipiscing pulvinar Java pulvinar massa and sending to kafka topic twitter-topic
2023-04-01 13:50:14 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6239661056565577004, "id": 1098519311996054948, "text": "yltricies libero adipiscing pulvinar Java pulvinar massa", "createdAt": 1680375014000}' to topic='twitter-topic' with key '1098519311996054948'
2023-04-01 13:50:24 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:24 -0500 2023","id":"4427418175081617505","text":"yltricies porttitor dolor pulvinar sit adipiscing amet Microservices sit yltricies Maecenas Maecenas dolor","user":{"id":"1414867976187609812"}}
2023-04-01 13:50:24 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies porttitor dolor pulvinar sit adipiscing amet Microservices sit yltricies Maecenas Maecenas dolor and sending to kafka topic twitter-topic
2023-04-01 13:50:24 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1414867976187609812, "id": 4427418175081617505, "text": "yltricies porttitor dolor pulvinar sit adipiscing amet Microservices sit yltricies Maecenas Maecenas dolor", "createdAt": 1680375024000}' to topic='twitter-topic' with key '4427418175081617505'
2023-04-01 13:50:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:34 -0500 2023","id":"6260880766748088312","text":"sed conque conque purus consectetuer lectus Kafka mara elit consectetuer malesuada porttitor","user":{"id":"7860216434580852395"}}
2023-04-01 13:50:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed conque conque purus consectetuer lectus Kafka mara elit consectetuer malesuada porttitor and sending to kafka topic twitter-topic
2023-04-01 13:50:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7860216434580852395, "id": 6260880766748088312, "text": "sed conque conque purus consectetuer lectus Kafka mara elit consectetuer malesuada porttitor", "createdAt": 1680375034000}' to topic='twitter-topic' with key '6260880766748088312'
2023-04-01 13:50:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:44 -0500 2023","id":"6548073251857801935","text":"sed adipiscing yltricies adipiscing Kafka massa conque libero","user":{"id":"7664256296362737544"}}
2023-04-01 13:50:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed adipiscing yltricies adipiscing Kafka massa conque libero and sending to kafka topic twitter-topic
2023-04-01 13:50:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7664256296362737544, "id": 6548073251857801935, "text": "sed adipiscing yltricies adipiscing Kafka massa conque libero", "createdAt": 1680375044000}' to topic='twitter-topic' with key '6548073251857801935'
2023-04-01 13:50:54 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:50:54 -0500 2023","id":"5158460668207640408","text":"posuere lectus amet posuere elit magna porttitor Elasticsearch libero lectus elit lectus Lorem posuere","user":{"id":"4038978983134072995"}}
2023-04-01 13:50:54 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere lectus amet posuere elit magna porttitor Elasticsearch libero lectus elit lectus Lorem posuere and sending to kafka topic twitter-topic
2023-04-01 13:50:54 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4038978983134072995, "id": 5158460668207640408, "text": "posuere lectus amet posuere elit magna porttitor Elasticsearch libero lectus elit lectus Lorem posuere", "createdAt": 1680375054000}' to topic='twitter-topic' with key '5158460668207640408'
2023-04-01 13:51:04 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:04 -0500 2023","id":"8607937166059179066","text":"sed Lorem pulvinar dolor mara elit Java mara pulvinar amet amet magna","user":{"id":"7375382945769371961"}}
2023-04-01 13:51:04 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed Lorem pulvinar dolor mara elit Java mara pulvinar amet amet magna and sending to kafka topic twitter-topic
2023-04-01 13:51:04 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7375382945769371961, "id": 8607937166059179066, "text": "sed Lorem pulvinar dolor mara elit Java mara pulvinar amet amet magna", "createdAt": 1680375064000}' to topic='twitter-topic' with key '8607937166059179066'
2023-04-01 13:51:14 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:14 -0500 2023","id":"1159143712733098563","text":"pulvinar Maecenas mara yltricies Lorem sit Java dolor adipiscing posuere purus","user":{"id":"7535058330200853187"}}
2023-04-01 13:51:14 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Maecenas mara yltricies Lorem sit Java dolor adipiscing posuere purus and sending to kafka topic twitter-topic
2023-04-01 13:51:14 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7535058330200853187, "id": 1159143712733098563, "text": "pulvinar Maecenas mara yltricies Lorem sit Java dolor adipiscing posuere purus", "createdAt": 1680375074000}' to topic='twitter-topic' with key '1159143712733098563'
2023-04-01 13:51:24 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:24 -0500 2023","id":"6998305207821751749","text":"libero malesuada magna mara porttitor malesuada purus Elasticsearch dolor consectetuer dolor malesuada mara","user":{"id":"1384035476127334482"}}
2023-04-01 13:51:24 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero malesuada magna mara porttitor malesuada purus Elasticsearch dolor consectetuer dolor malesuada mara and sending to kafka topic twitter-topic
2023-04-01 13:51:24 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1384035476127334482, "id": 6998305207821751749, "text": "libero malesuada magna mara porttitor malesuada purus Elasticsearch dolor consectetuer dolor malesuada mara", "createdAt": 1680375084000}' to topic='twitter-topic' with key '6998305207821751749'
2023-04-01 13:51:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:34 -0500 2023","id":"121795630065399397","text":"purus consectetuer ipsum lectus massa sit conque Java libero magna Maecenas massa sed","user":{"id":"898809417606549631"}}
2023-04-01 13:51:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus consectetuer ipsum lectus massa sit conque Java libero magna Maecenas massa sed and sending to kafka topic twitter-topic
2023-04-01 13:51:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 898809417606549631, "id": 121795630065399397, "text": "purus consectetuer ipsum lectus massa sit conque Java libero magna Maecenas massa sed", "createdAt": 1680375094000}' to topic='twitter-topic' with key '121795630065399397'
2023-04-01 13:51:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:44 -0500 2023","id":"3128568638095237527","text":"lectus dolor magna mara lectus sed dolor amet Microservices sed massa Lorem pulvinar massa lectus","user":{"id":"5072628372656391628"}}
2023-04-01 13:51:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus dolor magna mara lectus sed dolor amet Microservices sed massa Lorem pulvinar massa lectus and sending to kafka topic twitter-topic
2023-04-01 13:51:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5072628372656391628, "id": 3128568638095237527, "text": "lectus dolor magna mara lectus sed dolor amet Microservices sed massa Lorem pulvinar massa lectus", "createdAt": 1680375104000}' to topic='twitter-topic' with key '3128568638095237527'
2023-04-01 13:51:54 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:51:54 -0500 2023","id":"5814203972020316890","text":"elit sit sit dolor lectus elit Lorem Microservices magna yltricies elit lectus ipsum magna","user":{"id":"1598185283080896681"}}
2023-04-01 13:51:54 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit sit sit dolor lectus elit Lorem Microservices magna yltricies elit lectus ipsum magna and sending to kafka topic twitter-topic
2023-04-01 13:51:54 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1598185283080896681, "id": 5814203972020316890, "text": "elit sit sit dolor lectus elit Lorem Microservices magna yltricies elit lectus ipsum magna", "createdAt": 1680375114000}' to topic='twitter-topic' with key '5814203972020316890'
2023-04-01 13:52:04 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:04 -0500 2023","id":"5624075513524962232","text":"mara libero magna Lorem Elasticsearch yltricies purus","user":{"id":"1789025177434844349"}}
2023-04-01 13:52:04 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara libero magna Lorem Elasticsearch yltricies purus and sending to kafka topic twitter-topic
2023-04-01 13:52:04 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1789025177434844349, "id": 5624075513524962232, "text": "mara libero magna Lorem Elasticsearch yltricies purus", "createdAt": 1680375124000}' to topic='twitter-topic' with key '5624075513524962232'
2023-04-01 13:52:14 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:14 -0500 2023","id":"4611099586542534826","text":"porttitor amet malesuada amet adipiscing magna pulvinar dolor Microservices malesuada Maecenas massa posuere pulvinar mara","user":{"id":"3399883229439220735"}}
2023-04-01 13:52:14 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor amet malesuada amet adipiscing magna pulvinar dolor Microservices malesuada Maecenas massa posuere pulvinar mara and sending to kafka topic twitter-topic
2023-04-01 13:52:14 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3399883229439220735, "id": 4611099586542534826, "text": "porttitor amet malesuada amet adipiscing magna pulvinar dolor Microservices malesuada Maecenas massa posuere pulvinar mara", "createdAt": 1680375134000}' to topic='twitter-topic' with key '4611099586542534826'
2023-04-01 13:52:24 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:24 -0500 2023","id":"8062830822924352164","text":"elit conque sed ipsum magna sit elit sed Elasticsearch magna libero libero massa adipiscing dolor libero","user":{"id":"5417317335455114555"}}
2023-04-01 13:52:24 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit conque sed ipsum magna sit elit sed Elasticsearch magna libero libero massa adipiscing dolor libero and sending to kafka topic twitter-topic
2023-04-01 13:52:24 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5417317335455114555, "id": 8062830822924352164, "text": "elit conque sed ipsum magna sit elit sed Elasticsearch magna libero libero massa adipiscing dolor libero", "createdAt": 1680375144000}' to topic='twitter-topic' with key '8062830822924352164'
2023-04-01 13:52:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:34 -0500 2023","id":"3567686201882263016","text":"dolor porttitor Maecenas libero libero sed Spring magna porttitor Maecenas amet","user":{"id":"3107865770056726109"}}
2023-04-01 13:52:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor porttitor Maecenas libero libero sed Spring magna porttitor Maecenas amet and sending to kafka topic twitter-topic
2023-04-01 13:52:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3107865770056726109, "id": 3567686201882263016, "text": "dolor porttitor Maecenas libero libero sed Spring magna porttitor Maecenas amet", "createdAt": 1680375154000}' to topic='twitter-topic' with key '3567686201882263016'
2023-04-01 13:52:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:44 -0500 2023","id":"1404582466142042774","text":"adipiscing posuere conque ipsum libero consectetuer posuere sit Elasticsearch sed magna magna lectus porttitor magna sit","user":{"id":"5303933879695304096"}}
2023-04-01 13:52:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere conque ipsum libero consectetuer posuere sit Elasticsearch sed magna magna lectus porttitor magna sit and sending to kafka topic twitter-topic
2023-04-01 13:52:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5303933879695304096, "id": 1404582466142042774, "text": "adipiscing posuere conque ipsum libero consectetuer posuere sit Elasticsearch sed magna magna lectus porttitor magna sit", "createdAt": 1680375164000}' to topic='twitter-topic' with key '1404582466142042774'
2023-04-01 13:52:54 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:52:54 -0500 2023","id":"6618131737974177314","text":"ipsum pulvinar posuere Java libero sed","user":{"id":"8238289390279740014"}}
2023-04-01 13:52:54 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum pulvinar posuere Java libero sed and sending to kafka topic twitter-topic
2023-04-01 13:52:54 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8238289390279740014, "id": 6618131737974177314, "text": "ipsum pulvinar posuere Java libero sed", "createdAt": 1680375174000}' to topic='twitter-topic' with key '6618131737974177314'
2023-04-01 13:53:04 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:53:04 -0500 2023","id":"5112850474619032782","text":"mara elit libero Lorem mara Java Maecenas sed mara mara","user":{"id":"1619824180864943230"}}
2023-04-01 13:53:04 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara elit libero Lorem mara Java Maecenas sed mara mara and sending to kafka topic twitter-topic
2023-04-01 13:53:04 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1619824180864943230, "id": 5112850474619032782, "text": "mara elit libero Lorem mara Java Maecenas sed mara mara", "createdAt": 1680375184000}' to topic='twitter-topic' with key '5112850474619032782'
2023-04-01 13:53:14 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:53:14 -0500 2023","id":"3914160642739503084","text":"elit lectus massa conque adipiscing elit Java dolor sit massa malesuada magna","user":{"id":"4563113431536018296"}}
2023-04-01 13:53:14 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit lectus massa conque adipiscing elit Java dolor sit massa malesuada magna and sending to kafka topic twitter-topic
2023-04-01 13:53:14 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4563113431536018296, "id": 3914160642739503084, "text": "elit lectus massa conque adipiscing elit Java dolor sit massa malesuada magna", "createdAt": 1680375194000}' to topic='twitter-topic' with key '3914160642739503084'
2023-04-01 13:53:24 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:53:24 -0500 2023","id":"3537389712541422273","text":"lectus dolor sed sit amet posuere mara Kafka sit posuere sit mara ipsum sit","user":{"id":"5572673707248520352"}}
2023-04-01 13:53:24 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus dolor sed sit amet posuere mara Kafka sit posuere sit mara ipsum sit and sending to kafka topic twitter-topic
2023-04-01 13:53:24 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5572673707248520352, "id": 3537389712541422273, "text": "lectus dolor sed sit amet posuere mara Kafka sit posuere sit mara ipsum sit", "createdAt": 1680375204000}' to topic='twitter-topic' with key '3537389712541422273'
2023-04-01 13:53:34 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:53:34 -0500 2023","id":"26041193587372464","text":"consectetuer ipsum consectetuer elit conque consectetuer Spring consectetuer adipiscing sit libero","user":{"id":"4783220498667589141"}}
2023-04-01 13:53:34 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer ipsum consectetuer elit conque consectetuer Spring consectetuer adipiscing sit libero and sending to kafka topic twitter-topic
2023-04-01 13:53:34 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4783220498667589141, "id": 26041193587372464, "text": "consectetuer ipsum consectetuer elit conque consectetuer Spring consectetuer adipiscing sit libero", "createdAt": 1680375214000}' to topic='twitter-topic' with key '26041193587372464'
2023-04-01 13:53:44 [pool-1-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sat Apr 01 13:53:44 -0500 2023","id":"5802460143616774177","text":"dolor libero magna Elasticsearch sit sit","user":{"id":"3859322003684736572"}}
2023-04-01 13:53:44 [pool-1-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor libero magna Elasticsearch sit sit and sending to kafka topic twitter-topic
2023-04-01 13:53:44 [pool-1-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3859322003684736572, "id": 5802460143616774177, "text": "dolor libero magna Elasticsearch sit sit", "createdAt": 1680375224000}' to topic='twitter-topic' with key '5802460143616774177'
2023-04-01 13:53:50 [SpringContextShutdownHook] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Closing Kafka Producer
2023-04-01 13:53:50 [SpringContextShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-04-01 14:46:11 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:11 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-04-01 14:46:11 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-04-01 14:46:11 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-04-01 14:46:12 [main] WARN  o.s.c.b.e.EnvironmentDecryptApplicationInitializer - Cannot decrypt: key=spring.cloud.config.password
2023-04-01 14:46:12 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Cannot decrypt: key=spring.cloud.config.password
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.decrypt(EnvironmentDecryptApplicationInitializer.java:292)
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.lambda$decrypt$0(EnvironmentDecryptApplicationInitializer.java:270)
	at java.base/java.util.LinkedHashMap.replaceAll(LinkedHashMap.java:694)
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.decrypt(EnvironmentDecryptApplicationInitializer.java:265)
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.decrypt(EnvironmentDecryptApplicationInitializer.java:190)
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.initialize(EnvironmentDecryptApplicationInitializer.java:124)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener$DelegatingEnvironmentDecryptApplicationInitializer.initialize(BootstrapApplicationListener.java:441)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:626)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.gino.microservices.twittertokafkaservice.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: java.lang.UnsupportedOperationException: No decryption for FailsafeTextEncryptor. Did you configure the keystore correctly?
	at org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration$FailsafeTextEncryptor.decrypt(EncryptionBootstrapConfiguration.java:165)
	at org.springframework.cloud.bootstrap.encrypt.EnvironmentDecryptApplicationInitializer.decrypt(EnvironmentDecryptApplicationInitializer.java:277)
	... 12 common frames omitted
2023-04-01 14:46:45 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:45 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-04-01 14:46:45 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-04-01 14:46:45 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-04-01 14:46:46 [main] INFO  c.u.j.c.RefreshScopeRefreshedEventListener - Refreshing cached encryptable property sources
2023-04-01 14:46:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource decrypted [org.springframework.core.env.SystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2023-04-01 14:46:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource springCloudDefaultProperties [org.springframework.cloud.bootstrap.BootstrapApplicationListener$ExtendedDefaultPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:46 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-04-01 14:46:47 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=dfd95febc256876f8ca0db09489732e26b81648f, state=null
2023-04-01 14:46:47 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-01 14:46:47 [main] INFO  c.u.j.c.RefreshScopeRefreshedEventListener - Refreshing cached encryptable property sources
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource decrypted [org.springframework.core.env.SystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 14:46:47 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=97a75115-314d-3826-aa3d-8fba1f05cb05
2023-04-01 14:46:47 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource decrypted [org.springframework.core.env.SystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource bootstrapProperties-configClient [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-04-01 14:46:47 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-04-01 14:46:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$87e0af8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-01 14:46:48 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-04-01 14:46:48 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-04-01 14:46:48 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-01 14:46:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 14:46:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 14:46:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680378408133
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: a12719b1-ee53-46cf-a2e6-b2fb4cdef8b0

2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:49 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-01 14:46:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.346 seconds (JVM running for 6.203)
2023-04-01 14:46:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-01 14:46:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:50 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-01 14:46:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:46:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:46:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:46:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:06 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:06 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:07 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:08 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:11 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:12 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:13 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:14 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:15 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:16 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:17 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Call(callName=fetchMetadata, deadlineMs=1680378438136) timed out at 1680378438146 after 1 attempt(s)
Caused by: org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment.
2023-04-01 14:47:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:18 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:19 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:19 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:20 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:20 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:21 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:22 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:23 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:24 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:25 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:26 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:27 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:27 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:27 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:28 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:47:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:47:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:47:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:46 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-04-01 14:53:47 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=dfd95febc256876f8ca0db09489732e26b81648f, state=null
2023-04-01 14:53:47 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-01 14:53:47 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 14:53:48 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f0b8b5d2-f51d-379c-a5c1-29f3150b4a5a
2023-04-01 14:53:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$ee53ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-01 14:53:48 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-01 14:53:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 14:53:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 14:53:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680378828646
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:48 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 662b18d4-6a10-49a7-9fd0-72d2f89a9967

2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:50 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-01 14:53:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.529 seconds (JVM running for 6.42)
2023-04-01 14:53:50 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-01 14:53:50 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-01 14:53:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:53:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:53:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:53:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:27 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-04-01 14:56:28 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=dfd95febc256876f8ca0db09489732e26b81648f, state=null
2023-04-01 14:56:28 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-01 14:56:28 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-01 14:56:29 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f0b8b5d2-f51d-379c-a5c1-29f3150b4a5a
2023-04-01 14:56:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$708dcace] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-01 14:56:29 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-01 14:56:29 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-01 14:56:29 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-01 14:56:29 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1680378989598
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:29 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 22f60208-30c2-4ea0-be70-0677df826bda

2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:30 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:31 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-01 14:56:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:31 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.393 seconds (JVM running for 6.275)
2023-04-01 14:56:31 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-01 14:56:31 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-01 14:56:31 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:32 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2023-04-01 14:56:33 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2023-04-01 14:56:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2023-04-01 14:56:34 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
