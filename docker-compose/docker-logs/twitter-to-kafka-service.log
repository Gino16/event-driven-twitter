2023-04-14 14:50:29 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-14 14:50:30 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=b765f70fac130c195fd7dbc13a24def46279eb9d, state=null
2023-04-14 14:50:30 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server.git/config-client.yml'}]
2023-04-14 14:50:30 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-14 14:50:31 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=02dd0ade-42f4-3743-bdec-fb64ff06e67f
2023-04-14 14:50:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$ea1a4e12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-14 14:50:31 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-14 14:50:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-14 14:50:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-14 14:50:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681483831826
2023-04-14 14:50:32 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 77bc5ea3-e9d8-47ac-adc3-fc8761ceebad

2023-04-14 14:50:32 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-14 14:50:32 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 4.36 seconds (JVM running for 4.955)
2023-04-14 14:50:32 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-14 14:50:32 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-14 14:50:32 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-14 14:50:33 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-14 14:50:33 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-14 14:50:33 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Fri Apr 14 14:50:33 +0000 2023","id":"3812631239031057081","text":"elit Maecenas sed libero Java sit conque amet","user":{"id":"4089394846608307258"}}
2023-04-14 14:50:33 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit Maecenas sed libero Java sit conque amet and sending to kafka topic twitter-topic
2023-04-14 14:50:33 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4089394846608307258, "id": 3812631239031057081, "text": "elit Maecenas sed libero Java sit conque amet", "createdAt": 1681483833000}' to topic='twitter-topic' with key '3812631239031057081'
2023-04-14 14:50:33 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-14 14:50:33 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-14 14:50:33 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-14 14:50:33 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-14 14:50:33 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-14 14:50:33 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681483833264
2023-04-14 14:50:33 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: hQmiVoG2QiKlarcbOWOQkA
2023-04-14 14:50:43 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Fri Apr 14 14:50:43 +0000 2023","id":"5121942050688087916","text":"sit dolor amet porttitor conque posuere yltricies elit Microservices pulvinar posuere ipsum porttitor yltricies Lorem amet","user":{"id":"262471685510058213"}}
2023-04-14 14:50:43 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit dolor amet porttitor conque posuere yltricies elit Microservices pulvinar posuere ipsum porttitor yltricies Lorem amet and sending to kafka topic twitter-topic
2023-04-14 14:50:43 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 262471685510058213, "id": 5121942050688087916, "text": "sit dolor amet porttitor conque posuere yltricies elit Microservices pulvinar posuere ipsum porttitor yltricies Lorem amet", "createdAt": 1681483843000}' to topic='twitter-topic' with key '5121942050688087916'
2023-04-14 14:50:53 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Fri Apr 14 14:50:53 +0000 2023","id":"4745381039237194049","text":"porttitor ipsum pulvinar mara consectetuer porttitor Spring pulvinar malesuada purus malesuada","user":{"id":"2056961513958460680"}}
2023-04-14 14:50:53 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor ipsum pulvinar mara consectetuer porttitor Spring pulvinar malesuada purus malesuada and sending to kafka topic twitter-topic
2023-04-14 14:50:53 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2056961513958460680, "id": 4745381039237194049, "text": "porttitor ipsum pulvinar mara consectetuer porttitor Spring pulvinar malesuada purus malesuada", "createdAt": 1681483853000}' to topic='twitter-topic' with key '4745381039237194049'
2023-04-14 14:51:03 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Fri Apr 14 14:51:03 +0000 2023","id":"3809075435149031997","text":"lectus conque mara mara yltricies magna magna amet Microservices amet consectetuer libero ipsum sit conque massa","user":{"id":"9003140848601703941"}}
2023-04-14 14:51:03 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus conque mara mara yltricies magna magna amet Microservices amet consectetuer libero ipsum sit conque massa and sending to kafka topic twitter-topic
2023-04-14 14:51:03 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9003140848601703941, "id": 3809075435149031997, "text": "lectus conque mara mara yltricies magna magna amet Microservices amet consectetuer libero ipsum sit conque massa", "createdAt": 1681483863000}' to topic='twitter-topic' with key '3809075435149031997'
2023-04-14 14:51:13 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Fri Apr 14 14:51:13 +0000 2023","id":"9016567899406766604","text":"pulvinar Lorem Lorem malesuada porttitor Kafka pulvinar sed dolor consectetuer","user":{"id":"6546613614472598921"}}
2023-04-14 14:51:13 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Lorem Lorem malesuada porttitor Kafka pulvinar sed dolor consectetuer and sending to kafka topic twitter-topic
2023-04-14 14:51:13 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6546613614472598921, "id": 9016567899406766604, "text": "pulvinar Lorem Lorem malesuada porttitor Kafka pulvinar sed dolor consectetuer", "createdAt": 1681483873000}' to topic='twitter-topic' with key '9016567899406766604'
