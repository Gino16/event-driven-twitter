2023-04-16 01:07:19 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-16 01:07:20 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=483142180ed22f2bdc23a1a9f0c273de2b137756, state=null
2023-04-16 01:07:20 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-16 01:07:20 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-16 01:07:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=e7714312-c466-3bd4-9e61-6487b83ef283
2023-04-16 01:07:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$a3e547bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-16 01:07:21 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681607241290
2023-04-16 01:07:21 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 8621c5f6-a0aa-44e1-9093-cd77ab1a0740

2023-04-16 01:07:21 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-16 01:07:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 2.962 seconds (JVM running for 3.343)
2023-04-16 01:07:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-16 01:07:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-16 01:07:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-16 01:07:21 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-16 01:07:21 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:21 +0000 2023","id":"9084367988206472161","text":"porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere","user":{"id":"1370573043194390136"}}
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere and sending to kafka topic twitter-topic
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1370573043194390136, "id": 9084367988206472161, "text": "porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere", "createdAt": 1681607241000}' to topic='twitter-topic' with key '9084367988206472161'
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-16 01:07:22 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-16 01:07:22 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681607242031
2023-04-16 01:07:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: rwQhRECgS0-MOyTJcmKKSQ
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:32 +0000 2023","id":"1103452280252016891","text":"magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna","user":{"id":"3661703604319615368"}}
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna and sending to kafka topic twitter-topic
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3661703604319615368, "id": 1103452280252016891, "text": "magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna", "createdAt": 1681607252000}' to topic='twitter-topic' with key '1103452280252016891'
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:42 +0000 2023","id":"5634665042455220377","text":"lectus purus conque magna Microservices posuere conque","user":{"id":"4164385431075119134"}}
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus conque magna Microservices posuere conque and sending to kafka topic twitter-topic
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4164385431075119134, "id": 5634665042455220377, "text": "lectus purus conque magna Microservices posuere conque", "createdAt": 1681607262000}' to topic='twitter-topic' with key '5634665042455220377'
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:52 +0000 2023","id":"5723399214539565935","text":"posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor","user":{"id":"4026827676034660038"}}
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor and sending to kafka topic twitter-topic
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4026827676034660038, "id": 5723399214539565935, "text": "posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor", "createdAt": 1681607272000}' to topic='twitter-topic' with key '5723399214539565935'
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:02 +0000 2023","id":"4442925424697608087","text":"conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque","user":{"id":"6523930873717579356"}}
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque and sending to kafka topic twitter-topic
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6523930873717579356, "id": 4442925424697608087, "text": "conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque", "createdAt": 1681607282000}' to topic='twitter-topic' with key '4442925424697608087'
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:12 +0000 2023","id":"264219364140324653","text":"porttitor conque massa Kafka Maecenas porttitor","user":{"id":"1142955766956977922"}}
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor conque massa Kafka Maecenas porttitor and sending to kafka topic twitter-topic
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1142955766956977922, "id": 264219364140324653, "text": "porttitor conque massa Kafka Maecenas porttitor", "createdAt": 1681607292000}' to topic='twitter-topic' with key '264219364140324653'
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:22 +0000 2023","id":"4469222060782071662","text":"ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar","user":{"id":"2610134582343521335"}}
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar and sending to kafka topic twitter-topic
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2610134582343521335, "id": 4469222060782071662, "text": "ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar", "createdAt": 1681607302000}' to topic='twitter-topic' with key '4469222060782071662'
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:32 +0000 2023","id":"8105248834351621053","text":"lectus purus yltricies massa Microservices amet Lorem ipsum","user":{"id":"8073067710391775043"}}
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus yltricies massa Microservices amet Lorem ipsum and sending to kafka topic twitter-topic
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8073067710391775043, "id": 8105248834351621053, "text": "lectus purus yltricies massa Microservices amet Lorem ipsum", "createdAt": 1681607312000}' to topic='twitter-topic' with key '8105248834351621053'
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:42 +0000 2023","id":"7466407121787575909","text":"elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor","user":{"id":"9148333392496330442"}}
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor and sending to kafka topic twitter-topic
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9148333392496330442, "id": 7466407121787575909, "text": "elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor", "createdAt": 1681607322000}' to topic='twitter-topic' with key '7466407121787575909'
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:52 +0000 2023","id":"3336815067076926003","text":"massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus","user":{"id":"7038784139250830759"}}
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus and sending to kafka topic twitter-topic
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7038784139250830759, "id": 3336815067076926003, "text": "massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus", "createdAt": 1681607332000}' to topic='twitter-topic' with key '3336815067076926003'
2023-04-16 01:08:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (kafka-broker-1/172.18.0.3:9092) could not be established. Broker may not be available.
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:09:02 +0000 2023","id":"3741819421312568797","text":"malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor","user":{"id":"7107386469017707097"}}
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor and sending to kafka topic twitter-topic
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7107386469017707097, "id": 3741819421312568797, "text": "malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor", "createdAt": 1681607342000}' to topic='twitter-topic' with key '3741819421312568797'
2023-04-16 01:09:02 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Got error produce response with correlation id 21 on topic-partition twitter-topic-2, retrying (4 attempts left). Error: NOT_LEADER_FOR_PARTITION
2023-04-16 01:09:02 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Received invalid metadata error in produce request on partition twitter-topic-2 due to org.apache.kafka.common.errors.NotLeaderForPartitionException: This server is not the leader for that topic-partition.. Going to request metadata update now
2023-04-23 21:36:39 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 21:36:40 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 21:36:40 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 21:36:40 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 21:36:40 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 21:36:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$189dd2dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 21:36:40 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 21:36:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:36:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:36:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682285801032
2023-04-23 21:36:41 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 4a25a683-046f-419d-a06f-cf57606830a5

2023-04-23 21:36:41 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 21:36:41 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 3.261 seconds (JVM running for 3.655)
2023-04-23 21:36:41 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 21:36:41 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 21:36:41 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 21:36:42 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 21:36:42 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 21:36:42 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:36:42 +0000 2023","id":"2233812085993005891","text":"purus sit adipiscing amet pulvinar consectetuer Microservices conque libero sit sed","user":{"id":"8532664311983780750"}}
2023-04-23 21:36:42 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus sit adipiscing amet pulvinar consectetuer Microservices conque libero sit sed and sending to kafka topic twitter-topic
2023-04-23 21:36:42 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8532664311983780750, "id": 2233812085993005891, "text": "purus sit adipiscing amet pulvinar consectetuer Microservices conque libero sit sed", "createdAt": 1682285802000}' to topic='twitter-topic' with key '2233812085993005891'
2023-04-23 21:36:42 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 21:36:42 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 21:36:42 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 21:36:42 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:36:42 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:36:42 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682285802321
2023-04-23 21:36:42 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 21:36:52 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:36:52 +0000 2023","id":"1370636978759556730","text":"Maecenas elit yltricies mara purus Spring lectus libero consectetuer","user":{"id":"5843447710682852362"}}
2023-04-23 21:36:52 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas elit yltricies mara purus Spring lectus libero consectetuer and sending to kafka topic twitter-topic
2023-04-23 21:36:52 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5843447710682852362, "id": 1370636978759556730, "text": "Maecenas elit yltricies mara purus Spring lectus libero consectetuer", "createdAt": 1682285812000}' to topic='twitter-topic' with key '1370636978759556730'
2023-04-23 21:37:02 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:37:02 +0000 2023","id":"6526590841433244264","text":"malesuada consectetuer magna Lorem Maecenas mara amet Java porttitor dolor posuere massa adipiscing","user":{"id":"4071561957707606685"}}
2023-04-23 21:37:02 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada consectetuer magna Lorem Maecenas mara amet Java porttitor dolor posuere massa adipiscing and sending to kafka topic twitter-topic
2023-04-23 21:37:02 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4071561957707606685, "id": 6526590841433244264, "text": "malesuada consectetuer magna Lorem Maecenas mara amet Java porttitor dolor posuere massa adipiscing", "createdAt": 1682285822000}' to topic='twitter-topic' with key '6526590841433244264'
2023-04-23 21:49:07 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 21:49:08 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 21:49:08 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 21:49:08 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 21:49:09 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 21:49:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$b8146114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 21:49:09 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 21:49:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:49:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:49:09 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682286549693
2023-04-23 21:49:10 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 859c5a61-1cee-4483-ba20-ff95bec63e82

2023-04-23 21:49:10 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 21:49:10 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 3.61 seconds (JVM running for 4.013)
2023-04-23 21:49:10 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 21:49:10 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 21:49:10 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 21:49:10 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 21:49:10 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 21:49:10 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:49:10 +0000 2023","id":"4482874158916258210","text":"adipiscing mara porttitor Lorem dolor Java lectus sit elit sit","user":{"id":"7730162043880085018"}}
2023-04-23 21:49:10 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing mara porttitor Lorem dolor Java lectus sit elit sit and sending to kafka topic twitter-topic
2023-04-23 21:49:10 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7730162043880085018, "id": 4482874158916258210, "text": "adipiscing mara porttitor Lorem dolor Java lectus sit elit sit", "createdAt": 1682286550000}' to topic='twitter-topic' with key '4482874158916258210'
2023-04-23 21:49:10 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 21:49:10 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 21:49:10 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 21:49:10 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:49:10 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:49:10 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682286550959
2023-04-23 21:49:10 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 21:49:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:49:21 +0000 2023","id":"3332622482778153822","text":"mara elit Lorem consectetuer conque Elasticsearch yltricies libero Lorem","user":{"id":"3871924165479025827"}}
2023-04-23 21:49:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara elit Lorem consectetuer conque Elasticsearch yltricies libero Lorem and sending to kafka topic twitter-topic
2023-04-23 21:49:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3871924165479025827, "id": 3332622482778153822, "text": "mara elit Lorem consectetuer conque Elasticsearch yltricies libero Lorem", "createdAt": 1682286561000}' to topic='twitter-topic' with key '3332622482778153822'
2023-04-23 21:49:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:49:31 +0000 2023","id":"5955977907406171036","text":"porttitor amet Maecenas malesuada mara Spring Lorem lectus malesuada Lorem","user":{"id":"5100900128308815924"}}
2023-04-23 21:49:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor amet Maecenas malesuada mara Spring Lorem lectus malesuada Lorem and sending to kafka topic twitter-topic
2023-04-23 21:49:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5100900128308815924, "id": 5955977907406171036, "text": "porttitor amet Maecenas malesuada mara Spring Lorem lectus malesuada Lorem", "createdAt": 1682286571000}' to topic='twitter-topic' with key '5955977907406171036'
2023-04-23 21:49:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:49:41 +0000 2023","id":"4759758220854970549","text":"Lorem adipiscing sit Maecenas adipiscing Maecenas yltricies Microservices libero ipsum ipsum magna adipiscing","user":{"id":"3503439248189958669"}}
2023-04-23 21:49:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem adipiscing sit Maecenas adipiscing Maecenas yltricies Microservices libero ipsum ipsum magna adipiscing and sending to kafka topic twitter-topic
2023-04-23 21:49:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3503439248189958669, "id": 4759758220854970549, "text": "Lorem adipiscing sit Maecenas adipiscing Maecenas yltricies Microservices libero ipsum ipsum magna adipiscing", "createdAt": 1682286581000}' to topic='twitter-topic' with key '4759758220854970549'
2023-04-23 21:49:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:49:51 +0000 2023","id":"6220207918532493330","text":"adipiscing pulvinar posuere massa purus Spring massa adipiscing porttitor massa","user":{"id":"5698505857606598179"}}
2023-04-23 21:49:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing pulvinar posuere massa purus Spring massa adipiscing porttitor massa and sending to kafka topic twitter-topic
2023-04-23 21:49:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5698505857606598179, "id": 6220207918532493330, "text": "adipiscing pulvinar posuere massa purus Spring massa adipiscing porttitor massa", "createdAt": 1682286591000}' to topic='twitter-topic' with key '6220207918532493330'
2023-04-23 21:50:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:01 +0000 2023","id":"4685033325683303430","text":"sit sit elit sed amet amet Elasticsearch yltricies sit yltricies purus conque","user":{"id":"8815355311129133043"}}
2023-04-23 21:50:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit sit elit sed amet amet Elasticsearch yltricies sit yltricies purus conque and sending to kafka topic twitter-topic
2023-04-23 21:50:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8815355311129133043, "id": 4685033325683303430, "text": "sit sit elit sed amet amet Elasticsearch yltricies sit yltricies purus conque", "createdAt": 1682286601000}' to topic='twitter-topic' with key '4685033325683303430'
2023-04-23 21:50:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:11 +0000 2023","id":"3567849488051235808","text":"mara massa malesuada mara pulvinar pulvinar Spring porttitor magna pulvinar magna porttitor","user":{"id":"231248146147450008"}}
2023-04-23 21:50:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara massa malesuada mara pulvinar pulvinar Spring porttitor magna pulvinar magna porttitor and sending to kafka topic twitter-topic
2023-04-23 21:50:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 231248146147450008, "id": 3567849488051235808, "text": "mara massa malesuada mara pulvinar pulvinar Spring porttitor magna pulvinar magna porttitor", "createdAt": 1682286611000}' to topic='twitter-topic' with key '3567849488051235808'
2023-04-23 21:50:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:21 +0000 2023","id":"6024367026602154893","text":"sed Lorem sed Kafka consectetuer purus","user":{"id":"7070411533923045673"}}
2023-04-23 21:50:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed Lorem sed Kafka consectetuer purus and sending to kafka topic twitter-topic
2023-04-23 21:50:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7070411533923045673, "id": 6024367026602154893, "text": "sed Lorem sed Kafka consectetuer purus", "createdAt": 1682286621000}' to topic='twitter-topic' with key '6024367026602154893'
2023-04-23 21:50:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:31 +0000 2023","id":"7749076969622993185","text":"amet amet yltricies consectetuer posuere posuere sed massa Microservices posuere mara posuere Maecenas porttitor ipsum","user":{"id":"1230359247738839620"}}
2023-04-23 21:50:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet amet yltricies consectetuer posuere posuere sed massa Microservices posuere mara posuere Maecenas porttitor ipsum and sending to kafka topic twitter-topic
2023-04-23 21:50:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1230359247738839620, "id": 7749076969622993185, "text": "amet amet yltricies consectetuer posuere posuere sed massa Microservices posuere mara posuere Maecenas porttitor ipsum", "createdAt": 1682286631000}' to topic='twitter-topic' with key '7749076969622993185'
2023-04-23 21:50:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:41 +0000 2023","id":"2966107227183655145","text":"Maecenas consectetuer sit ipsum magna elit amet Kafka libero purus amet Lorem amet","user":{"id":"2329929225029043301"}}
2023-04-23 21:50:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas consectetuer sit ipsum magna elit amet Kafka libero purus amet Lorem amet and sending to kafka topic twitter-topic
2023-04-23 21:50:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2329929225029043301, "id": 2966107227183655145, "text": "Maecenas consectetuer sit ipsum magna elit amet Kafka libero purus amet Lorem amet", "createdAt": 1682286641000}' to topic='twitter-topic' with key '2966107227183655145'
2023-04-23 21:50:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:50:51 +0000 2023","id":"7493262834171018554","text":"consectetuer consectetuer libero pulvinar lectus massa Microservices dolor porttitor yltricies pulvinar","user":{"id":"2070684237488807279"}}
2023-04-23 21:50:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer consectetuer libero pulvinar lectus massa Microservices dolor porttitor yltricies pulvinar and sending to kafka topic twitter-topic
2023-04-23 21:50:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2070684237488807279, "id": 7493262834171018554, "text": "consectetuer consectetuer libero pulvinar lectus massa Microservices dolor porttitor yltricies pulvinar", "createdAt": 1682286651000}' to topic='twitter-topic' with key '7493262834171018554'
2023-04-23 21:51:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:01 +0000 2023","id":"965188218355812304","text":"porttitor amet Maecenas massa consectetuer sit Elasticsearch amet Maecenas pulvinar adipiscing","user":{"id":"3544987331629154832"}}
2023-04-23 21:51:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor amet Maecenas massa consectetuer sit Elasticsearch amet Maecenas pulvinar adipiscing and sending to kafka topic twitter-topic
2023-04-23 21:51:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3544987331629154832, "id": 965188218355812304, "text": "porttitor amet Maecenas massa consectetuer sit Elasticsearch amet Maecenas pulvinar adipiscing", "createdAt": 1682286661000}' to topic='twitter-topic' with key '965188218355812304'
2023-04-23 21:51:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:11 +0000 2023","id":"3507826851990886214","text":"dolor posuere sed Java sit ipsum","user":{"id":"7133759822222661173"}}
2023-04-23 21:51:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor posuere sed Java sit ipsum and sending to kafka topic twitter-topic
2023-04-23 21:51:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7133759822222661173, "id": 3507826851990886214, "text": "dolor posuere sed Java sit ipsum", "createdAt": 1682286671000}' to topic='twitter-topic' with key '3507826851990886214'
2023-04-23 21:51:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:21 +0000 2023","id":"2905935106110200964","text":"lectus adipiscing adipiscing porttitor porttitor pulvinar amet Elasticsearch lectus magna ipsum yltricies Lorem","user":{"id":"1660343139397841817"}}
2023-04-23 21:51:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus adipiscing adipiscing porttitor porttitor pulvinar amet Elasticsearch lectus magna ipsum yltricies Lorem and sending to kafka topic twitter-topic
2023-04-23 21:51:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1660343139397841817, "id": 2905935106110200964, "text": "lectus adipiscing adipiscing porttitor porttitor pulvinar amet Elasticsearch lectus magna ipsum yltricies Lorem", "createdAt": 1682286681000}' to topic='twitter-topic' with key '2905935106110200964'
2023-04-23 21:51:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:31 +0000 2023","id":"3589849539148441210","text":"mara conque mara malesuada porttitor consectetuer porttitor elit Kafka libero malesuada mara sit Maecenas adipiscing","user":{"id":"1716126167810077482"}}
2023-04-23 21:51:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara conque mara malesuada porttitor consectetuer porttitor elit Kafka libero malesuada mara sit Maecenas adipiscing and sending to kafka topic twitter-topic
2023-04-23 21:51:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1716126167810077482, "id": 3589849539148441210, "text": "mara conque mara malesuada porttitor consectetuer porttitor elit Kafka libero malesuada mara sit Maecenas adipiscing", "createdAt": 1682286691000}' to topic='twitter-topic' with key '3589849539148441210'
2023-04-23 21:51:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:41 +0000 2023","id":"4458379184180485599","text":"pulvinar consectetuer Maecenas yltricies Spring purus mara magna","user":{"id":"8839218049818015693"}}
2023-04-23 21:51:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar consectetuer Maecenas yltricies Spring purus mara magna and sending to kafka topic twitter-topic
2023-04-23 21:51:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8839218049818015693, "id": 4458379184180485599, "text": "pulvinar consectetuer Maecenas yltricies Spring purus mara magna", "createdAt": 1682286701000}' to topic='twitter-topic' with key '4458379184180485599'
2023-04-23 21:51:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:51:51 +0000 2023","id":"3822990304004404597","text":"dolor mara malesuada consectetuer sit Kafka amet porttitor elit consectetuer","user":{"id":"2931506153651542429"}}
2023-04-23 21:51:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor mara malesuada consectetuer sit Kafka amet porttitor elit consectetuer and sending to kafka topic twitter-topic
2023-04-23 21:51:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2931506153651542429, "id": 3822990304004404597, "text": "dolor mara malesuada consectetuer sit Kafka amet porttitor elit consectetuer", "createdAt": 1682286711000}' to topic='twitter-topic' with key '3822990304004404597'
2023-04-23 21:52:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:01 +0000 2023","id":"548804927947582796","text":"pulvinar libero conque malesuada elit dolor amet magna Elasticsearch Lorem consectetuer libero elit posuere posuere","user":{"id":"2641719157083414371"}}
2023-04-23 21:52:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar libero conque malesuada elit dolor amet magna Elasticsearch Lorem consectetuer libero elit posuere posuere and sending to kafka topic twitter-topic
2023-04-23 21:52:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2641719157083414371, "id": 548804927947582796, "text": "pulvinar libero conque malesuada elit dolor amet magna Elasticsearch Lorem consectetuer libero elit posuere posuere", "createdAt": 1682286721000}' to topic='twitter-topic' with key '548804927947582796'
2023-04-23 21:52:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:11 +0000 2023","id":"150423693363393069","text":"conque sit lectus yltricies elit porttitor conque malesuada Kafka lectus sed pulvinar adipiscing pulvinar pulvinar","user":{"id":"4270534239559308445"}}
2023-04-23 21:52:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque sit lectus yltricies elit porttitor conque malesuada Kafka lectus sed pulvinar adipiscing pulvinar pulvinar and sending to kafka topic twitter-topic
2023-04-23 21:52:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4270534239559308445, "id": 150423693363393069, "text": "conque sit lectus yltricies elit porttitor conque malesuada Kafka lectus sed pulvinar adipiscing pulvinar pulvinar", "createdAt": 1682286731000}' to topic='twitter-topic' with key '150423693363393069'
2023-04-23 21:52:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:21 +0000 2023","id":"4162637510726032123","text":"sed yltricies amet amet consectetuer Microservices sit conque yltricies","user":{"id":"1895204890606837101"}}
2023-04-23 21:52:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed yltricies amet amet consectetuer Microservices sit conque yltricies and sending to kafka topic twitter-topic
2023-04-23 21:52:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1895204890606837101, "id": 4162637510726032123, "text": "sed yltricies amet amet consectetuer Microservices sit conque yltricies", "createdAt": 1682286741000}' to topic='twitter-topic' with key '4162637510726032123'
2023-04-23 21:52:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:31 +0000 2023","id":"2321733188538111058","text":"mara sit magna malesuada amet Kafka massa libero sed malesuada","user":{"id":"3562024687682060094"}}
2023-04-23 21:52:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sit magna malesuada amet Kafka massa libero sed malesuada and sending to kafka topic twitter-topic
2023-04-23 21:52:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3562024687682060094, "id": 2321733188538111058, "text": "mara sit magna malesuada amet Kafka massa libero sed malesuada", "createdAt": 1682286751000}' to topic='twitter-topic' with key '2321733188538111058'
2023-04-23 21:52:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:41 +0000 2023","id":"431504940184364681","text":"ipsum posuere ipsum amet libero mara magna mara Java ipsum pulvinar posuere massa magna sed pulvinar","user":{"id":"7132913546244710800"}}
2023-04-23 21:52:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum posuere ipsum amet libero mara magna mara Java ipsum pulvinar posuere massa magna sed pulvinar and sending to kafka topic twitter-topic
2023-04-23 21:52:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7132913546244710800, "id": 431504940184364681, "text": "ipsum posuere ipsum amet libero mara magna mara Java ipsum pulvinar posuere massa magna sed pulvinar", "createdAt": 1682286761000}' to topic='twitter-topic' with key '431504940184364681'
2023-04-23 21:52:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:52:51 +0000 2023","id":"8773151647633333225","text":"ipsum elit posuere purus adipiscing libero conque mara Microservices posuere Lorem dolor posuere massa dolor massa","user":{"id":"4282912468360261334"}}
2023-04-23 21:52:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum elit posuere purus adipiscing libero conque mara Microservices posuere Lorem dolor posuere massa dolor massa and sending to kafka topic twitter-topic
2023-04-23 21:52:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4282912468360261334, "id": 8773151647633333225, "text": "ipsum elit posuere purus adipiscing libero conque mara Microservices posuere Lorem dolor posuere massa dolor massa", "createdAt": 1682286771000}' to topic='twitter-topic' with key '8773151647633333225'
2023-04-23 21:53:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:01 +0000 2023","id":"1418215604427561987","text":"lectus libero Maecenas magna Elasticsearch ipsum purus","user":{"id":"4860112332406620654"}}
2023-04-23 21:53:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus libero Maecenas magna Elasticsearch ipsum purus and sending to kafka topic twitter-topic
2023-04-23 21:53:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4860112332406620654, "id": 1418215604427561987, "text": "lectus libero Maecenas magna Elasticsearch ipsum purus", "createdAt": 1682286781000}' to topic='twitter-topic' with key '1418215604427561987'
2023-04-23 21:53:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:11 +0000 2023","id":"8637923201162671564","text":"mara malesuada sit dolor elit pulvinar yltricies Kafka amet porttitor magna sed adipiscing malesuada","user":{"id":"5597636519669845204"}}
2023-04-23 21:53:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara malesuada sit dolor elit pulvinar yltricies Kafka amet porttitor magna sed adipiscing malesuada and sending to kafka topic twitter-topic
2023-04-23 21:53:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5597636519669845204, "id": 8637923201162671564, "text": "mara malesuada sit dolor elit pulvinar yltricies Kafka amet porttitor magna sed adipiscing malesuada", "createdAt": 1682286791000}' to topic='twitter-topic' with key '8637923201162671564'
2023-04-23 21:53:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:21 +0000 2023","id":"7974126904370325930","text":"amet sed malesuada pulvinar posuere consectetuer Elasticsearch lectus sed libero yltricies lectus","user":{"id":"8932287873630341328"}}
2023-04-23 21:53:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet sed malesuada pulvinar posuere consectetuer Elasticsearch lectus sed libero yltricies lectus and sending to kafka topic twitter-topic
2023-04-23 21:53:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8932287873630341328, "id": 7974126904370325930, "text": "amet sed malesuada pulvinar posuere consectetuer Elasticsearch lectus sed libero yltricies lectus", "createdAt": 1682286801000}' to topic='twitter-topic' with key '7974126904370325930'
2023-04-23 21:53:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:31 +0000 2023","id":"1665754217397477803","text":"sit sit lectus conque malesuada Elasticsearch purus malesuada ipsum","user":{"id":"1833876611452117066"}}
2023-04-23 21:53:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit sit lectus conque malesuada Elasticsearch purus malesuada ipsum and sending to kafka topic twitter-topic
2023-04-23 21:53:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1833876611452117066, "id": 1665754217397477803, "text": "sit sit lectus conque malesuada Elasticsearch purus malesuada ipsum", "createdAt": 1682286811000}' to topic='twitter-topic' with key '1665754217397477803'
2023-04-23 21:53:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:41 +0000 2023","id":"8995718123474895843","text":"pulvinar Maecenas magna elit dolor conque dolor Spring Maecenas mara Maecenas posuere dolor sed","user":{"id":"4911334131419934138"}}
2023-04-23 21:53:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Maecenas magna elit dolor conque dolor Spring Maecenas mara Maecenas posuere dolor sed and sending to kafka topic twitter-topic
2023-04-23 21:53:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4911334131419934138, "id": 8995718123474895843, "text": "pulvinar Maecenas magna elit dolor conque dolor Spring Maecenas mara Maecenas posuere dolor sed", "createdAt": 1682286821000}' to topic='twitter-topic' with key '8995718123474895843'
2023-04-23 21:53:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:53:51 +0000 2023","id":"2099956435963438712","text":"malesuada sit libero pulvinar ipsum Kafka ipsum sit purus","user":{"id":"209480430216059294"}}
2023-04-23 21:53:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada sit libero pulvinar ipsum Kafka ipsum sit purus and sending to kafka topic twitter-topic
2023-04-23 21:53:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 209480430216059294, "id": 2099956435963438712, "text": "malesuada sit libero pulvinar ipsum Kafka ipsum sit purus", "createdAt": 1682286831000}' to topic='twitter-topic' with key '2099956435963438712'
2023-04-23 21:54:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:01 +0000 2023","id":"965468779041889515","text":"purus Maecenas amet pulvinar yltricies lectus purus sed Elasticsearch lectus mara malesuada ipsum ipsum amet yltricies","user":{"id":"2394686370838598620"}}
2023-04-23 21:54:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus Maecenas amet pulvinar yltricies lectus purus sed Elasticsearch lectus mara malesuada ipsum ipsum amet yltricies and sending to kafka topic twitter-topic
2023-04-23 21:54:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2394686370838598620, "id": 965468779041889515, "text": "purus Maecenas amet pulvinar yltricies lectus purus sed Elasticsearch lectus mara malesuada ipsum ipsum amet yltricies", "createdAt": 1682286841000}' to topic='twitter-topic' with key '965468779041889515'
2023-04-23 21:54:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:11 +0000 2023","id":"6049922701634805958","text":"mara sed malesuada dolor Java malesuada mara","user":{"id":"2753249499938772114"}}
2023-04-23 21:54:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sed malesuada dolor Java malesuada mara and sending to kafka topic twitter-topic
2023-04-23 21:54:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2753249499938772114, "id": 6049922701634805958, "text": "mara sed malesuada dolor Java malesuada mara", "createdAt": 1682286851000}' to topic='twitter-topic' with key '6049922701634805958'
2023-04-23 21:54:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:21 +0000 2023","id":"1329392091492074483","text":"lectus yltricies libero Lorem adipiscing malesuada elit Java Maecenas sed Maecenas massa consectetuer massa","user":{"id":"1719956882975049078"}}
2023-04-23 21:54:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus yltricies libero Lorem adipiscing malesuada elit Java Maecenas sed Maecenas massa consectetuer massa and sending to kafka topic twitter-topic
2023-04-23 21:54:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1719956882975049078, "id": 1329392091492074483, "text": "lectus yltricies libero Lorem adipiscing malesuada elit Java Maecenas sed Maecenas massa consectetuer massa", "createdAt": 1682286861000}' to topic='twitter-topic' with key '1329392091492074483'
2023-04-23 21:54:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:31 +0000 2023","id":"3398799750216951508","text":"Maecenas mara adipiscing lectus posuere malesuada sit Lorem Microservices porttitor porttitor pulvinar sit adipiscing porttitor purus","user":{"id":"610766912413234798"}}
2023-04-23 21:54:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas mara adipiscing lectus posuere malesuada sit Lorem Microservices porttitor porttitor pulvinar sit adipiscing porttitor purus and sending to kafka topic twitter-topic
2023-04-23 21:54:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 610766912413234798, "id": 3398799750216951508, "text": "Maecenas mara adipiscing lectus posuere malesuada sit Lorem Microservices porttitor porttitor pulvinar sit adipiscing porttitor purus", "createdAt": 1682286871000}' to topic='twitter-topic' with key '3398799750216951508'
2023-04-23 21:54:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:41 +0000 2023","id":"6956149148048505230","text":"massa massa yltricies purus libero sit Elasticsearch conque massa amet consectetuer","user":{"id":"3465407681821998493"}}
2023-04-23 21:54:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa massa yltricies purus libero sit Elasticsearch conque massa amet consectetuer and sending to kafka topic twitter-topic
2023-04-23 21:54:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3465407681821998493, "id": 6956149148048505230, "text": "massa massa yltricies purus libero sit Elasticsearch conque massa amet consectetuer", "createdAt": 1682286881000}' to topic='twitter-topic' with key '6956149148048505230'
2023-04-23 21:54:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:54:51 +0000 2023","id":"1125773579383692546","text":"lectus consectetuer consectetuer libero libero Java sit massa sed dolor","user":{"id":"3273748781922021077"}}
2023-04-23 21:54:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus consectetuer consectetuer libero libero Java sit massa sed dolor and sending to kafka topic twitter-topic
2023-04-23 21:54:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3273748781922021077, "id": 1125773579383692546, "text": "lectus consectetuer consectetuer libero libero Java sit massa sed dolor", "createdAt": 1682286891000}' to topic='twitter-topic' with key '1125773579383692546'
2023-04-23 21:55:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:55:01 +0000 2023","id":"1658965919973852474","text":"massa massa yltricies purus massa libero ipsum Java lectus amet pulvinar magna sit consectetuer","user":{"id":"7067121832572746126"}}
2023-04-23 21:55:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa massa yltricies purus massa libero ipsum Java lectus amet pulvinar magna sit consectetuer and sending to kafka topic twitter-topic
2023-04-23 21:55:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7067121832572746126, "id": 1658965919973852474, "text": "massa massa yltricies purus massa libero ipsum Java lectus amet pulvinar magna sit consectetuer", "createdAt": 1682286901000}' to topic='twitter-topic' with key '1658965919973852474'
2023-04-23 21:55:54 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 21:55:55 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 21:55:55 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 21:55:55 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 21:55:55 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 21:55:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$202f3751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 21:55:55 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 21:55:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:55:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:55:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682286955957
2023-04-23 21:55:56 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 48a8beea-8436-4a63-83a5-671853784be9

2023-04-23 21:55:56 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 21:55:56 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 3.069 seconds (JVM running for 3.486)
2023-04-23 21:55:56 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 21:55:56 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 21:55:56 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 21:55:56 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 21:55:56 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 21:55:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:55:56 +0000 2023","id":"504367875436270978","text":"sit pulvinar amet Lorem purus mara Java elit mara conque conque libero","user":{"id":"6724654798342644966"}}
2023-04-23 21:55:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit pulvinar amet Lorem purus mara Java elit mara conque conque libero and sending to kafka topic twitter-topic
2023-04-23 21:55:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6724654798342644966, "id": 504367875436270978, "text": "sit pulvinar amet Lorem purus mara Java elit mara conque conque libero", "createdAt": 1682286956000}' to topic='twitter-topic' with key '504367875436270978'
2023-04-23 21:55:56 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 21:55:56 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 21:55:56 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 21:55:56 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 21:55:56 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 21:55:56 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682286956734
2023-04-23 21:55:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 21:56:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:06 +0000 2023","id":"5271062823617895105","text":"massa posuere sit adipiscing pulvinar Elasticsearch dolor sed elit malesuada","user":{"id":"1392035885636682990"}}
2023-04-23 21:56:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa posuere sit adipiscing pulvinar Elasticsearch dolor sed elit malesuada and sending to kafka topic twitter-topic
2023-04-23 21:56:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1392035885636682990, "id": 5271062823617895105, "text": "massa posuere sit adipiscing pulvinar Elasticsearch dolor sed elit malesuada", "createdAt": 1682286966000}' to topic='twitter-topic' with key '5271062823617895105'
2023-04-23 21:56:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:16 +0000 2023","id":"8350195359314495760","text":"lectus sit elit porttitor amet conque Microservices consectetuer conque sed porttitor","user":{"id":"3914436823470941978"}}
2023-04-23 21:56:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sit elit porttitor amet conque Microservices consectetuer conque sed porttitor and sending to kafka topic twitter-topic
2023-04-23 21:56:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3914436823470941978, "id": 8350195359314495760, "text": "lectus sit elit porttitor amet conque Microservices consectetuer conque sed porttitor", "createdAt": 1682286976000}' to topic='twitter-topic' with key '8350195359314495760'
2023-04-23 21:56:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:26 +0000 2023","id":"5590415172079393871","text":"conque massa yltricies adipiscing sit Java posuere consectetuer amet","user":{"id":"7516457391946892750"}}
2023-04-23 21:56:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque massa yltricies adipiscing sit Java posuere consectetuer amet and sending to kafka topic twitter-topic
2023-04-23 21:56:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7516457391946892750, "id": 5590415172079393871, "text": "conque massa yltricies adipiscing sit Java posuere consectetuer amet", "createdAt": 1682286986000}' to topic='twitter-topic' with key '5590415172079393871'
2023-04-23 21:56:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:36 +0000 2023","id":"8322890071801761725","text":"sit purus pulvinar sed purus Spring conque elit purus","user":{"id":"1624989364366268399"}}
2023-04-23 21:56:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit purus pulvinar sed purus Spring conque elit purus and sending to kafka topic twitter-topic
2023-04-23 21:56:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1624989364366268399, "id": 8322890071801761725, "text": "sit purus pulvinar sed purus Spring conque elit purus", "createdAt": 1682286996000}' to topic='twitter-topic' with key '8322890071801761725'
2023-04-23 21:56:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:46 +0000 2023","id":"5818768003822316592","text":"dolor mara lectus sit pulvinar Lorem Elasticsearch mara posuere elit posuere malesuada","user":{"id":"2558736494038738181"}}
2023-04-23 21:56:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor mara lectus sit pulvinar Lorem Elasticsearch mara posuere elit posuere malesuada and sending to kafka topic twitter-topic
2023-04-23 21:56:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2558736494038738181, "id": 5818768003822316592, "text": "dolor mara lectus sit pulvinar Lorem Elasticsearch mara posuere elit posuere malesuada", "createdAt": 1682287006000}' to topic='twitter-topic' with key '5818768003822316592'
2023-04-23 21:56:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:56:56 +0000 2023","id":"5903187465937042405","text":"magna sed posuere lectus magna magna Maecenas Kafka libero lectus pulvinar conque sed","user":{"id":"3055199762758992118"}}
2023-04-23 21:56:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna sed posuere lectus magna magna Maecenas Kafka libero lectus pulvinar conque sed and sending to kafka topic twitter-topic
2023-04-23 21:56:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3055199762758992118, "id": 5903187465937042405, "text": "magna sed posuere lectus magna magna Maecenas Kafka libero lectus pulvinar conque sed", "createdAt": 1682287016000}' to topic='twitter-topic' with key '5903187465937042405'
2023-04-23 21:57:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:06 +0000 2023","id":"2824342482171636962","text":"porttitor Maecenas Lorem consectetuer ipsum malesuada Java pulvinar lectus dolor Lorem","user":{"id":"1832157691622356469"}}
2023-04-23 21:57:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor Maecenas Lorem consectetuer ipsum malesuada Java pulvinar lectus dolor Lorem and sending to kafka topic twitter-topic
2023-04-23 21:57:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1832157691622356469, "id": 2824342482171636962, "text": "porttitor Maecenas Lorem consectetuer ipsum malesuada Java pulvinar lectus dolor Lorem", "createdAt": 1682287026000}' to topic='twitter-topic' with key '2824342482171636962'
2023-04-23 21:57:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:16 +0000 2023","id":"1956134835965122341","text":"conque libero Maecenas Lorem lectus Elasticsearch elit consectetuer conque porttitor","user":{"id":"451412081934502772"}}
2023-04-23 21:57:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque libero Maecenas Lorem lectus Elasticsearch elit consectetuer conque porttitor and sending to kafka topic twitter-topic
2023-04-23 21:57:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 451412081934502772, "id": 1956134835965122341, "text": "conque libero Maecenas Lorem lectus Elasticsearch elit consectetuer conque porttitor", "createdAt": 1682287036000}' to topic='twitter-topic' with key '1956134835965122341'
2023-04-23 21:57:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:26 +0000 2023","id":"6307729476956077513","text":"sed lectus posuere posuere massa magna mara Lorem Microservices mara lectus consectetuer pulvinar consectetuer porttitor Maecenas","user":{"id":"8673933499266657330"}}
2023-04-23 21:57:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed lectus posuere posuere massa magna mara Lorem Microservices mara lectus consectetuer pulvinar consectetuer porttitor Maecenas and sending to kafka topic twitter-topic
2023-04-23 21:57:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8673933499266657330, "id": 6307729476956077513, "text": "sed lectus posuere posuere massa magna mara Lorem Microservices mara lectus consectetuer pulvinar consectetuer porttitor Maecenas", "createdAt": 1682287046000}' to topic='twitter-topic' with key '6307729476956077513'
2023-04-23 21:57:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:36 +0000 2023","id":"2326339485679617941","text":"conque yltricies pulvinar consectetuer massa Spring consectetuer lectus porttitor","user":{"id":"9161273179736783113"}}
2023-04-23 21:57:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque yltricies pulvinar consectetuer massa Spring consectetuer lectus porttitor and sending to kafka topic twitter-topic
2023-04-23 21:57:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9161273179736783113, "id": 2326339485679617941, "text": "conque yltricies pulvinar consectetuer massa Spring consectetuer lectus porttitor", "createdAt": 1682287056000}' to topic='twitter-topic' with key '2326339485679617941'
2023-04-23 21:57:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:46 +0000 2023","id":"8289135361235700785","text":"conque lectus dolor mara adipiscing sit Spring Maecenas consectetuer consectetuer conque","user":{"id":"3800815409479364399"}}
2023-04-23 21:57:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque lectus dolor mara adipiscing sit Spring Maecenas consectetuer consectetuer conque and sending to kafka topic twitter-topic
2023-04-23 21:57:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3800815409479364399, "id": 8289135361235700785, "text": "conque lectus dolor mara adipiscing sit Spring Maecenas consectetuer consectetuer conque", "createdAt": 1682287066000}' to topic='twitter-topic' with key '8289135361235700785'
2023-04-23 21:57:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:57:56 +0000 2023","id":"7842230307530188451","text":"ipsum malesuada Maecenas ipsum lectus Elasticsearch consectetuer magna libero","user":{"id":"5202387144028638460"}}
2023-04-23 21:57:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum malesuada Maecenas ipsum lectus Elasticsearch consectetuer magna libero and sending to kafka topic twitter-topic
2023-04-23 21:57:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5202387144028638460, "id": 7842230307530188451, "text": "ipsum malesuada Maecenas ipsum lectus Elasticsearch consectetuer magna libero", "createdAt": 1682287076000}' to topic='twitter-topic' with key '7842230307530188451'
2023-04-23 21:58:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:06 +0000 2023","id":"7077297763615967409","text":"pulvinar lectus yltricies Microservices lectus sed","user":{"id":"3515013853996669769"}}
2023-04-23 21:58:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar lectus yltricies Microservices lectus sed and sending to kafka topic twitter-topic
2023-04-23 21:58:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3515013853996669769, "id": 7077297763615967409, "text": "pulvinar lectus yltricies Microservices lectus sed", "createdAt": 1682287086000}' to topic='twitter-topic' with key '7077297763615967409'
2023-04-23 21:58:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:16 +0000 2023","id":"6889748770623901458","text":"mara lectus mara sed lectus consectetuer Spring sit malesuada massa sit magna","user":{"id":"1279486728406204196"}}
2023-04-23 21:58:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara lectus mara sed lectus consectetuer Spring sit malesuada massa sit magna and sending to kafka topic twitter-topic
2023-04-23 21:58:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1279486728406204196, "id": 6889748770623901458, "text": "mara lectus mara sed lectus consectetuer Spring sit malesuada massa sit magna", "createdAt": 1682287096000}' to topic='twitter-topic' with key '6889748770623901458'
2023-04-23 21:58:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:26 +0000 2023","id":"2910395347575894091","text":"ipsum yltricies libero dolor conque massa lectus adipiscing Elasticsearch porttitor libero purus elit amet Maecenas elit","user":{"id":"8092511627058413946"}}
2023-04-23 21:58:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum yltricies libero dolor conque massa lectus adipiscing Elasticsearch porttitor libero purus elit amet Maecenas elit and sending to kafka topic twitter-topic
2023-04-23 21:58:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8092511627058413946, "id": 2910395347575894091, "text": "ipsum yltricies libero dolor conque massa lectus adipiscing Elasticsearch porttitor libero purus elit amet Maecenas elit", "createdAt": 1682287106000}' to topic='twitter-topic' with key '2910395347575894091'
2023-04-23 21:58:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:36 +0000 2023","id":"3438066414928011645","text":"Maecenas sed Lorem Java yltricies libero","user":{"id":"1703407147016013821"}}
2023-04-23 21:58:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas sed Lorem Java yltricies libero and sending to kafka topic twitter-topic
2023-04-23 21:58:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1703407147016013821, "id": 3438066414928011645, "text": "Maecenas sed Lorem Java yltricies libero", "createdAt": 1682287116000}' to topic='twitter-topic' with key '3438066414928011645'
2023-04-23 21:58:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:46 +0000 2023","id":"6979221936782559328","text":"Maecenas lectus libero sed adipiscing consectetuer dolor adipiscing Java sit consectetuer conque purus yltricies pulvinar","user":{"id":"7161311436693989720"}}
2023-04-23 21:58:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas lectus libero sed adipiscing consectetuer dolor adipiscing Java sit consectetuer conque purus yltricies pulvinar and sending to kafka topic twitter-topic
2023-04-23 21:58:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7161311436693989720, "id": 6979221936782559328, "text": "Maecenas lectus libero sed adipiscing consectetuer dolor adipiscing Java sit consectetuer conque purus yltricies pulvinar", "createdAt": 1682287126000}' to topic='twitter-topic' with key '6979221936782559328'
2023-04-23 21:58:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:58:56 +0000 2023","id":"8627119116494038721","text":"Maecenas massa porttitor dolor posuere elit Microservices yltricies sit libero elit","user":{"id":"5472812287384676654"}}
2023-04-23 21:58:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas massa porttitor dolor posuere elit Microservices yltricies sit libero elit and sending to kafka topic twitter-topic
2023-04-23 21:58:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5472812287384676654, "id": 8627119116494038721, "text": "Maecenas massa porttitor dolor posuere elit Microservices yltricies sit libero elit", "createdAt": 1682287136000}' to topic='twitter-topic' with key '8627119116494038721'
2023-04-23 21:59:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:06 +0000 2023","id":"4130994705237287518","text":"libero porttitor pulvinar sed massa libero mara porttitor Spring magna posuere mara elit Maecenas massa Maecenas","user":{"id":"5665136099102653375"}}
2023-04-23 21:59:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero porttitor pulvinar sed massa libero mara porttitor Spring magna posuere mara elit Maecenas massa Maecenas and sending to kafka topic twitter-topic
2023-04-23 21:59:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5665136099102653375, "id": 4130994705237287518, "text": "libero porttitor pulvinar sed massa libero mara porttitor Spring magna posuere mara elit Maecenas massa Maecenas", "createdAt": 1682287146000}' to topic='twitter-topic' with key '4130994705237287518'
2023-04-23 21:59:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:16 +0000 2023","id":"2893830938190897997","text":"posuere elit conque sed purus elit amet Elasticsearch adipiscing ipsum dolor massa posuere","user":{"id":"7643834606486137527"}}
2023-04-23 21:59:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere elit conque sed purus elit amet Elasticsearch adipiscing ipsum dolor massa posuere and sending to kafka topic twitter-topic
2023-04-23 21:59:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7643834606486137527, "id": 2893830938190897997, "text": "posuere elit conque sed purus elit amet Elasticsearch adipiscing ipsum dolor massa posuere", "createdAt": 1682287156000}' to topic='twitter-topic' with key '2893830938190897997'
2023-04-23 21:59:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:26 +0000 2023","id":"8478756084641043836","text":"mara sit magna ipsum libero massa sed purus Kafka massa amet lectus malesuada consectetuer libero","user":{"id":"7563498317625724108"}}
2023-04-23 21:59:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara sit magna ipsum libero massa sed purus Kafka massa amet lectus malesuada consectetuer libero and sending to kafka topic twitter-topic
2023-04-23 21:59:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7563498317625724108, "id": 8478756084641043836, "text": "mara sit magna ipsum libero massa sed purus Kafka massa amet lectus malesuada consectetuer libero", "createdAt": 1682287166000}' to topic='twitter-topic' with key '8478756084641043836'
2023-04-23 21:59:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:36 +0000 2023","id":"2978558643326027230","text":"sit dolor pulvinar massa sed Elasticsearch mara consectetuer conque Maecenas","user":{"id":"5054618686282750351"}}
2023-04-23 21:59:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit dolor pulvinar massa sed Elasticsearch mara consectetuer conque Maecenas and sending to kafka topic twitter-topic
2023-04-23 21:59:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5054618686282750351, "id": 2978558643326027230, "text": "sit dolor pulvinar massa sed Elasticsearch mara consectetuer conque Maecenas", "createdAt": 1682287176000}' to topic='twitter-topic' with key '2978558643326027230'
2023-04-23 21:59:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:46 +0000 2023","id":"4724973191895403984","text":"dolor sit Lorem dolor mara Spring consectetuer magna sit","user":{"id":"5159375307105704512"}}
2023-04-23 21:59:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor sit Lorem dolor mara Spring consectetuer magna sit and sending to kafka topic twitter-topic
2023-04-23 21:59:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5159375307105704512, "id": 4724973191895403984, "text": "dolor sit Lorem dolor mara Spring consectetuer magna sit", "createdAt": 1682287186000}' to topic='twitter-topic' with key '4724973191895403984'
2023-04-23 21:59:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 21:59:56 +0000 2023","id":"7585165019672104110","text":"massa porttitor magna Lorem mara Microservices posuere dolor elit purus","user":{"id":"1947663148156786587"}}
2023-04-23 21:59:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa porttitor magna Lorem mara Microservices posuere dolor elit purus and sending to kafka topic twitter-topic
2023-04-23 21:59:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1947663148156786587, "id": 7585165019672104110, "text": "massa porttitor magna Lorem mara Microservices posuere dolor elit purus", "createdAt": 1682287196000}' to topic='twitter-topic' with key '7585165019672104110'
2023-04-23 22:00:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:06 +0000 2023","id":"186352899070855502","text":"massa consectetuer adipiscing malesuada adipiscing pulvinar purus Elasticsearch Maecenas posuere elit sed malesuada mara","user":{"id":"6675112803564653149"}}
2023-04-23 22:00:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa consectetuer adipiscing malesuada adipiscing pulvinar purus Elasticsearch Maecenas posuere elit sed malesuada mara and sending to kafka topic twitter-topic
2023-04-23 22:00:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6675112803564653149, "id": 186352899070855502, "text": "massa consectetuer adipiscing malesuada adipiscing pulvinar purus Elasticsearch Maecenas posuere elit sed malesuada mara", "createdAt": 1682287206000}' to topic='twitter-topic' with key '186352899070855502'
2023-04-23 22:00:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:16 +0000 2023","id":"8945322728083780126","text":"Maecenas pulvinar purus pulvinar amet Elasticsearch ipsum sit elit","user":{"id":"467967944234984849"}}
2023-04-23 22:00:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas pulvinar purus pulvinar amet Elasticsearch ipsum sit elit and sending to kafka topic twitter-topic
2023-04-23 22:00:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 467967944234984849, "id": 8945322728083780126, "text": "Maecenas pulvinar purus pulvinar amet Elasticsearch ipsum sit elit", "createdAt": 1682287216000}' to topic='twitter-topic' with key '8945322728083780126'
2023-04-23 22:00:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:26 +0000 2023","id":"5792724684193349682","text":"consectetuer mara conque purus pulvinar Java consectetuer conque consectetuer Lorem","user":{"id":"6148261327532898208"}}
2023-04-23 22:00:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer mara conque purus pulvinar Java consectetuer conque consectetuer Lorem and sending to kafka topic twitter-topic
2023-04-23 22:00:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6148261327532898208, "id": 5792724684193349682, "text": "consectetuer mara conque purus pulvinar Java consectetuer conque consectetuer Lorem", "createdAt": 1682287226000}' to topic='twitter-topic' with key '5792724684193349682'
2023-04-23 22:00:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:36 +0000 2023","id":"3093230626900802932","text":"massa malesuada massa ipsum sed lectus yltricies Spring massa lectus sed libero sed conque","user":{"id":"6648519647139434528"}}
2023-04-23 22:00:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa malesuada massa ipsum sed lectus yltricies Spring massa lectus sed libero sed conque and sending to kafka topic twitter-topic
2023-04-23 22:00:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6648519647139434528, "id": 3093230626900802932, "text": "massa malesuada massa ipsum sed lectus yltricies Spring massa lectus sed libero sed conque", "createdAt": 1682287236000}' to topic='twitter-topic' with key '3093230626900802932'
2023-04-23 22:00:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:46 +0000 2023","id":"2922693126269888810","text":"consectetuer posuere Lorem pulvinar Microservices conque libero","user":{"id":"6935402124128344499"}}
2023-04-23 22:00:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer posuere Lorem pulvinar Microservices conque libero and sending to kafka topic twitter-topic
2023-04-23 22:00:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6935402124128344499, "id": 2922693126269888810, "text": "consectetuer posuere Lorem pulvinar Microservices conque libero", "createdAt": 1682287246000}' to topic='twitter-topic' with key '2922693126269888810'
2023-04-23 22:00:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:00:56 +0000 2023","id":"5710697704164587467","text":"massa conque purus magna sed lectus Java dolor sit posuere ipsum ipsum","user":{"id":"3488462863778374134"}}
2023-04-23 22:00:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa conque purus magna sed lectus Java dolor sit posuere ipsum ipsum and sending to kafka topic twitter-topic
2023-04-23 22:00:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3488462863778374134, "id": 5710697704164587467, "text": "massa conque purus magna sed lectus Java dolor sit posuere ipsum ipsum", "createdAt": 1682287256000}' to topic='twitter-topic' with key '5710697704164587467'
2023-04-23 22:01:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:06 +0000 2023","id":"5904954431110551497","text":"ipsum elit Maecenas libero ipsum amet Microservices Maecenas Lorem dolor libero adipiscing","user":{"id":"8145201494800157921"}}
2023-04-23 22:01:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum elit Maecenas libero ipsum amet Microservices Maecenas Lorem dolor libero adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:01:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8145201494800157921, "id": 5904954431110551497, "text": "ipsum elit Maecenas libero ipsum amet Microservices Maecenas Lorem dolor libero adipiscing", "createdAt": 1682287266000}' to topic='twitter-topic' with key '5904954431110551497'
2023-04-23 22:01:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:16 +0000 2023","id":"1151124900442112163","text":"libero mara pulvinar dolor yltricies dolor Kafka malesuada massa libero Maecenas yltricies","user":{"id":"2828159179308405061"}}
2023-04-23 22:01:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero mara pulvinar dolor yltricies dolor Kafka malesuada massa libero Maecenas yltricies and sending to kafka topic twitter-topic
2023-04-23 22:01:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2828159179308405061, "id": 1151124900442112163, "text": "libero mara pulvinar dolor yltricies dolor Kafka malesuada massa libero Maecenas yltricies", "createdAt": 1682287276000}' to topic='twitter-topic' with key '1151124900442112163'
2023-04-23 22:01:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:26 +0000 2023","id":"5112437201888712639","text":"dolor adipiscing amet lectus pulvinar adipiscing amet Kafka purus porttitor sed sed amet purus","user":{"id":"4661444492213365425"}}
2023-04-23 22:01:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor adipiscing amet lectus pulvinar adipiscing amet Kafka purus porttitor sed sed amet purus and sending to kafka topic twitter-topic
2023-04-23 22:01:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4661444492213365425, "id": 5112437201888712639, "text": "dolor adipiscing amet lectus pulvinar adipiscing amet Kafka purus porttitor sed sed amet purus", "createdAt": 1682287286000}' to topic='twitter-topic' with key '5112437201888712639'
2023-04-23 22:01:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:36 +0000 2023","id":"1910210041807557259","text":"posuere posuere massa sit Microservices consectetuer consectetuer","user":{"id":"3973593229606703636"}}
2023-04-23 22:01:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere posuere massa sit Microservices consectetuer consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:01:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3973593229606703636, "id": 1910210041807557259, "text": "posuere posuere massa sit Microservices consectetuer consectetuer", "createdAt": 1682287296000}' to topic='twitter-topic' with key '1910210041807557259'
2023-04-23 22:01:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:46 +0000 2023","id":"4445087590367020669","text":"magna elit posuere lectus posuere pulvinar Spring posuere posuere Lorem ipsum","user":{"id":"8629261973175802923"}}
2023-04-23 22:01:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna elit posuere lectus posuere pulvinar Spring posuere posuere Lorem ipsum and sending to kafka topic twitter-topic
2023-04-23 22:01:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8629261973175802923, "id": 4445087590367020669, "text": "magna elit posuere lectus posuere pulvinar Spring posuere posuere Lorem ipsum", "createdAt": 1682287306000}' to topic='twitter-topic' with key '4445087590367020669'
2023-04-23 22:01:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:01:56 +0000 2023","id":"1149141021188563128","text":"lectus Maecenas pulvinar dolor sit sed Spring massa elit elit massa mara","user":{"id":"6066569800976541395"}}
2023-04-23 22:01:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus Maecenas pulvinar dolor sit sed Spring massa elit elit massa mara and sending to kafka topic twitter-topic
2023-04-23 22:01:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6066569800976541395, "id": 1149141021188563128, "text": "lectus Maecenas pulvinar dolor sit sed Spring massa elit elit massa mara", "createdAt": 1682287316000}' to topic='twitter-topic' with key '1149141021188563128'
2023-04-23 22:02:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:06 +0000 2023","id":"6755658253624130844","text":"Maecenas magna sit libero Lorem conque Elasticsearch dolor sit amet Maecenas consectetuer","user":{"id":"8851026265436657774"}}
2023-04-23 22:02:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas magna sit libero Lorem conque Elasticsearch dolor sit amet Maecenas consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:02:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8851026265436657774, "id": 6755658253624130844, "text": "Maecenas magna sit libero Lorem conque Elasticsearch dolor sit amet Maecenas consectetuer", "createdAt": 1682287326000}' to topic='twitter-topic' with key '6755658253624130844'
2023-04-23 22:02:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:16 +0000 2023","id":"7914171562855620857","text":"Lorem magna sit dolor Spring amet adipiscing Maecenas","user":{"id":"8619964133456832305"}}
2023-04-23 22:02:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem magna sit dolor Spring amet adipiscing Maecenas and sending to kafka topic twitter-topic
2023-04-23 22:02:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8619964133456832305, "id": 7914171562855620857, "text": "Lorem magna sit dolor Spring amet adipiscing Maecenas", "createdAt": 1682287336000}' to topic='twitter-topic' with key '7914171562855620857'
2023-04-23 22:02:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:26 +0000 2023","id":"3910056336853530020","text":"consectetuer ipsum posuere yltricies malesuada Maecenas adipiscing magna Kafka lectus consectetuer porttitor porttitor sed lectus posuere","user":{"id":"8756901902880007157"}}
2023-04-23 22:02:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer ipsum posuere yltricies malesuada Maecenas adipiscing magna Kafka lectus consectetuer porttitor porttitor sed lectus posuere and sending to kafka topic twitter-topic
2023-04-23 22:02:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8756901902880007157, "id": 3910056336853530020, "text": "consectetuer ipsum posuere yltricies malesuada Maecenas adipiscing magna Kafka lectus consectetuer porttitor porttitor sed lectus posuere", "createdAt": 1682287346000}' to topic='twitter-topic' with key '3910056336853530020'
2023-04-23 22:02:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:36 +0000 2023","id":"2400809075034561033","text":"sit adipiscing massa massa pulvinar Maecenas Microservices posuere mara magna mara posuere","user":{"id":"7981489168272356898"}}
2023-04-23 22:02:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit adipiscing massa massa pulvinar Maecenas Microservices posuere mara magna mara posuere and sending to kafka topic twitter-topic
2023-04-23 22:02:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7981489168272356898, "id": 2400809075034561033, "text": "sit adipiscing massa massa pulvinar Maecenas Microservices posuere mara magna mara posuere", "createdAt": 1682287356000}' to topic='twitter-topic' with key '2400809075034561033'
2023-04-23 22:02:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:46 +0000 2023","id":"178246700345974117","text":"consectetuer Lorem mara ipsum porttitor magna Kafka porttitor adipiscing conque porttitor","user":{"id":"5630697366920612301"}}
2023-04-23 22:02:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer Lorem mara ipsum porttitor magna Kafka porttitor adipiscing conque porttitor and sending to kafka topic twitter-topic
2023-04-23 22:02:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5630697366920612301, "id": 178246700345974117, "text": "consectetuer Lorem mara ipsum porttitor magna Kafka porttitor adipiscing conque porttitor", "createdAt": 1682287366000}' to topic='twitter-topic' with key '178246700345974117'
2023-04-23 22:02:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:02:56 +0000 2023","id":"8471720945156802503","text":"mara porttitor conque consectetuer Spring elit Lorem magna","user":{"id":"3538628886489357477"}}
2023-04-23 22:02:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara porttitor conque consectetuer Spring elit Lorem magna and sending to kafka topic twitter-topic
2023-04-23 22:02:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3538628886489357477, "id": 8471720945156802503, "text": "mara porttitor conque consectetuer Spring elit Lorem magna", "createdAt": 1682287376000}' to topic='twitter-topic' with key '8471720945156802503'
2023-04-23 22:03:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:06 +0000 2023","id":"8624850118996288948","text":"ipsum Lorem libero ipsum purus adipiscing malesuada Kafka magna porttitor purus libero posuere","user":{"id":"1960308441386055391"}}
2023-04-23 22:03:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum Lorem libero ipsum purus adipiscing malesuada Kafka magna porttitor purus libero posuere and sending to kafka topic twitter-topic
2023-04-23 22:03:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1960308441386055391, "id": 8624850118996288948, "text": "ipsum Lorem libero ipsum purus adipiscing malesuada Kafka magna porttitor purus libero posuere", "createdAt": 1682287386000}' to topic='twitter-topic' with key '8624850118996288948'
2023-04-23 22:03:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:16 +0000 2023","id":"8245425279861835782","text":"posuere ipsum sit Maecenas sit conque Kafka Maecenas pulvinar dolor dolor","user":{"id":"8273381789568573857"}}
2023-04-23 22:03:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere ipsum sit Maecenas sit conque Kafka Maecenas pulvinar dolor dolor and sending to kafka topic twitter-topic
2023-04-23 22:03:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8273381789568573857, "id": 8245425279861835782, "text": "posuere ipsum sit Maecenas sit conque Kafka Maecenas pulvinar dolor dolor", "createdAt": 1682287396000}' to topic='twitter-topic' with key '8245425279861835782'
2023-04-23 22:03:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:26 +0000 2023","id":"7298422870926397558","text":"Maecenas conque malesuada amet elit consectetuer Microservices Maecenas yltricies Lorem mara adipiscing","user":{"id":"8217467768694007362"}}
2023-04-23 22:03:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas conque malesuada amet elit consectetuer Microservices Maecenas yltricies Lorem mara adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:03:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8217467768694007362, "id": 7298422870926397558, "text": "Maecenas conque malesuada amet elit consectetuer Microservices Maecenas yltricies Lorem mara adipiscing", "createdAt": 1682287406000}' to topic='twitter-topic' with key '7298422870926397558'
2023-04-23 22:03:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:36 +0000 2023","id":"646645234696891018","text":"magna sed lectus porttitor adipiscing consectetuer Java purus amet libero mara elit","user":{"id":"3844409092025105397"}}
2023-04-23 22:03:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna sed lectus porttitor adipiscing consectetuer Java purus amet libero mara elit and sending to kafka topic twitter-topic
2023-04-23 22:03:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3844409092025105397, "id": 646645234696891018, "text": "magna sed lectus porttitor adipiscing consectetuer Java purus amet libero mara elit", "createdAt": 1682287416000}' to topic='twitter-topic' with key '646645234696891018'
2023-04-23 22:03:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:46 +0000 2023","id":"7802044872372640530","text":"conque conque magna purus ipsum Microservices libero ipsum adipiscing","user":{"id":"1036240868282835053"}}
2023-04-23 22:03:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque conque magna purus ipsum Microservices libero ipsum adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:03:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1036240868282835053, "id": 7802044872372640530, "text": "conque conque magna purus ipsum Microservices libero ipsum adipiscing", "createdAt": 1682287426000}' to topic='twitter-topic' with key '7802044872372640530'
2023-04-23 22:03:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:03:56 +0000 2023","id":"5510176626037434611","text":"adipiscing amet Maecenas magna elit magna Spring sit amet Maecenas porttitor ipsum","user":{"id":"7094983953403309996"}}
2023-04-23 22:03:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing amet Maecenas magna elit magna Spring sit amet Maecenas porttitor ipsum and sending to kafka topic twitter-topic
2023-04-23 22:03:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7094983953403309996, "id": 5510176626037434611, "text": "adipiscing amet Maecenas magna elit magna Spring sit amet Maecenas porttitor ipsum", "createdAt": 1682287436000}' to topic='twitter-topic' with key '5510176626037434611'
2023-04-23 22:04:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:06 +0000 2023","id":"6688615731952761328","text":"mara Maecenas porttitor consectetuer Spring adipiscing mara adipiscing","user":{"id":"5326536328899358782"}}
2023-04-23 22:04:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara Maecenas porttitor consectetuer Spring adipiscing mara adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:04:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5326536328899358782, "id": 6688615731952761328, "text": "mara Maecenas porttitor consectetuer Spring adipiscing mara adipiscing", "createdAt": 1682287446000}' to topic='twitter-topic' with key '6688615731952761328'
2023-04-23 22:04:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:16 +0000 2023","id":"7475917656775369888","text":"sed consectetuer Maecenas sed sed Spring lectus adipiscing ipsum","user":{"id":"7923221662400619807"}}
2023-04-23 22:04:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed consectetuer Maecenas sed sed Spring lectus adipiscing ipsum and sending to kafka topic twitter-topic
2023-04-23 22:04:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7923221662400619807, "id": 7475917656775369888, "text": "sed consectetuer Maecenas sed sed Spring lectus adipiscing ipsum", "createdAt": 1682287456000}' to topic='twitter-topic' with key '7475917656775369888'
2023-04-23 22:04:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:26 +0000 2023","id":"2387623875241516151","text":"ipsum consectetuer sit Lorem Microservices Maecenas pulvinar","user":{"id":"293940984868293808"}}
2023-04-23 22:04:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum consectetuer sit Lorem Microservices Maecenas pulvinar and sending to kafka topic twitter-topic
2023-04-23 22:04:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 293940984868293808, "id": 2387623875241516151, "text": "ipsum consectetuer sit Lorem Microservices Maecenas pulvinar", "createdAt": 1682287466000}' to topic='twitter-topic' with key '2387623875241516151'
2023-04-23 22:04:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:36 +0000 2023","id":"2476703522620149221","text":"Maecenas dolor posuere Lorem libero malesuada Microservices massa Maecenas magna lectus","user":{"id":"177089148626019288"}}
2023-04-23 22:04:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas dolor posuere Lorem libero malesuada Microservices massa Maecenas magna lectus and sending to kafka topic twitter-topic
2023-04-23 22:04:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 177089148626019288, "id": 2476703522620149221, "text": "Maecenas dolor posuere Lorem libero malesuada Microservices massa Maecenas magna lectus", "createdAt": 1682287476000}' to topic='twitter-topic' with key '2476703522620149221'
2023-04-23 22:04:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:46 +0000 2023","id":"6059945765620336249","text":"dolor Maecenas massa purus adipiscing Maecenas consectetuer Kafka massa Lorem sit elit sit porttitor","user":{"id":"2042311305034640698"}}
2023-04-23 22:04:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor Maecenas massa purus adipiscing Maecenas consectetuer Kafka massa Lorem sit elit sit porttitor and sending to kafka topic twitter-topic
2023-04-23 22:04:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2042311305034640698, "id": 6059945765620336249, "text": "dolor Maecenas massa purus adipiscing Maecenas consectetuer Kafka massa Lorem sit elit sit porttitor", "createdAt": 1682287486000}' to topic='twitter-topic' with key '6059945765620336249'
2023-04-23 22:04:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:04:56 +0000 2023","id":"9069696555138607525","text":"porttitor amet Lorem amet mara Lorem purus Elasticsearch elit posuere consectetuer conque Maecenas","user":{"id":"3566887825176708221"}}
2023-04-23 22:04:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor amet Lorem amet mara Lorem purus Elasticsearch elit posuere consectetuer conque Maecenas and sending to kafka topic twitter-topic
2023-04-23 22:04:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3566887825176708221, "id": 9069696555138607525, "text": "porttitor amet Lorem amet mara Lorem purus Elasticsearch elit posuere consectetuer conque Maecenas", "createdAt": 1682287496000}' to topic='twitter-topic' with key '9069696555138607525'
2023-04-23 22:05:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:06 +0000 2023","id":"715685335055986079","text":"purus pulvinar sed consectetuer consectetuer pulvinar libero adipiscing Elasticsearch purus lectus yltricies magna purus malesuada","user":{"id":"3518904517830628023"}}
2023-04-23 22:05:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus pulvinar sed consectetuer consectetuer pulvinar libero adipiscing Elasticsearch purus lectus yltricies magna purus malesuada and sending to kafka topic twitter-topic
2023-04-23 22:05:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3518904517830628023, "id": 715685335055986079, "text": "purus pulvinar sed consectetuer consectetuer pulvinar libero adipiscing Elasticsearch purus lectus yltricies magna purus malesuada", "createdAt": 1682287506000}' to topic='twitter-topic' with key '715685335055986079'
2023-04-23 22:05:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:16 +0000 2023","id":"2026288501913418283","text":"sed elit amet pulvinar libero mara purus ipsum Elasticsearch elit Lorem conque porttitor dolor porttitor","user":{"id":"848033258992273785"}}
2023-04-23 22:05:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed elit amet pulvinar libero mara purus ipsum Elasticsearch elit Lorem conque porttitor dolor porttitor and sending to kafka topic twitter-topic
2023-04-23 22:05:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 848033258992273785, "id": 2026288501913418283, "text": "sed elit amet pulvinar libero mara purus ipsum Elasticsearch elit Lorem conque porttitor dolor porttitor", "createdAt": 1682287516000}' to topic='twitter-topic' with key '2026288501913418283'
2023-04-23 22:05:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:26 +0000 2023","id":"2170247452059023119","text":"ipsum purus posuere conque sed purus purus Elasticsearch consectetuer Lorem libero lectus sed","user":{"id":"6096607171427533692"}}
2023-04-23 22:05:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum purus posuere conque sed purus purus Elasticsearch consectetuer Lorem libero lectus sed and sending to kafka topic twitter-topic
2023-04-23 22:05:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6096607171427533692, "id": 2170247452059023119, "text": "ipsum purus posuere conque sed purus purus Elasticsearch consectetuer Lorem libero lectus sed", "createdAt": 1682287526000}' to topic='twitter-topic' with key '2170247452059023119'
2023-04-23 22:05:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:36 +0000 2023","id":"8836045583745395661","text":"Maecenas pulvinar sed libero elit Spring libero libero magna","user":{"id":"6701009411866922277"}}
2023-04-23 22:05:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas pulvinar sed libero elit Spring libero libero magna and sending to kafka topic twitter-topic
2023-04-23 22:05:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6701009411866922277, "id": 8836045583745395661, "text": "Maecenas pulvinar sed libero elit Spring libero libero magna", "createdAt": 1682287536000}' to topic='twitter-topic' with key '8836045583745395661'
2023-04-23 22:05:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:46 +0000 2023","id":"4889124029416822791","text":"porttitor ipsum yltricies pulvinar magna libero malesuada purus Kafka Lorem ipsum pulvinar massa libero amet","user":{"id":"5201864994222728931"}}
2023-04-23 22:05:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor ipsum yltricies pulvinar magna libero malesuada purus Kafka Lorem ipsum pulvinar massa libero amet and sending to kafka topic twitter-topic
2023-04-23 22:05:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5201864994222728931, "id": 4889124029416822791, "text": "porttitor ipsum yltricies pulvinar magna libero malesuada purus Kafka Lorem ipsum pulvinar massa libero amet", "createdAt": 1682287546000}' to topic='twitter-topic' with key '4889124029416822791'
2023-04-23 22:05:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:05:56 +0000 2023","id":"5392256450738532233","text":"conque adipiscing magna pulvinar purus amet massa Microservices Lorem amet massa porttitor ipsum conque","user":{"id":"21942265733374693"}}
2023-04-23 22:05:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque adipiscing magna pulvinar purus amet massa Microservices Lorem amet massa porttitor ipsum conque and sending to kafka topic twitter-topic
2023-04-23 22:05:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 21942265733374693, "id": 5392256450738532233, "text": "conque adipiscing magna pulvinar purus amet massa Microservices Lorem amet massa porttitor ipsum conque", "createdAt": 1682287556000}' to topic='twitter-topic' with key '5392256450738532233'
2023-04-23 22:06:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:06 +0000 2023","id":"4528668313130550705","text":"dolor consectetuer conque ipsum consectetuer consectetuer Kafka malesuada mara lectus adipiscing","user":{"id":"2144285711969103231"}}
2023-04-23 22:06:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor consectetuer conque ipsum consectetuer consectetuer Kafka malesuada mara lectus adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:06:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2144285711969103231, "id": 4528668313130550705, "text": "dolor consectetuer conque ipsum consectetuer consectetuer Kafka malesuada mara lectus adipiscing", "createdAt": 1682287566000}' to topic='twitter-topic' with key '4528668313130550705'
2023-04-23 22:06:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:16 +0000 2023","id":"1288066906788326042","text":"Lorem pulvinar sit conque Elasticsearch mara libero conque","user":{"id":"433836102015903741"}}
2023-04-23 22:06:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem pulvinar sit conque Elasticsearch mara libero conque and sending to kafka topic twitter-topic
2023-04-23 22:06:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 433836102015903741, "id": 1288066906788326042, "text": "Lorem pulvinar sit conque Elasticsearch mara libero conque", "createdAt": 1682287576000}' to topic='twitter-topic' with key '1288066906788326042'
2023-04-23 22:06:26 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:26 +0000 2023","id":"9029488891337279114","text":"purus pulvinar pulvinar Lorem libero lectus amet consectetuer Java consectetuer pulvinar Maecenas sed adipiscing massa Lorem","user":{"id":"3883209192146019414"}}
2023-04-23 22:06:26 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: purus pulvinar pulvinar Lorem libero lectus amet consectetuer Java consectetuer pulvinar Maecenas sed adipiscing massa Lorem and sending to kafka topic twitter-topic
2023-04-23 22:06:26 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3883209192146019414, "id": 9029488891337279114, "text": "purus pulvinar pulvinar Lorem libero lectus amet consectetuer Java consectetuer pulvinar Maecenas sed adipiscing massa Lorem", "createdAt": 1682287586000}' to topic='twitter-topic' with key '9029488891337279114'
2023-04-23 22:06:36 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:36 +0000 2023","id":"244287532474999011","text":"Maecenas massa consectetuer magna yltricies libero sit Kafka massa dolor amet lectus malesuada","user":{"id":"8195677208915919433"}}
2023-04-23 22:06:36 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas massa consectetuer magna yltricies libero sit Kafka massa dolor amet lectus malesuada and sending to kafka topic twitter-topic
2023-04-23 22:06:36 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8195677208915919433, "id": 244287532474999011, "text": "Maecenas massa consectetuer magna yltricies libero sit Kafka massa dolor amet lectus malesuada", "createdAt": 1682287596000}' to topic='twitter-topic' with key '244287532474999011'
2023-04-23 22:06:46 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:46 +0000 2023","id":"899068191115602271","text":"massa amet posuere yltricies yltricies amet sed malesuada Java malesuada conque mara ipsum posuere Maecenas porttitor","user":{"id":"8821450402310584435"}}
2023-04-23 22:06:46 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa amet posuere yltricies yltricies amet sed malesuada Java malesuada conque mara ipsum posuere Maecenas porttitor and sending to kafka topic twitter-topic
2023-04-23 22:06:46 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8821450402310584435, "id": 899068191115602271, "text": "massa amet posuere yltricies yltricies amet sed malesuada Java malesuada conque mara ipsum posuere Maecenas porttitor", "createdAt": 1682287606000}' to topic='twitter-topic' with key '899068191115602271'
2023-04-23 22:06:56 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:06:56 +0000 2023","id":"8056519196529762021","text":"massa Maecenas massa massa massa adipiscing Microservices mara porttitor sed malesuada","user":{"id":"2940545067891165760"}}
2023-04-23 22:06:56 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa Maecenas massa massa massa adipiscing Microservices mara porttitor sed malesuada and sending to kafka topic twitter-topic
2023-04-23 22:06:56 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2940545067891165760, "id": 8056519196529762021, "text": "massa Maecenas massa massa massa adipiscing Microservices mara porttitor sed malesuada", "createdAt": 1682287616000}' to topic='twitter-topic' with key '8056519196529762021'
2023-04-23 22:07:06 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:06 +0000 2023","id":"4624768261167782951","text":"Maecenas malesuada magna sed porttitor conque Java yltricies sit lectus mara Lorem","user":{"id":"2998899096295716582"}}
2023-04-23 22:07:06 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas malesuada magna sed porttitor conque Java yltricies sit lectus mara Lorem and sending to kafka topic twitter-topic
2023-04-23 22:07:06 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2998899096295716582, "id": 4624768261167782951, "text": "Maecenas malesuada magna sed porttitor conque Java yltricies sit lectus mara Lorem", "createdAt": 1682287626000}' to topic='twitter-topic' with key '4624768261167782951'
2023-04-23 22:07:16 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:16 +0000 2023","id":"6357035300308302144","text":"yltricies Maecenas magna posuere elit porttitor yltricies massa Microservices libero mara posuere conque yltricies posuere malesuada","user":{"id":"1422955108347459778"}}
2023-04-23 22:07:16 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies Maecenas magna posuere elit porttitor yltricies massa Microservices libero mara posuere conque yltricies posuere malesuada and sending to kafka topic twitter-topic
2023-04-23 22:07:16 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1422955108347459778, "id": 6357035300308302144, "text": "yltricies Maecenas magna posuere elit porttitor yltricies massa Microservices libero mara posuere conque yltricies posuere malesuada", "createdAt": 1682287636000}' to topic='twitter-topic' with key '6357035300308302144'
2023-04-23 22:07:27 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:27 +0000 2023","id":"5448837895330001937","text":"porttitor libero lectus sit elit Kafka sit pulvinar Lorem posuere","user":{"id":"7998998647277702893"}}
2023-04-23 22:07:27 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor libero lectus sit elit Kafka sit pulvinar Lorem posuere and sending to kafka topic twitter-topic
2023-04-23 22:07:27 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7998998647277702893, "id": 5448837895330001937, "text": "porttitor libero lectus sit elit Kafka sit pulvinar Lorem posuere", "createdAt": 1682287647000}' to topic='twitter-topic' with key '5448837895330001937'
2023-04-23 22:07:37 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:37 +0000 2023","id":"3616059212517153736","text":"mara libero malesuada massa Spring pulvinar Lorem","user":{"id":"5520907299131446787"}}
2023-04-23 22:07:37 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara libero malesuada massa Spring pulvinar Lorem and sending to kafka topic twitter-topic
2023-04-23 22:07:37 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5520907299131446787, "id": 3616059212517153736, "text": "mara libero malesuada massa Spring pulvinar Lorem", "createdAt": 1682287657000}' to topic='twitter-topic' with key '3616059212517153736'
2023-04-23 22:07:47 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:47 +0000 2023","id":"6626538999663204033","text":"malesuada elit sed conque Elasticsearch amet lectus","user":{"id":"5860865861730932700"}}
2023-04-23 22:07:47 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada elit sed conque Elasticsearch amet lectus and sending to kafka topic twitter-topic
2023-04-23 22:07:47 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5860865861730932700, "id": 6626538999663204033, "text": "malesuada elit sed conque Elasticsearch amet lectus", "createdAt": 1682287667000}' to topic='twitter-topic' with key '6626538999663204033'
2023-04-23 22:07:57 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:07:57 +0000 2023","id":"303149756016901372","text":"posuere lectus massa magna adipiscing ipsum magna Elasticsearch conque conque pulvinar sed massa","user":{"id":"5621572243244863351"}}
2023-04-23 22:07:57 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere lectus massa magna adipiscing ipsum magna Elasticsearch conque conque pulvinar sed massa and sending to kafka topic twitter-topic
2023-04-23 22:07:57 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5621572243244863351, "id": 303149756016901372, "text": "posuere lectus massa magna adipiscing ipsum magna Elasticsearch conque conque pulvinar sed massa", "createdAt": 1682287677000}' to topic='twitter-topic' with key '303149756016901372'
2023-04-23 22:08:07 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:08:07 +0000 2023","id":"1403087142916239986","text":"Maecenas consectetuer malesuada magna elit Kafka sit Lorem elit","user":{"id":"8106731336709119702"}}
2023-04-23 22:08:07 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas consectetuer malesuada magna elit Kafka sit Lorem elit and sending to kafka topic twitter-topic
2023-04-23 22:08:07 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8106731336709119702, "id": 1403087142916239986, "text": "Maecenas consectetuer malesuada magna elit Kafka sit Lorem elit", "createdAt": 1682287687000}' to topic='twitter-topic' with key '1403087142916239986'
2023-04-23 22:09:54 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 22:09:55 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 22:09:55 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 22:09:55 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 22:09:56 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 22:09:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$235dd2b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 22:09:56 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 22:09:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:09:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:09:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682287796460
2023-04-23 22:09:56 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 5ed5b0b0-d84b-4d78-80c1-b247e1ea3113

2023-04-23 22:09:57 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 22:09:57 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 3.032 seconds (JVM running for 3.41)
2023-04-23 22:09:57 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 22:09:57 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 22:09:57 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 22:09:57 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 22:09:57 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 22:09:57 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:09:57 +0000 2023","id":"1660385484988849459","text":"porttitor posuere posuere lectus magna adipiscing Lorem elit Kafka libero purus posuere consectetuer sit sed ipsum","user":{"id":"8321436943413470404"}}
2023-04-23 22:09:57 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor posuere posuere lectus magna adipiscing Lorem elit Kafka libero purus posuere consectetuer sit sed ipsum and sending to kafka topic twitter-topic
2023-04-23 22:09:57 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8321436943413470404, "id": 1660385484988849459, "text": "porttitor posuere posuere lectus magna adipiscing Lorem elit Kafka libero purus posuere consectetuer sit sed ipsum", "createdAt": 1682287797000}' to topic='twitter-topic' with key '1660385484988849459'
2023-04-23 22:09:57 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 22:09:57 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 22:09:57 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 22:09:57 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:09:57 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:09:57 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682287797347
2023-04-23 22:09:57 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 22:10:07 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:07 +0000 2023","id":"7170063395817615327","text":"posuere porttitor consectetuer purus conque adipiscing Java purus sit yltricies sit","user":{"id":"7932220312696103085"}}
2023-04-23 22:10:07 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere porttitor consectetuer purus conque adipiscing Java purus sit yltricies sit and sending to kafka topic twitter-topic
2023-04-23 22:10:07 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7932220312696103085, "id": 7170063395817615327, "text": "posuere porttitor consectetuer purus conque adipiscing Java purus sit yltricies sit", "createdAt": 1682287807000}' to topic='twitter-topic' with key '7170063395817615327'
2023-04-23 22:10:17 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:17 +0000 2023","id":"8242944051456902648","text":"consectetuer malesuada porttitor ipsum pulvinar mara Elasticsearch conque malesuada sed consectetuer","user":{"id":"2459254693734488471"}}
2023-04-23 22:10:17 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer malesuada porttitor ipsum pulvinar mara Elasticsearch conque malesuada sed consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:10:17 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2459254693734488471, "id": 8242944051456902648, "text": "consectetuer malesuada porttitor ipsum pulvinar mara Elasticsearch conque malesuada sed consectetuer", "createdAt": 1682287817000}' to topic='twitter-topic' with key '8242944051456902648'
2023-04-23 22:10:27 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:27 +0000 2023","id":"236588479963854762","text":"amet purus posuere sit conque ipsum Microservices elit malesuada mara porttitor","user":{"id":"6831454624627384383"}}
2023-04-23 22:10:27 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet purus posuere sit conque ipsum Microservices elit malesuada mara porttitor and sending to kafka topic twitter-topic
2023-04-23 22:10:27 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6831454624627384383, "id": 236588479963854762, "text": "amet purus posuere sit conque ipsum Microservices elit malesuada mara porttitor", "createdAt": 1682287827000}' to topic='twitter-topic' with key '236588479963854762'
2023-04-23 22:10:37 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:37 +0000 2023","id":"3304780215043378376","text":"yltricies sit malesuada pulvinar consectetuer elit Microservices porttitor Lorem elit massa sed","user":{"id":"894500095610464848"}}
2023-04-23 22:10:37 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies sit malesuada pulvinar consectetuer elit Microservices porttitor Lorem elit massa sed and sending to kafka topic twitter-topic
2023-04-23 22:10:37 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 894500095610464848, "id": 3304780215043378376, "text": "yltricies sit malesuada pulvinar consectetuer elit Microservices porttitor Lorem elit massa sed", "createdAt": 1682287837000}' to topic='twitter-topic' with key '3304780215043378376'
2023-04-23 22:10:47 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:47 +0000 2023","id":"4131485810264874199","text":"ipsum Lorem dolor ipsum ipsum Microservices massa posuere consectetuer","user":{"id":"4592662723122835931"}}
2023-04-23 22:10:47 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum Lorem dolor ipsum ipsum Microservices massa posuere consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:10:47 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4592662723122835931, "id": 4131485810264874199, "text": "ipsum Lorem dolor ipsum ipsum Microservices massa posuere consectetuer", "createdAt": 1682287847000}' to topic='twitter-topic' with key '4131485810264874199'
2023-04-23 22:10:57 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:10:57 +0000 2023","id":"7517238970432060570","text":"porttitor malesuada consectetuer posuere dolor massa libero Lorem Java porttitor consectetuer sit Maecenas magna yltricies","user":{"id":"1693543495244968463"}}
2023-04-23 22:10:57 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor malesuada consectetuer posuere dolor massa libero Lorem Java porttitor consectetuer sit Maecenas magna yltricies and sending to kafka topic twitter-topic
2023-04-23 22:10:57 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1693543495244968463, "id": 7517238970432060570, "text": "porttitor malesuada consectetuer posuere dolor massa libero Lorem Java porttitor consectetuer sit Maecenas magna yltricies", "createdAt": 1682287857000}' to topic='twitter-topic' with key '7517238970432060570'
2023-04-23 22:11:07 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:07 +0000 2023","id":"3307261031054229616","text":"conque dolor mara posuere sit libero Elasticsearch lectus Lorem ipsum Maecenas","user":{"id":"4319286127521114300"}}
2023-04-23 22:11:07 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque dolor mara posuere sit libero Elasticsearch lectus Lorem ipsum Maecenas and sending to kafka topic twitter-topic
2023-04-23 22:11:07 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4319286127521114300, "id": 3307261031054229616, "text": "conque dolor mara posuere sit libero Elasticsearch lectus Lorem ipsum Maecenas", "createdAt": 1682287867000}' to topic='twitter-topic' with key '3307261031054229616'
2023-04-23 22:11:17 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:17 +0000 2023","id":"2804404260956045459","text":"malesuada purus posuere Microservices Lorem yltricies","user":{"id":"5761399169825682290"}}
2023-04-23 22:11:17 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada purus posuere Microservices Lorem yltricies and sending to kafka topic twitter-topic
2023-04-23 22:11:17 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5761399169825682290, "id": 2804404260956045459, "text": "malesuada purus posuere Microservices Lorem yltricies", "createdAt": 1682287877000}' to topic='twitter-topic' with key '2804404260956045459'
2023-04-23 22:11:27 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:27 +0000 2023","id":"8679753010231149161","text":"Lorem malesuada adipiscing magna porttitor yltricies posuere Kafka dolor purus porttitor pulvinar posuere elit","user":{"id":"4486287082736925827"}}
2023-04-23 22:11:27 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem malesuada adipiscing magna porttitor yltricies posuere Kafka dolor purus porttitor pulvinar posuere elit and sending to kafka topic twitter-topic
2023-04-23 22:11:27 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4486287082736925827, "id": 8679753010231149161, "text": "Lorem malesuada adipiscing magna porttitor yltricies posuere Kafka dolor purus porttitor pulvinar posuere elit", "createdAt": 1682287887000}' to topic='twitter-topic' with key '8679753010231149161'
2023-04-23 22:11:37 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:37 +0000 2023","id":"4994174748090957271","text":"elit pulvinar posuere posuere dolor Java libero Lorem malesuada","user":{"id":"5562831192991239186"}}
2023-04-23 22:11:37 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit pulvinar posuere posuere dolor Java libero Lorem malesuada and sending to kafka topic twitter-topic
2023-04-23 22:11:37 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5562831192991239186, "id": 4994174748090957271, "text": "elit pulvinar posuere posuere dolor Java libero Lorem malesuada", "createdAt": 1682287897000}' to topic='twitter-topic' with key '4994174748090957271'
2023-04-23 22:11:47 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:47 +0000 2023","id":"7707841867482483752","text":"adipiscing Lorem Lorem Maecenas sed amet Maecenas Java magna ipsum sed consectetuer massa purus","user":{"id":"4955979255291548711"}}
2023-04-23 22:11:47 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing Lorem Lorem Maecenas sed amet Maecenas Java magna ipsum sed consectetuer massa purus and sending to kafka topic twitter-topic
2023-04-23 22:11:47 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4955979255291548711, "id": 7707841867482483752, "text": "adipiscing Lorem Lorem Maecenas sed amet Maecenas Java magna ipsum sed consectetuer massa purus", "createdAt": 1682287907000}' to topic='twitter-topic' with key '7707841867482483752'
2023-04-23 22:11:57 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:11:57 +0000 2023","id":"8641269087036744955","text":"dolor dolor sed posuere amet magna purus consectetuer Java sit sit libero dolor consectetuer adipiscing","user":{"id":"7773666613216380659"}}
2023-04-23 22:11:57 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor dolor sed posuere amet magna purus consectetuer Java sit sit libero dolor consectetuer adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:11:57 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7773666613216380659, "id": 8641269087036744955, "text": "dolor dolor sed posuere amet magna purus consectetuer Java sit sit libero dolor consectetuer adipiscing", "createdAt": 1682287917000}' to topic='twitter-topic' with key '8641269087036744955'
2023-04-23 22:11:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (kafka-broker-1/172.18.0.3:9092) could not be established. Broker may not be available.
2023-04-23 22:12:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:74)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1135)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1023)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:548)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:324)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:239)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:12:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 2 (kafka-broker-2/172.18.0.4:9092) could not be established. Broker may not be available.
2023-04-23 22:12:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:74)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1135)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1023)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:548)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:324)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:239)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:12:07 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:12:07 +0000 2023","id":"6305892750325352660","text":"posuere Maecenas amet mara sit porttitor Maecenas elit Spring posuere lectus dolor posuere lectus Lorem","user":{"id":"3983270215375072988"}}
2023-04-23 22:12:07 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere Maecenas amet mara sit porttitor Maecenas elit Spring posuere lectus dolor posuere lectus Lorem and sending to kafka topic twitter-topic
2023-04-23 22:12:07 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3983270215375072988, "id": 6305892750325352660, "text": "posuere Maecenas amet mara sit porttitor Maecenas elit Spring posuere lectus dolor posuere lectus Lorem", "createdAt": 1682287927000}' to topic='twitter-topic' with key '6305892750325352660'
2023-04-23 22:12:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (kafka-broker-1/172.18.0.3:9092) could not be established. Broker may not be available.
2023-04-23 22:12:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (kafka-broker-1/172.18.0.3:9092) could not be established. Broker may not be available.
2023-04-23 22:12:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:23:05 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 22:23:06 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 22:23:06 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 22:23:06 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 22:23:06 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 22:23:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$37c37668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 22:23:06 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 22:23:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:23:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:23:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682288586807
2023-04-23 22:23:07 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 7ac7c4b5-c26f-4344-b782-d2b349ab3e0d

2023-04-23 22:23:07 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 22:23:07 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 2.969 seconds (JVM running for 3.337)
2023-04-23 22:23:07 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 22:23:07 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 22:23:07 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 22:23:07 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 22:23:07 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 22:23:07 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:07 +0000 2023","id":"6355834098596235323","text":"sed purus magna mara Lorem lectus Elasticsearch malesuada posuere massa Maecenas conque","user":{"id":"8270707262861632721"}}
2023-04-23 22:23:07 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed purus magna mara Lorem lectus Elasticsearch malesuada posuere massa Maecenas conque and sending to kafka topic twitter-topic
2023-04-23 22:23:07 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8270707262861632721, "id": 6355834098596235323, "text": "sed purus magna mara Lorem lectus Elasticsearch malesuada posuere massa Maecenas conque", "createdAt": 1682288587000}' to topic='twitter-topic' with key '6355834098596235323'
2023-04-23 22:23:07 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 22:23:07 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 22:23:07 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 22:23:07 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:23:07 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:23:07 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682288587773
2023-04-23 22:23:07 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 22:23:18 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:18 +0000 2023","id":"453165418381902442","text":"yltricies porttitor Lorem dolor Maecenas sed amet Elasticsearch dolor consectetuer yltricies dolor purus malesuada","user":{"id":"3713994679523844832"}}
2023-04-23 22:23:18 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies porttitor Lorem dolor Maecenas sed amet Elasticsearch dolor consectetuer yltricies dolor purus malesuada and sending to kafka topic twitter-topic
2023-04-23 22:23:18 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3713994679523844832, "id": 453165418381902442, "text": "yltricies porttitor Lorem dolor Maecenas sed amet Elasticsearch dolor consectetuer yltricies dolor purus malesuada", "createdAt": 1682288598000}' to topic='twitter-topic' with key '453165418381902442'
2023-04-23 22:23:28 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:28 +0000 2023","id":"3996728410755208782","text":"lectus Lorem libero porttitor magna dolor Microservices Maecenas mara Maecenas Lorem","user":{"id":"5346417889585923903"}}
2023-04-23 22:23:28 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus Lorem libero porttitor magna dolor Microservices Maecenas mara Maecenas Lorem and sending to kafka topic twitter-topic
2023-04-23 22:23:28 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5346417889585923903, "id": 3996728410755208782, "text": "lectus Lorem libero porttitor magna dolor Microservices Maecenas mara Maecenas Lorem", "createdAt": 1682288608000}' to topic='twitter-topic' with key '3996728410755208782'
2023-04-23 22:23:38 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:38 +0000 2023","id":"5082270172888438720","text":"posuere sit consectetuer Maecenas porttitor Spring Maecenas libero sed sit","user":{"id":"2756377895669032676"}}
2023-04-23 22:23:38 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere sit consectetuer Maecenas porttitor Spring Maecenas libero sed sit and sending to kafka topic twitter-topic
2023-04-23 22:23:38 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2756377895669032676, "id": 5082270172888438720, "text": "posuere sit consectetuer Maecenas porttitor Spring Maecenas libero sed sit", "createdAt": 1682288618000}' to topic='twitter-topic' with key '5082270172888438720'
2023-04-23 22:23:48 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:48 +0000 2023","id":"1178652493882660112","text":"yltricies pulvinar sit consectetuer massa Lorem Spring mara consectetuer yltricies posuere purus","user":{"id":"3258416821325332414"}}
2023-04-23 22:23:48 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies pulvinar sit consectetuer massa Lorem Spring mara consectetuer yltricies posuere purus and sending to kafka topic twitter-topic
2023-04-23 22:23:48 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3258416821325332414, "id": 1178652493882660112, "text": "yltricies pulvinar sit consectetuer massa Lorem Spring mara consectetuer yltricies posuere purus", "createdAt": 1682288628000}' to topic='twitter-topic' with key '1178652493882660112'
2023-04-23 22:23:58 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:23:58 +0000 2023","id":"4347711932301375743","text":"malesuada dolor ipsum sed yltricies Java amet Maecenas malesuada purus","user":{"id":"9159363805077952663"}}
2023-04-23 22:23:58 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada dolor ipsum sed yltricies Java amet Maecenas malesuada purus and sending to kafka topic twitter-topic
2023-04-23 22:23:58 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9159363805077952663, "id": 4347711932301375743, "text": "malesuada dolor ipsum sed yltricies Java amet Maecenas malesuada purus", "createdAt": 1682288638000}' to topic='twitter-topic' with key '4347711932301375743'
2023-04-23 22:24:08 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:08 +0000 2023","id":"39049483877603838","text":"lectus sit porttitor pulvinar Lorem Microservices lectus adipiscing purus porttitor","user":{"id":"6950719773178800598"}}
2023-04-23 22:24:08 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus sit porttitor pulvinar Lorem Microservices lectus adipiscing purus porttitor and sending to kafka topic twitter-topic
2023-04-23 22:24:08 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6950719773178800598, "id": 39049483877603838, "text": "lectus sit porttitor pulvinar Lorem Microservices lectus adipiscing purus porttitor", "createdAt": 1682288648000}' to topic='twitter-topic' with key '39049483877603838'
2023-04-23 22:24:18 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:18 +0000 2023","id":"48743389919853883","text":"libero yltricies lectus libero pulvinar malesuada pulvinar Elasticsearch yltricies libero massa adipiscing posuere","user":{"id":"2956787592004830321"}}
2023-04-23 22:24:18 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero yltricies lectus libero pulvinar malesuada pulvinar Elasticsearch yltricies libero massa adipiscing posuere and sending to kafka topic twitter-topic
2023-04-23 22:24:18 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2956787592004830321, "id": 48743389919853883, "text": "libero yltricies lectus libero pulvinar malesuada pulvinar Elasticsearch yltricies libero massa adipiscing posuere", "createdAt": 1682288658000}' to topic='twitter-topic' with key '48743389919853883'
2023-04-23 22:24:28 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:28 +0000 2023","id":"5731994370681525464","text":"amet ipsum posuere Kafka mara posuere","user":{"id":"7818873653113363241"}}
2023-04-23 22:24:28 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet ipsum posuere Kafka mara posuere and sending to kafka topic twitter-topic
2023-04-23 22:24:28 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7818873653113363241, "id": 5731994370681525464, "text": "amet ipsum posuere Kafka mara posuere", "createdAt": 1682288668000}' to topic='twitter-topic' with key '5731994370681525464'
2023-04-23 22:24:38 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:38 +0000 2023","id":"674504099138294273","text":"conque dolor malesuada dolor elit Kafka sed pulvinar conque sit","user":{"id":"1573593362986503998"}}
2023-04-23 22:24:38 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque dolor malesuada dolor elit Kafka sed pulvinar conque sit and sending to kafka topic twitter-topic
2023-04-23 22:24:38 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1573593362986503998, "id": 674504099138294273, "text": "conque dolor malesuada dolor elit Kafka sed pulvinar conque sit", "createdAt": 1682288678000}' to topic='twitter-topic' with key '674504099138294273'
2023-04-23 22:24:48 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:48 +0000 2023","id":"18204945817802964","text":"elit porttitor porttitor posuere adipiscing amet Kafka ipsum Maecenas libero ipsum","user":{"id":"6698158491800236547"}}
2023-04-23 22:24:48 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit porttitor porttitor posuere adipiscing amet Kafka ipsum Maecenas libero ipsum and sending to kafka topic twitter-topic
2023-04-23 22:24:48 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6698158491800236547, "id": 18204945817802964, "text": "elit porttitor porttitor posuere adipiscing amet Kafka ipsum Maecenas libero ipsum", "createdAt": 1682288688000}' to topic='twitter-topic' with key '18204945817802964'
2023-04-23 22:24:58 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:24:58 +0000 2023","id":"3474288656371942283","text":"sed purus conque Spring libero adipiscing","user":{"id":"823971101917139120"}}
2023-04-23 22:24:58 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed purus conque Spring libero adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:24:58 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 823971101917139120, "id": 3474288656371942283, "text": "sed purus conque Spring libero adipiscing", "createdAt": 1682288698000}' to topic='twitter-topic' with key '3474288656371942283'
2023-04-23 22:25:08 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:08 +0000 2023","id":"5606092379866860244","text":"dolor purus massa Microservices Maecenas malesuada","user":{"id":"951741776888133421"}}
2023-04-23 22:25:08 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor purus massa Microservices Maecenas malesuada and sending to kafka topic twitter-topic
2023-04-23 22:25:08 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 951741776888133421, "id": 5606092379866860244, "text": "dolor purus massa Microservices Maecenas malesuada", "createdAt": 1682288708000}' to topic='twitter-topic' with key '5606092379866860244'
2023-04-23 22:25:18 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:18 +0000 2023","id":"8700224241891680721","text":"pulvinar ipsum yltricies ipsum Spring consectetuer malesuada","user":{"id":"7067760209594233709"}}
2023-04-23 22:25:18 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar ipsum yltricies ipsum Spring consectetuer malesuada and sending to kafka topic twitter-topic
2023-04-23 22:25:18 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7067760209594233709, "id": 8700224241891680721, "text": "pulvinar ipsum yltricies ipsum Spring consectetuer malesuada", "createdAt": 1682288718000}' to topic='twitter-topic' with key '8700224241891680721'
2023-04-23 22:25:28 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:28 +0000 2023","id":"1164094215524512160","text":"porttitor malesuada libero magna lectus magna Spring yltricies magna magna conque posuere","user":{"id":"4226847878134830803"}}
2023-04-23 22:25:28 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor malesuada libero magna lectus magna Spring yltricies magna magna conque posuere and sending to kafka topic twitter-topic
2023-04-23 22:25:28 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4226847878134830803, "id": 1164094215524512160, "text": "porttitor malesuada libero magna lectus magna Spring yltricies magna magna conque posuere", "createdAt": 1682288728000}' to topic='twitter-topic' with key '1164094215524512160'
2023-04-23 22:25:38 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:38 +0000 2023","id":"2984492936719666762","text":"porttitor porttitor massa Microservices massa malesuada","user":{"id":"426365826547749298"}}
2023-04-23 22:25:38 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor porttitor massa Microservices massa malesuada and sending to kafka topic twitter-topic
2023-04-23 22:25:38 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 426365826547749298, "id": 2984492936719666762, "text": "porttitor porttitor massa Microservices massa malesuada", "createdAt": 1682288738000}' to topic='twitter-topic' with key '2984492936719666762'
2023-04-23 22:25:48 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:48 +0000 2023","id":"7896668869940713063","text":"sed yltricies conque adipiscing malesuada purus libero dolor Kafka purus pulvinar Maecenas malesuada posuere sit","user":{"id":"6017994971221875330"}}
2023-04-23 22:25:48 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed yltricies conque adipiscing malesuada purus libero dolor Kafka purus pulvinar Maecenas malesuada posuere sit and sending to kafka topic twitter-topic
2023-04-23 22:25:48 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6017994971221875330, "id": 7896668869940713063, "text": "sed yltricies conque adipiscing malesuada purus libero dolor Kafka purus pulvinar Maecenas malesuada posuere sit", "createdAt": 1682288748000}' to topic='twitter-topic' with key '7896668869940713063'
2023-04-23 22:25:58 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:25:58 +0000 2023","id":"8015558566316006241","text":"massa purus dolor sit posuere Microservices posuere sit malesuada magna","user":{"id":"3002857345584567836"}}
2023-04-23 22:25:58 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa purus dolor sit posuere Microservices posuere sit malesuada magna and sending to kafka topic twitter-topic
2023-04-23 22:25:58 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3002857345584567836, "id": 8015558566316006241, "text": "massa purus dolor sit posuere Microservices posuere sit malesuada magna", "createdAt": 1682288758000}' to topic='twitter-topic' with key '8015558566316006241'
2023-04-23 22:26:08 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:26:08 +0000 2023","id":"2362015575782906526","text":"porttitor libero purus purus sit sit ipsum Microservices lectus malesuada sed conque purus ipsum","user":{"id":"5026409974524376635"}}
2023-04-23 22:26:08 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor libero purus purus sit sit ipsum Microservices lectus malesuada sed conque purus ipsum and sending to kafka topic twitter-topic
2023-04-23 22:26:08 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5026409974524376635, "id": 2362015575782906526, "text": "porttitor libero purus purus sit sit ipsum Microservices lectus malesuada sed conque purus ipsum", "createdAt": 1682288768000}' to topic='twitter-topic' with key '2362015575782906526'
2023-04-23 22:26:19 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-23 22:26:20 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=97bb194f624d5e0ce9fef4d25257dbb20cb42e40, state=null
2023-04-23 22:26:20 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-23 22:26:20 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-23 22:26:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=43a01e06-b224-3a7b-8c26-c440a2ee9c2d
2023-04-23 22:26:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$c8303284] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-23 22:26:20 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-23 22:26:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:26:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:26:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682288781013
2023-04-23 22:26:21 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: fe9d2a4e-954b-4a2f-9568-596c16d1ca8e

2023-04-23 22:26:21 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-23 22:26:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 2.956 seconds (JVM running for 3.341)
2023-04-23 22:26:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-23 22:26:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-23 22:26:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-23 22:26:21 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-23 22:26:21 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-23 22:26:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:26:21 +0000 2023","id":"6882522659156110624","text":"conque Maecenas elit elit magna porttitor posuere sit Java sit amet yltricies dolor purus Maecenas amet","user":{"id":"1051873713856757263"}}
2023-04-23 22:26:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque Maecenas elit elit magna porttitor posuere sit Java sit amet yltricies dolor purus Maecenas amet and sending to kafka topic twitter-topic
2023-04-23 22:26:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1051873713856757263, "id": 6882522659156110624, "text": "conque Maecenas elit elit magna porttitor posuere sit Java sit amet yltricies dolor purus Maecenas amet", "createdAt": 1682288781000}' to topic='twitter-topic' with key '6882522659156110624'
2023-04-23 22:26:21 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-23 22:26:21 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-23 22:26:21 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-23 22:26:21 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-23 22:26:21 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-23 22:26:21 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1682288781774
2023-04-23 22:26:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: ZTXfSybxQi6gHUVU1iguaQ
2023-04-23 22:26:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:26:31 +0000 2023","id":"7889912472220000088","text":"conque sed dolor dolor Lorem malesuada Kafka lectus massa conque sit massa","user":{"id":"4346479819442956201"}}
2023-04-23 22:26:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque sed dolor dolor Lorem malesuada Kafka lectus massa conque sit massa and sending to kafka topic twitter-topic
2023-04-23 22:26:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4346479819442956201, "id": 7889912472220000088, "text": "conque sed dolor dolor Lorem malesuada Kafka lectus massa conque sit massa", "createdAt": 1682288791000}' to topic='twitter-topic' with key '7889912472220000088'
2023-04-23 22:26:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:26:41 +0000 2023","id":"6196224553857807544","text":"elit consectetuer porttitor Lorem mara Maecenas elit Elasticsearch magna ipsum consectetuer conque consectetuer","user":{"id":"3817882868196035402"}}
2023-04-23 22:26:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit consectetuer porttitor Lorem mara Maecenas elit Elasticsearch magna ipsum consectetuer conque consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:26:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3817882868196035402, "id": 6196224553857807544, "text": "elit consectetuer porttitor Lorem mara Maecenas elit Elasticsearch magna ipsum consectetuer conque consectetuer", "createdAt": 1682288801000}' to topic='twitter-topic' with key '6196224553857807544'
2023-04-23 22:26:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:26:51 +0000 2023","id":"1857279736926412497","text":"pulvinar Maecenas mara porttitor lectus Microservices sit malesuada porttitor","user":{"id":"3325365957590370135"}}
2023-04-23 22:26:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar Maecenas mara porttitor lectus Microservices sit malesuada porttitor and sending to kafka topic twitter-topic
2023-04-23 22:26:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3325365957590370135, "id": 1857279736926412497, "text": "pulvinar Maecenas mara porttitor lectus Microservices sit malesuada porttitor", "createdAt": 1682288811000}' to topic='twitter-topic' with key '1857279736926412497'
2023-04-23 22:27:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:01 +0000 2023","id":"2085991637442166744","text":"adipiscing adipiscing conque amet dolor posuere Lorem amet Kafka Lorem libero yltricies pulvinar Maecenas malesuada lectus","user":{"id":"234431801859091335"}}
2023-04-23 22:27:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing adipiscing conque amet dolor posuere Lorem amet Kafka Lorem libero yltricies pulvinar Maecenas malesuada lectus and sending to kafka topic twitter-topic
2023-04-23 22:27:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 234431801859091335, "id": 2085991637442166744, "text": "adipiscing adipiscing conque amet dolor posuere Lorem amet Kafka Lorem libero yltricies pulvinar Maecenas malesuada lectus", "createdAt": 1682288821000}' to topic='twitter-topic' with key '2085991637442166744'
2023-04-23 22:27:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:11 +0000 2023","id":"5295512745105522810","text":"libero dolor consectetuer Kafka adipiscing posuere","user":{"id":"5746126219228046070"}}
2023-04-23 22:27:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero dolor consectetuer Kafka adipiscing posuere and sending to kafka topic twitter-topic
2023-04-23 22:27:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5746126219228046070, "id": 5295512745105522810, "text": "libero dolor consectetuer Kafka adipiscing posuere", "createdAt": 1682288831000}' to topic='twitter-topic' with key '5295512745105522810'
2023-04-23 22:27:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:21 +0000 2023","id":"2601320350988928557","text":"Maecenas libero mara conque magna magna posuere Microservices purus sit pulvinar libero malesuada dolor","user":{"id":"137258649438158395"}}
2023-04-23 22:27:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas libero mara conque magna magna posuere Microservices purus sit pulvinar libero malesuada dolor and sending to kafka topic twitter-topic
2023-04-23 22:27:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 137258649438158395, "id": 2601320350988928557, "text": "Maecenas libero mara conque magna magna posuere Microservices purus sit pulvinar libero malesuada dolor", "createdAt": 1682288841000}' to topic='twitter-topic' with key '2601320350988928557'
2023-04-23 22:27:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:31 +0000 2023","id":"2193040852884091125","text":"amet consectetuer elit porttitor Elasticsearch Lorem lectus magna","user":{"id":"7275407390196734347"}}
2023-04-23 22:27:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet consectetuer elit porttitor Elasticsearch Lorem lectus magna and sending to kafka topic twitter-topic
2023-04-23 22:27:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7275407390196734347, "id": 2193040852884091125, "text": "amet consectetuer elit porttitor Elasticsearch Lorem lectus magna", "createdAt": 1682288851000}' to topic='twitter-topic' with key '2193040852884091125'
2023-04-23 22:27:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:41 +0000 2023","id":"7822680555756186385","text":"dolor adipiscing purus Lorem sed Elasticsearch pulvinar lectus pulvinar","user":{"id":"8598073109633343101"}}
2023-04-23 22:27:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor adipiscing purus Lorem sed Elasticsearch pulvinar lectus pulvinar and sending to kafka topic twitter-topic
2023-04-23 22:27:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8598073109633343101, "id": 7822680555756186385, "text": "dolor adipiscing purus Lorem sed Elasticsearch pulvinar lectus pulvinar", "createdAt": 1682288861000}' to topic='twitter-topic' with key '7822680555756186385'
2023-04-23 22:27:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:27:51 +0000 2023","id":"3433173444289532173","text":"consectetuer amet yltricies conque consectetuer conque magna porttitor Kafka amet porttitor adipiscing adipiscing elit Maecenas","user":{"id":"7802923982073262501"}}
2023-04-23 22:27:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer amet yltricies conque consectetuer conque magna porttitor Kafka amet porttitor adipiscing adipiscing elit Maecenas and sending to kafka topic twitter-topic
2023-04-23 22:27:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7802923982073262501, "id": 3433173444289532173, "text": "consectetuer amet yltricies conque consectetuer conque magna porttitor Kafka amet porttitor adipiscing adipiscing elit Maecenas", "createdAt": 1682288871000}' to topic='twitter-topic' with key '3433173444289532173'
2023-04-23 22:28:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:01 +0000 2023","id":"6968558749274315926","text":"magna libero dolor ipsum conque yltricies Kafka mara lectus malesuada lectus Lorem","user":{"id":"7651157908743635337"}}
2023-04-23 22:28:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna libero dolor ipsum conque yltricies Kafka mara lectus malesuada lectus Lorem and sending to kafka topic twitter-topic
2023-04-23 22:28:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7651157908743635337, "id": 6968558749274315926, "text": "magna libero dolor ipsum conque yltricies Kafka mara lectus malesuada lectus Lorem", "createdAt": 1682288881000}' to topic='twitter-topic' with key '6968558749274315926'
2023-04-23 22:28:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:11 +0000 2023","id":"3389437418896660840","text":"consectetuer yltricies elit magna pulvinar Spring conque pulvinar yltricies","user":{"id":"8499338849725412019"}}
2023-04-23 22:28:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: consectetuer yltricies elit magna pulvinar Spring conque pulvinar yltricies and sending to kafka topic twitter-topic
2023-04-23 22:28:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8499338849725412019, "id": 3389437418896660840, "text": "consectetuer yltricies elit magna pulvinar Spring conque pulvinar yltricies", "createdAt": 1682288891000}' to topic='twitter-topic' with key '3389437418896660840'
2023-04-23 22:28:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:21 +0000 2023","id":"3565541018797456356","text":"libero pulvinar consectetuer yltricies Kafka mara adipiscing magna","user":{"id":"6950170755319635076"}}
2023-04-23 22:28:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero pulvinar consectetuer yltricies Kafka mara adipiscing magna and sending to kafka topic twitter-topic
2023-04-23 22:28:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6950170755319635076, "id": 3565541018797456356, "text": "libero pulvinar consectetuer yltricies Kafka mara adipiscing magna", "createdAt": 1682288901000}' to topic='twitter-topic' with key '3565541018797456356'
2023-04-23 22:28:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:31 +0000 2023","id":"215414372863788234","text":"Maecenas Lorem sed Java pulvinar consectetuer","user":{"id":"5668476794438426239"}}
2023-04-23 22:28:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Maecenas Lorem sed Java pulvinar consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:28:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5668476794438426239, "id": 215414372863788234, "text": "Maecenas Lorem sed Java pulvinar consectetuer", "createdAt": 1682288911000}' to topic='twitter-topic' with key '215414372863788234'
2023-04-23 22:28:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:41 +0000 2023","id":"7998841406889772146","text":"yltricies yltricies pulvinar magna purus Elasticsearch elit pulvinar yltricies","user":{"id":"6765141669945746253"}}
2023-04-23 22:28:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: yltricies yltricies pulvinar magna purus Elasticsearch elit pulvinar yltricies and sending to kafka topic twitter-topic
2023-04-23 22:28:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6765141669945746253, "id": 7998841406889772146, "text": "yltricies yltricies pulvinar magna purus Elasticsearch elit pulvinar yltricies", "createdAt": 1682288921000}' to topic='twitter-topic' with key '7998841406889772146'
2023-04-23 22:28:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:28:51 +0000 2023","id":"1388083427025131222","text":"magna ipsum sit magna lectus Maecenas massa consectetuer Java magna Lorem porttitor conque posuere amet sit","user":{"id":"4472371691359855009"}}
2023-04-23 22:28:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna ipsum sit magna lectus Maecenas massa consectetuer Java magna Lorem porttitor conque posuere amet sit and sending to kafka topic twitter-topic
2023-04-23 22:28:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4472371691359855009, "id": 1388083427025131222, "text": "magna ipsum sit magna lectus Maecenas massa consectetuer Java magna Lorem porttitor conque posuere amet sit", "createdAt": 1682288931000}' to topic='twitter-topic' with key '1388083427025131222'
2023-04-23 22:29:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:01 +0000 2023","id":"5515892038470463499","text":"adipiscing posuere adipiscing elit Lorem porttitor Kafka lectus posuere purus porttitor","user":{"id":"8805027994720134407"}}
2023-04-23 22:29:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere adipiscing elit Lorem porttitor Kafka lectus posuere purus porttitor and sending to kafka topic twitter-topic
2023-04-23 22:29:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8805027994720134407, "id": 5515892038470463499, "text": "adipiscing posuere adipiscing elit Lorem porttitor Kafka lectus posuere purus porttitor", "createdAt": 1682288941000}' to topic='twitter-topic' with key '5515892038470463499'
2023-04-23 22:29:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:11 +0000 2023","id":"262246146654265727","text":"massa elit libero porttitor Spring libero pulvinar","user":{"id":"7761538669427382046"}}
2023-04-23 22:29:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa elit libero porttitor Spring libero pulvinar and sending to kafka topic twitter-topic
2023-04-23 22:29:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7761538669427382046, "id": 262246146654265727, "text": "massa elit libero porttitor Spring libero pulvinar", "createdAt": 1682288951000}' to topic='twitter-topic' with key '262246146654265727'
2023-04-23 22:29:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:21 +0000 2023","id":"4599491809046376695","text":"pulvinar dolor purus conque Java porttitor porttitor","user":{"id":"3267121315905434732"}}
2023-04-23 22:29:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar dolor purus conque Java porttitor porttitor and sending to kafka topic twitter-topic
2023-04-23 22:29:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3267121315905434732, "id": 4599491809046376695, "text": "pulvinar dolor purus conque Java porttitor porttitor", "createdAt": 1682288961000}' to topic='twitter-topic' with key '4599491809046376695'
2023-04-23 22:29:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:31 +0000 2023","id":"3877452929911832178","text":"lectus posuere lectus consectetuer libero dolor libero dolor Java pulvinar conque yltricies magna Lorem mara Lorem","user":{"id":"2704602686735773045"}}
2023-04-23 22:29:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus posuere lectus consectetuer libero dolor libero dolor Java pulvinar conque yltricies magna Lorem mara Lorem and sending to kafka topic twitter-topic
2023-04-23 22:29:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2704602686735773045, "id": 3877452929911832178, "text": "lectus posuere lectus consectetuer libero dolor libero dolor Java pulvinar conque yltricies magna Lorem mara Lorem", "createdAt": 1682288971000}' to topic='twitter-topic' with key '3877452929911832178'
2023-04-23 22:29:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:41 +0000 2023","id":"3801120262438859518","text":"adipiscing posuere Lorem adipiscing elit amet Kafka magna sed porttitor conque","user":{"id":"8612676069527440077"}}
2023-04-23 22:29:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing posuere Lorem adipiscing elit amet Kafka magna sed porttitor conque and sending to kafka topic twitter-topic
2023-04-23 22:29:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8612676069527440077, "id": 3801120262438859518, "text": "adipiscing posuere Lorem adipiscing elit amet Kafka magna sed porttitor conque", "createdAt": 1682288981000}' to topic='twitter-topic' with key '3801120262438859518'
2023-04-23 22:29:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:29:51 +0000 2023","id":"4365234149663628793","text":"elit mara porttitor elit pulvinar sit Microservices Lorem magna sit conque","user":{"id":"7417778970035224802"}}
2023-04-23 22:29:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit mara porttitor elit pulvinar sit Microservices Lorem magna sit conque and sending to kafka topic twitter-topic
2023-04-23 22:29:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7417778970035224802, "id": 4365234149663628793, "text": "elit mara porttitor elit pulvinar sit Microservices Lorem magna sit conque", "createdAt": 1682288991000}' to topic='twitter-topic' with key '4365234149663628793'
2023-04-23 22:30:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:01 +0000 2023","id":"5810728234553887953","text":"mara porttitor mara yltricies lectus consectetuer posuere Microservices sit adipiscing lectus massa conque magna","user":{"id":"2928221835912558749"}}
2023-04-23 22:30:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: mara porttitor mara yltricies lectus consectetuer posuere Microservices sit adipiscing lectus massa conque magna and sending to kafka topic twitter-topic
2023-04-23 22:30:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2928221835912558749, "id": 5810728234553887953, "text": "mara porttitor mara yltricies lectus consectetuer posuere Microservices sit adipiscing lectus massa conque magna", "createdAt": 1682289001000}' to topic='twitter-topic' with key '5810728234553887953'
2023-04-23 22:30:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:11 +0000 2023","id":"3373028837354174828","text":"conque libero malesuada adipiscing lectus libero Elasticsearch conque Lorem consectetuer malesuada","user":{"id":"9161761575694209906"}}
2023-04-23 22:30:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque libero malesuada adipiscing lectus libero Elasticsearch conque Lorem consectetuer malesuada and sending to kafka topic twitter-topic
2023-04-23 22:30:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9161761575694209906, "id": 3373028837354174828, "text": "conque libero malesuada adipiscing lectus libero Elasticsearch conque Lorem consectetuer malesuada", "createdAt": 1682289011000}' to topic='twitter-topic' with key '3373028837354174828'
2023-04-23 22:30:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:21 +0000 2023","id":"2583716371180934728","text":"malesuada conque conque elit amet Maecenas dolor Elasticsearch sed sed porttitor conque dolor Lorem","user":{"id":"9025518119362421452"}}
2023-04-23 22:30:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada conque conque elit amet Maecenas dolor Elasticsearch sed sed porttitor conque dolor Lorem and sending to kafka topic twitter-topic
2023-04-23 22:30:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9025518119362421452, "id": 2583716371180934728, "text": "malesuada conque conque elit amet Maecenas dolor Elasticsearch sed sed porttitor conque dolor Lorem", "createdAt": 1682289021000}' to topic='twitter-topic' with key '2583716371180934728'
2023-04-23 22:30:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:31 +0000 2023","id":"1082334546300906711","text":"elit dolor ipsum lectus Spring posuere porttitor conque","user":{"id":"4879478083476713549"}}
2023-04-23 22:30:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit dolor ipsum lectus Spring posuere porttitor conque and sending to kafka topic twitter-topic
2023-04-23 22:30:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4879478083476713549, "id": 1082334546300906711, "text": "elit dolor ipsum lectus Spring posuere porttitor conque", "createdAt": 1682289031000}' to topic='twitter-topic' with key '1082334546300906711'
2023-04-23 22:30:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:41 +0000 2023","id":"3771622921590114461","text":"Lorem sit purus amet amet Microservices sit malesuada adipiscing malesuada","user":{"id":"2454364864192425975"}}
2023-04-23 22:30:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem sit purus amet amet Microservices sit malesuada adipiscing malesuada and sending to kafka topic twitter-topic
2023-04-23 22:30:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2454364864192425975, "id": 3771622921590114461, "text": "Lorem sit purus amet amet Microservices sit malesuada adipiscing malesuada", "createdAt": 1682289041000}' to topic='twitter-topic' with key '3771622921590114461'
2023-04-23 22:30:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:30:51 +0000 2023","id":"1689065138921112915","text":"libero Maecenas magna ipsum dolor mara amet Microservices purus elit ipsum Maecenas elit conque","user":{"id":"6489686163312742361"}}
2023-04-23 22:30:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: libero Maecenas magna ipsum dolor mara amet Microservices purus elit ipsum Maecenas elit conque and sending to kafka topic twitter-topic
2023-04-23 22:30:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6489686163312742361, "id": 1689065138921112915, "text": "libero Maecenas magna ipsum dolor mara amet Microservices purus elit ipsum Maecenas elit conque", "createdAt": 1682289051000}' to topic='twitter-topic' with key '1689065138921112915'
2023-04-23 22:31:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:01 +0000 2023","id":"6012823954152864636","text":"dolor pulvinar massa sed amet lectus elit Elasticsearch amet Maecenas ipsum massa magna","user":{"id":"4524389744584416221"}}
2023-04-23 22:31:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor pulvinar massa sed amet lectus elit Elasticsearch amet Maecenas ipsum massa magna and sending to kafka topic twitter-topic
2023-04-23 22:31:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4524389744584416221, "id": 6012823954152864636, "text": "dolor pulvinar massa sed amet lectus elit Elasticsearch amet Maecenas ipsum massa magna", "createdAt": 1682289061000}' to topic='twitter-topic' with key '6012823954152864636'
2023-04-23 22:31:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:11 +0000 2023","id":"9091828489263705627","text":"Lorem ipsum porttitor dolor mara adipiscing porttitor elit Microservices malesuada ipsum malesuada malesuada massa dolor","user":{"id":"3049148329226619666"}}
2023-04-23 22:31:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: Lorem ipsum porttitor dolor mara adipiscing porttitor elit Microservices malesuada ipsum malesuada malesuada massa dolor and sending to kafka topic twitter-topic
2023-04-23 22:31:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3049148329226619666, "id": 9091828489263705627, "text": "Lorem ipsum porttitor dolor mara adipiscing porttitor elit Microservices malesuada ipsum malesuada malesuada massa dolor", "createdAt": 1682289071000}' to topic='twitter-topic' with key '9091828489263705627'
2023-04-23 22:31:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:21 +0000 2023","id":"4348941102119419932","text":"sed malesuada massa Lorem Lorem posuere purus lectus Elasticsearch elit massa porttitor ipsum amet lectus consectetuer","user":{"id":"5450118883989295264"}}
2023-04-23 22:31:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed malesuada massa Lorem Lorem posuere purus lectus Elasticsearch elit massa porttitor ipsum amet lectus consectetuer and sending to kafka topic twitter-topic
2023-04-23 22:31:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5450118883989295264, "id": 4348941102119419932, "text": "sed malesuada massa Lorem Lorem posuere purus lectus Elasticsearch elit massa porttitor ipsum amet lectus consectetuer", "createdAt": 1682289081000}' to topic='twitter-topic' with key '4348941102119419932'
2023-04-23 22:31:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:31 +0000 2023","id":"8894909060416114424","text":"sed amet amet purus Java mara amet","user":{"id":"4918818268605147438"}}
2023-04-23 22:31:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed amet amet purus Java mara amet and sending to kafka topic twitter-topic
2023-04-23 22:31:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4918818268605147438, "id": 8894909060416114424, "text": "sed amet amet purus Java mara amet", "createdAt": 1682289091000}' to topic='twitter-topic' with key '8894909060416114424'
2023-04-23 22:31:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:41 +0000 2023","id":"6168004303365517073","text":"amet dolor porttitor mara Maecenas ipsum Microservices Maecenas massa malesuada Lorem","user":{"id":"5729076778622975003"}}
2023-04-23 22:31:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet dolor porttitor mara Maecenas ipsum Microservices Maecenas massa malesuada Lorem and sending to kafka topic twitter-topic
2023-04-23 22:31:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5729076778622975003, "id": 6168004303365517073, "text": "amet dolor porttitor mara Maecenas ipsum Microservices Maecenas massa malesuada Lorem", "createdAt": 1682289101000}' to topic='twitter-topic' with key '6168004303365517073'
2023-04-23 22:31:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:31:51 +0000 2023","id":"901381374458110834","text":"sit sit conque malesuada purus Microservices dolor Maecenas magna","user":{"id":"2830562557909838252"}}
2023-04-23 22:31:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sit sit conque malesuada purus Microservices dolor Maecenas magna and sending to kafka topic twitter-topic
2023-04-23 22:31:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2830562557909838252, "id": 901381374458110834, "text": "sit sit conque malesuada purus Microservices dolor Maecenas magna", "createdAt": 1682289111000}' to topic='twitter-topic' with key '901381374458110834'
2023-04-23 22:32:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:01 +0000 2023","id":"4260909847849608162","text":"dolor consectetuer adipiscing posuere lectus mara yltricies Kafka sed adipiscing purus ipsum ipsum","user":{"id":"6450044812204519272"}}
2023-04-23 22:32:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: dolor consectetuer adipiscing posuere lectus mara yltricies Kafka sed adipiscing purus ipsum ipsum and sending to kafka topic twitter-topic
2023-04-23 22:32:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6450044812204519272, "id": 4260909847849608162, "text": "dolor consectetuer adipiscing posuere lectus mara yltricies Kafka sed adipiscing purus ipsum ipsum", "createdAt": 1682289121000}' to topic='twitter-topic' with key '4260909847849608162'
2023-04-23 22:32:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:11 +0000 2023","id":"9110328843826691871","text":"massa yltricies porttitor amet conque Elasticsearch consectetuer yltricies sed adipiscing","user":{"id":"3118153788508222562"}}
2023-04-23 22:32:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa yltricies porttitor amet conque Elasticsearch consectetuer yltricies sed adipiscing and sending to kafka topic twitter-topic
2023-04-23 22:32:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3118153788508222562, "id": 9110328843826691871, "text": "massa yltricies porttitor amet conque Elasticsearch consectetuer yltricies sed adipiscing", "createdAt": 1682289131000}' to topic='twitter-topic' with key '9110328843826691871'
2023-04-23 22:32:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:21 +0000 2023","id":"5956566827989799957","text":"amet ipsum Lorem massa consectetuer purus Kafka Maecenas Lorem adipiscing dolor Lorem","user":{"id":"859314919544082044"}}
2023-04-23 22:32:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet ipsum Lorem massa consectetuer purus Kafka Maecenas Lorem adipiscing dolor Lorem and sending to kafka topic twitter-topic
2023-04-23 22:32:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 859314919544082044, "id": 5956566827989799957, "text": "amet ipsum Lorem massa consectetuer purus Kafka Maecenas Lorem adipiscing dolor Lorem", "createdAt": 1682289141000}' to topic='twitter-topic' with key '5956566827989799957'
2023-04-23 22:32:31 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:31 +0000 2023","id":"8977579256608981312","text":"sed posuere dolor yltricies massa lectus dolor Spring ipsum sit magna Maecenas massa yltricies","user":{"id":"5781691690887207193"}}
2023-04-23 22:32:31 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed posuere dolor yltricies massa lectus dolor Spring ipsum sit magna Maecenas massa yltricies and sending to kafka topic twitter-topic
2023-04-23 22:32:31 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 5781691690887207193, "id": 8977579256608981312, "text": "sed posuere dolor yltricies massa lectus dolor Spring ipsum sit magna Maecenas massa yltricies", "createdAt": 1682289151000}' to topic='twitter-topic' with key '8977579256608981312'
2023-04-23 22:32:41 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:41 +0000 2023","id":"5180593287579658634","text":"adipiscing lectus libero libero purus dolor sit adipiscing Microservices lectus Lorem sit malesuada consectetuer amet","user":{"id":"7631514598291003275"}}
2023-04-23 22:32:41 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: adipiscing lectus libero libero purus dolor sit adipiscing Microservices lectus Lorem sit malesuada consectetuer amet and sending to kafka topic twitter-topic
2023-04-23 22:32:41 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7631514598291003275, "id": 5180593287579658634, "text": "adipiscing lectus libero libero purus dolor sit adipiscing Microservices lectus Lorem sit malesuada consectetuer amet", "createdAt": 1682289161000}' to topic='twitter-topic' with key '5180593287579658634'
2023-04-23 22:32:51 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:32:51 +0000 2023","id":"4016152074604249500","text":"pulvinar amet purus consectetuer lectus amet Kafka adipiscing consectetuer amet magna","user":{"id":"6453452785605675637"}}
2023-04-23 22:32:51 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: pulvinar amet purus consectetuer lectus amet Kafka adipiscing consectetuer amet magna and sending to kafka topic twitter-topic
2023-04-23 22:32:51 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6453452785605675637, "id": 4016152074604249500, "text": "pulvinar amet purus consectetuer lectus amet Kafka adipiscing consectetuer amet magna", "createdAt": 1682289171000}' to topic='twitter-topic' with key '4016152074604249500'
2023-04-23 22:33:01 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:33:01 +0000 2023","id":"6139506894702871597","text":"amet conque ipsum purus pulvinar Elasticsearch purus amet pulvinar","user":{"id":"3874852610344143004"}}
2023-04-23 22:33:01 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: amet conque ipsum purus pulvinar Elasticsearch purus amet pulvinar and sending to kafka topic twitter-topic
2023-04-23 22:33:01 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3874852610344143004, "id": 6139506894702871597, "text": "amet conque ipsum purus pulvinar Elasticsearch purus amet pulvinar", "createdAt": 1682289181000}' to topic='twitter-topic' with key '6139506894702871597'
2023-04-23 22:33:01 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Got error produce response with correlation id 52 on topic-partition twitter-topic-2, retrying (4 attempts left). Error: NOT_LEADER_FOR_PARTITION
2023-04-23 22:33:01 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Received invalid metadata error in produce request on partition twitter-topic-2 due to org.apache.kafka.common.errors.NotLeaderForPartitionException: This server is not the leader for that topic-partition.. Going to request metadata update now
2023-04-23 22:33:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-1:9092 (id: 1 rack: null)
java.net.UnknownHostException: kafka-broker-1: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3: Temporary failure in name resolution
	at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)
	at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:74)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1135)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1023)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:548)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:324)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:239)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:74)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1135)
	at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:1023)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:548)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:324)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:239)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-1:9092 (id: 1 rack: null)
java.net.UnknownHostException: kafka-broker-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-3:9092 (id: 3 rack: null)
java.net.UnknownHostException: kafka-broker-3
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-1:9092 (id: 1 rack: null)
java.net.UnknownHostException: kafka-broker-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:10 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Error connecting to node kafka-broker-1:9092 (id: 1 rack: null)
java.net.UnknownHostException: kafka-broker-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:403)
	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:363)
	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:151)
	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:962)
	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:294)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.sendEligibleCalls(KafkaAdminClient.java:1018)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1260)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1203)
	at java.base/java.lang.Thread.run(Unknown Source)
2023-04-23 22:33:11 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 23 22:33:11 +0000 2023","id":"6709158910305756857","text":"sed lectus posuere magna magna Spring lectus porttitor ipsum pulvinar","user":{"id":"4109222763968673159"}}
2023-04-23 22:33:11 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: sed lectus posuere magna magna Spring lectus porttitor ipsum pulvinar and sending to kafka topic twitter-topic
2023-04-23 22:33:11 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4109222763968673159, "id": 6709158910305756857, "text": "sed lectus posuere magna magna Spring lectus porttitor ipsum pulvinar", "createdAt": 1682289191000}' to topic='twitter-topic' with key '6709158910305756857'
