2023-04-16 01:07:19 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-04-16 01:07:20 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=483142180ed22f2bdc23a1a9f0c273de2b137756, state=null
2023-04-16 01:07:20 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/Gino16/twitter-config-server/config-client.yml'}]
2023-04-16 01:07:20 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2023-04-16 01:07:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=e7714312-c466-3bd4-9e61-6487b83ef283
2023-04-16 01:07:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$a3e547bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-04-16 01:07:21 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-16 01:07:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681607241290
2023-04-16 01:07:21 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 8621c5f6-a0aa-44e1-9093-cd77ab1a0740

2023-04-16 01:07:21 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2023-04-16 01:07:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 2.962 seconds (JVM running for 3.343)
2023-04-16 01:07:21 [main] INFO  c.g.m.t.TwitterToKafkaServiceApplication - Hello world
2023-04-16 01:07:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2023-04-16 01:07:21 [main] INFO  c.g.m.k.client.KafkaAdminClient - Topics: [(name=twitter-topic, internal=false), (name=_schemas, internal=false), (name=__confluent.support.metrics, internal=false)]
2023-04-16 01:07:21 [main] INFO  c.g.m.t.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations!
2023-04-16 01:07:21 [main] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:21 +0000 2023","id":"9084367988206472161","text":"porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere","user":{"id":"1370573043194390136"}}
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere and sending to kafka topic twitter-topic
2023-04-16 01:07:21 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1370573043194390136, "id": 9084367988206472161, "text": "porttitor consectetuer lectus adipiscing lectus sit Microservices Maecenas magna elit lectus posuere", "createdAt": 1681607241000}' to topic='twitter-topic' with key '9084367988206472161'
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-04-16 01:07:22 [pool-3-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-04-16 01:07:22 [pool-3-thread-1] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-04-16 01:07:22 [pool-3-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1681607242031
2023-04-16 01:07:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: rwQhRECgS0-MOyTJcmKKSQ
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:32 +0000 2023","id":"1103452280252016891","text":"magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna","user":{"id":"3661703604319615368"}}
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna and sending to kafka topic twitter-topic
2023-04-16 01:07:32 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 3661703604319615368, "id": 1103452280252016891, "text": "magna Maecenas sit sed pulvinar conque Microservices porttitor sed massa pulvinar magna", "createdAt": 1681607252000}' to topic='twitter-topic' with key '1103452280252016891'
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:42 +0000 2023","id":"5634665042455220377","text":"lectus purus conque magna Microservices posuere conque","user":{"id":"4164385431075119134"}}
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus conque magna Microservices posuere conque and sending to kafka topic twitter-topic
2023-04-16 01:07:42 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4164385431075119134, "id": 5634665042455220377, "text": "lectus purus conque magna Microservices posuere conque", "createdAt": 1681607262000}' to topic='twitter-topic' with key '5634665042455220377'
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:07:52 +0000 2023","id":"5723399214539565935","text":"posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor","user":{"id":"4026827676034660038"}}
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor and sending to kafka topic twitter-topic
2023-04-16 01:07:52 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 4026827676034660038, "id": 5723399214539565935, "text": "posuere malesuada lectus amet conque purus Microservices sit dolor posuere dolor", "createdAt": 1681607272000}' to topic='twitter-topic' with key '5723399214539565935'
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:02 +0000 2023","id":"4442925424697608087","text":"conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque","user":{"id":"6523930873717579356"}}
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque and sending to kafka topic twitter-topic
2023-04-16 01:08:02 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 6523930873717579356, "id": 4442925424697608087, "text": "conque consectetuer libero Maecenas dolor elit Elasticsearch libero purus lectus porttitor conque", "createdAt": 1681607282000}' to topic='twitter-topic' with key '4442925424697608087'
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:12 +0000 2023","id":"264219364140324653","text":"porttitor conque massa Kafka Maecenas porttitor","user":{"id":"1142955766956977922"}}
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: porttitor conque massa Kafka Maecenas porttitor and sending to kafka topic twitter-topic
2023-04-16 01:08:12 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 1142955766956977922, "id": 264219364140324653, "text": "porttitor conque massa Kafka Maecenas porttitor", "createdAt": 1681607292000}' to topic='twitter-topic' with key '264219364140324653'
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:22 +0000 2023","id":"4469222060782071662","text":"ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar","user":{"id":"2610134582343521335"}}
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar and sending to kafka topic twitter-topic
2023-04-16 01:08:22 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 2610134582343521335, "id": 4469222060782071662, "text": "ipsum lectus Maecenas malesuada magna Java libero Maecenas conque pulvinar", "createdAt": 1681607302000}' to topic='twitter-topic' with key '4469222060782071662'
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:32 +0000 2023","id":"8105248834351621053","text":"lectus purus yltricies massa Microservices amet Lorem ipsum","user":{"id":"8073067710391775043"}}
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: lectus purus yltricies massa Microservices amet Lorem ipsum and sending to kafka topic twitter-topic
2023-04-16 01:08:32 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 8073067710391775043, "id": 8105248834351621053, "text": "lectus purus yltricies massa Microservices amet Lorem ipsum", "createdAt": 1681607312000}' to topic='twitter-topic' with key '8105248834351621053'
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:42 +0000 2023","id":"7466407121787575909","text":"elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor","user":{"id":"9148333392496330442"}}
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor and sending to kafka topic twitter-topic
2023-04-16 01:08:42 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 9148333392496330442, "id": 7466407121787575909, "text": "elit posuere purus posuere amet malesuada Kafka magna massa mara libero dolor", "createdAt": 1681607322000}' to topic='twitter-topic' with key '7466407121787575909'
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:08:52 +0000 2023","id":"3336815067076926003","text":"massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus","user":{"id":"7038784139250830759"}}
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus and sending to kafka topic twitter-topic
2023-04-16 01:08:52 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7038784139250830759, "id": 3336815067076926003, "text": "massa consectetuer consectetuer consectetuer purus mara Elasticsearch conque sed adipiscing lectus", "createdAt": 1681607332000}' to topic='twitter-topic' with key '3336815067076926003'
2023-04-16 01:08:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (kafka-broker-1/172.18.0.3:9092) could not be established. Broker may not be available.
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.t.r.impl.MockKafkaStreamRunner - formattedTweetAsRawJson {"created_at":"Sun Apr 16 01:09:02 +0000 2023","id":"3741819421312568797","text":"malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor","user":{"id":"7107386469017707097"}}
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.t.l.TwitterToKafkaStatusListener - Received status: malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor and sending to kafka topic twitter-topic
2023-04-16 01:09:02 [pool-3-thread-1] INFO  c.g.m.k.s.impl.TwitterKafkaProducer - Sending message='{"userId": 7107386469017707097, "id": 3741819421312568797, "text": "malesuada adipiscing yltricies pulvinar dolor Maecenas Maecenas porttitor Microservices adipiscing amet Maecenas adipiscing malesuada consectetuer porttitor", "createdAt": 1681607342000}' to topic='twitter-topic' with key '3741819421312568797'
2023-04-16 01:09:02 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Got error produce response with correlation id 21 on topic-partition twitter-topic-2, retrying (4 attempts left). Error: NOT_LEADER_FOR_PARTITION
2023-04-16 01:09:02 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Received invalid metadata error in produce request on partition twitter-topic-2 due to org.apache.kafka.common.errors.NotLeaderForPartitionException: This server is not the leader for that topic-partition.. Going to request metadata update now
